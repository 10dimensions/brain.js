{"version":3,"sources":["../../src/recurrent/rnn-time-step.js"],"names":["RNNTimeStep","options","inputLookup","inputLookupLength","outputLookup","outputLookupLength","model","outputSize","lastHiddenSize","hiddenLayers","length","outputConnector","RandomMatrix","output","layers","equation","Equation","outputs","equationConnection","equationConnections","initialLayerInputs","getEquation","input","Matrix","inputSize","push","i","max","add","multiply","equations","allMatrices","map","size","createHiddenLayers","Error","hiddenMatrix","property","hasOwnProperty","createOutputMatrix","backpropagate","rawInput","run","runObject","runNumbers","runArrays","count","forecast","forecastNumbers","forecastObjects","forecastArrays","data","trainOpts","Object","assign","constructor","trainDefaults","iterations","errorThresh","log","console","logPeriod","learningRate","callback","callbackPeriod","setSize","formatData","trainInput","trainInputOutput","trainArrays","trainNumbers","error","Infinity","initialize","sum","j","err","trainPattern","isNaN","dataShape","lookup","join","keys","toTable2D","toInputTable2D","toOutputTable2D","bindEquation","errorSum","predictTarget","end","isRunnable","toArray","lastOutput","runInput","weights","equationIndex","result","inputArray","toArrayShort","toObjectPartial","toObject","value","object","totalSize","inputIndex","outputIndex","toArrays","outputMatrix","slice","Float32Array","from","lookupTable","LookupTable","table","datum","array","ArrayLookupTable","formattedData","misclasses","splice","target","errorMSE","errorsAbs","Math","abs","misclass","actual","errors","p","k","defaults","type","name","hiddenLayer","toJSON","json","hiddenSizes","forEach","fromJSON","states","jsonString","JSON","stringify","matrixOrigin","m","stateIndex","state","previousConnectionIndex","left","rows","columns","right","product","connection","indexOf","matrixToString","formatInputData","formatOutputData","toInner","fnString","toString","split","shift","pop","replace","fileName","fnName","toLowerCase","statesRaw","usedFunctionNames","innerFunctionsSwitch","forwardFn","forceForecast","src","zeros","softmax","randomF","sampleI","maxI","Function","RNN","decayRate","smoothEps","regc","clipval"],"mappings":"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","file":"rnn-time-step.js","sourcesContent":["import Matrix from './matrix';\nimport RandomMatrix from './matrix/random-matrix';\nimport Equation from './matrix/equation';\nimport RNN from './rnn';\nimport zeros from '../utilities/zeros';\nimport softmax from './matrix/softmax';\nimport {randomF} from '../utilities/random';\nimport sampleI from './matrix/sample-i';\nimport maxI from './matrix/max-i';\nimport lookup from \"../lookup\";\nimport LookupTable from '../utilities/lookup-table';\nimport ArrayLookupTable from '../utilities/array-lookup-table';\nimport {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  objectsToFloat32Arrays,\n  objectToFloat32Arrays,\n  objectToFloat32Array } from '../utilities/cast';\n\nexport default class RNNTimeStep extends RNN {\n  constructor(options) {\n    super(options);\n    this.inputLookup = null;\n    this.inputLookupLength = null;\n    this.outputLookup = null;\n    this.outputLookupLength = null;\n  }\n\n  createOutputMatrix() {\n    let model = this.model;\n    let outputSize = this.outputSize;\n    let lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n    //whd\n    model.outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    //bd\n    model.output = new RandomMatrix(outputSize, 1, 0.08);\n  }\n\n  bindEquation() {\n    let model = this.model;\n    let hiddenLayers = this.hiddenLayers;\n    let layers = model.hiddenLayers;\n    let equation = new Equation();\n    let outputs = [];\n    let equationConnection = model.equationConnections.length > 0\n      ? model.equationConnections[model.equationConnections.length - 1]\n      : this.initialLayerInputs\n      ;\n\n      // 0 index\n    let output = this.getEquation(equation, equation.input(new Matrix(this.inputSize, 1)), equationConnection[0], layers[0]);\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      output = this.getEquation(equation, output, equationConnection[i], layers[i]);\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\n    model.equations.push(equation);\n  }\n\n  mapModel() {\n    let model = this.model;\n    let hiddenLayers = model.hiddenLayers;\n    let allMatrices = model.allMatrices;\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n\n    this.createHiddenLayers();\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      let hiddenMatrix = hiddenLayers[i];\n      for (let property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    this.createOutputMatrix();\n    if (!model.outputConnector) throw new Error('net.model.outputConnector not set');\n    if (!model.output) throw new Error('net.model.output not set');\n\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n  }\n\n  backpropagate() {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].backpropagate();\n    }\n  }\n\n\n  /**\n   *\n   * @param {number[]|number[][]|object|object[][]} [rawInput]\n   * @returns {number[]|number|object|object[]|object[][]}\n   */\n  run(rawInput) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.run = this.runObject;\n        return this.runObject(rawInput);\n      }\n      this.run = this.runNumbers;\n      return this.runNumbers(rawInput);\n    }\n    this.run = this.runArrays;\n    return this.runArrays(rawInput);\n  }\n\n  forecast(input, count) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.forecast = this.runObject;\n        return this.runObject(input);\n      }\n      this.forecast = this.forecastNumbers;\n      return this.forecastNumbers(input, count);\n    }\n    if (this.outputLookup) {\n      this.forecast = this.forecastObjects;\n      return this.forecastObjects(input, count);\n    }\n    this.forecast = this.forecastArrays;\n    return this.forecastArrays(input, count);\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    this.trainOpts = options = Object.assign({}, this.constructor.trainDefaults, options);\n    const iterations = options.iterations;\n    const errorThresh = options.errorThresh;\n    const log = options.log === true ? console.log : options.log;\n    const logPeriod = options.logPeriod;\n    const learningRate = options.learningRate || this.learningRate;\n    const callback = options.callback;\n    const callbackPeriod = options.callbackPeriod;\n\n    if (this.inputSize === 1 || !this.inputSize) {\n      this.setSize(data);\n    }\n\n    data = this.formatData(data);\n    if (data[0].input) {\n      this.trainInput = this.trainInputOutput;\n    } else if (data[0].length > 0) {\n      if (data[0][0].length > 0) {\n        this.trainInput = this.trainArrays;\n      } else {\n        if (this.inputSize > 1) {\n          data = [data];\n          this.trainInput = this.trainArrays;\n        } else {\n          this.trainInput = this.trainNumbers;\n        }\n      }\n    }\n\n\n    let error = Infinity;\n    let i;\n\n    if (!this.model) {\n      this.initialize();\n    }\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < data.length; j++) {\n        let err = this.trainPattern(data[j], learningRate);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) throw new Error('network error rate is unexpected NaN, check network configurations and try again');\n      if (log && (i % logPeriod === 0)) {\n        log(`iterations: ${ i }, training error: ${ error }`);\n      }\n      if (callback && (i % callbackPeriod === 0)) {\n        callback({ error: error, iterations: i });\n      }\n    }\n\n    return {\n      error: error,\n      iterations: i\n    };\n  }\n\n  setSize(data) {\n    const dataShape = lookup.dataShape(data).join(',');\n    switch(dataShape) {\n      case 'array,array,number':\n      case 'array,object,number':\n      case 'array,datum,array,number':\n      case 'array,datum,object,number':\n        // probably 1\n        break;\n      case 'array,array,array,number':\n        this.inputSize = this.outputSize = data[0][0].length;\n        break;\n      case 'array,array,object,number':\n        this.inputSize = this.outputSize = Object.keys(lookup.toTable2D(data)).length;\n        break;\n      case 'array,datum,array,array,number':\n        this.inputSize = this.outputSize = data[0].input[0].length;\n        break;\n      case 'array,datum,array,object,number':\n        this.inputSize = Object.keys(lookup.toInputTable2D(data)).length;\n        this.outputSize = Object.keys(lookup.toOutputTable2D(data)).length;\n        break;\n      default: throw new Error(`unknown data shape ${ dataShape }`);\n    }\n  }\n\n  trainNumbers(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runNumbers(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[i].runInput([input[i]]);\n    }\n    this.end();\n    return lastOutput.weights[0];\n  }\n\n  forecastNumbers(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput([input[i]]);\n    }\n    const result = [lastOutput.weights[0]];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights[0]);\n    }\n    this.end();\n    return result;\n  }\n\n  runObject(input) {\n    if (this.inputLookup === this.outputLookup) {\n      const inputArray = lookup.toArrayShort(this.inputLookup, input);\n      return lookup.toObjectPartial(this.outputLookup, this.forecastNumbers(inputArray, this.outputLookupLength - inputArray.length), inputArray.length);\n    }\n    return lookup.toObject(this.outputLookup, this.forecastNumbers(lookup.toArray(this.inputLookup, input, this.inputLookupLength), this.outputLookupLength));\n  }\n\n  forecastObjects(input, count) {\n    input = input.map(value => lookup.toArray(this.outputLookup, value, this.outputLookupLength));\n    return this.forecastArrays(input, count).map(value => lookup.toObject(this.outputLookup, value));\n  }\n\n  trainInputOutput(object) {\n    const model = this.model;\n    const input = object.input;\n    const output = object.output;\n    const totalSize = input.length + output.length;\n    const equations = model.equations;\n    while (equations.length < totalSize) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    let equationIndex = 0;\n    for (let inputIndex = 0, max = input.length - 1; inputIndex < max; inputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(input[inputIndex], input[inputIndex + 1]);\n    }\n    errorSum += equations[equationIndex++].predictTarget(input[input.length - 1], output[0]);\n    for (let outputIndex = 0, max = output.length - 1; outputIndex < max; outputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(output[outputIndex], output[outputIndex + 1]);\n    }\n    this.end();\n    return errorSum / totalSize;\n  }\n\n  trainArrays(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runArrays(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    if (this.inputLookup) {\n      input = lookup.toArrays(this.inputLookup, input, this.inputLookupLength);\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      let outputMatrix = equations[i].runInput(input[i]);\n      lastOutput = outputMatrix.weights;\n    }\n    this.end();\n    if (this.outputLookup) {\n      return lookup.toObject(this.outputLookup, lastOutput);\n    }\n    return lastOutput;\n  }\n\n  forecastArrays(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput(input[i]);\n    }\n    const result = [lastOutput.weights];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights.slice(0));\n    }\n    this.end();\n    return result;\n  }\n\n  end() {\n    this.model.equations[this.model.equations.length - 1].runInput(new Float32Array(this.outputSize));\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    const dataShape = lookup.dataShape(data).join(',');\n    const result = [];\n    switch (dataShape) {\n      case 'array,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          result.push(Float32Array.from([data[i]]));\n        }\n        return result;\n      }\n      case 'array,array,number': {\n        if (this.inputSize === 1) {\n          for (let i = 0; i < data.length; i++) {\n            result.push(arrayToFloat32Arrays(data[i]));\n          }\n          return result;\n        }\n\n        for (let i = 0; i < data.length; i++) {\n          result.push(Float32Array.from(data[i]));\n        }\n        return result;\n      }\n      case 'array,object,number': {\n        const lookupTable = new LookupTable(data);\n        for (let i = 0; i < data.length; i++) {\n          result.push(objectToFloat32Arrays(data[i]));\n        }\n        this.inputLookup = lookupTable.table;\n        this.inputLookupLength = lookupTable.length;\n        this.outputLookup = lookupTable.table;\n        this.outputLookupLength = lookupTable.length;\n        return result;\n      }\n      case 'array,datum,array,number': {\n        if (this.inputSize !== 1) {\n          throw new Error('inputSize must be 1 for this data size');\n        }\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: arrayToFloat32Arrays(datum.input),\n            output: arrayToFloat32Arrays(datum.output)\n          });\n        }\n        return result;\n      }\n      case 'array,datum,object,number': {\n        if (this.inputSize === 1) {\n          const inputLookup = new LookupTable(data, 'input');\n          const outputLookup = new LookupTable(data, 'output');\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: objectToFloat32Arrays(datum.input),\n              output: objectToFloat32Arrays(datum.output)\n            });\n            this.inputLookup = inputLookup.table;\n            this.inputLookupLength = inputLookup.length;\n            this.outputLookup = outputLookup.table;\n            this.outputLookupLength = outputLookup.length;\n          }\n          return result;\n        }\n        throw new Error('unknown data shape or configuration');\n      }\n      case 'array,array,array,number': {\n        for (let i = 0; i < data.length; i++) {\n          result.push(arraysToFloat32Arrays(data[i]));\n        }\n        return result;\n      }\n      case 'array,array,object,number': {\n        const lookupTable = new LookupTable(data);\n        for (let i = 0; i < data.length; i++) {\n          const array = [];\n          for (let j = 0; j < data[i].length; j++) {\n            array.push(objectToFloat32Array(data[i][j], lookupTable));\n          }\n          result.push(array);\n        }\n        this.inputLookup = lookupTable.table;\n        this.inputLookupLength = lookupTable.length;\n        this.outputLookup = lookupTable.table;\n        this.outputLookupLength = lookupTable.length;\n        return result;\n      }\n      case 'array,datum,array,array,number': {\n        if (this.inputSize > 1) {\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: arraysToFloat32Arrays(datum.input),\n              output: arraysToFloat32Arrays(datum.output)\n            });\n          }\n        } else {\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: Float32Array.from(datum.input),\n              output: Float32Array.from(datum.output)\n            });\n          }\n        }\n        return result;\n      }\n      case 'array,datum,array,object,number': {\n        const inputLookup = new ArrayLookupTable(data, 'input');\n        const outputLookup = new ArrayLookupTable(data, 'output');\n\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: objectsToFloat32Arrays(datum.input, inputLookup),\n            output: objectsToFloat32Arrays(datum.output, outputLookup)\n          });\n        }\n\n        this.inputLookup = inputLookup.table;\n        this.inputLookupLength = inputLookup.length;\n        this.outputLookup = outputLookup.table;\n        this.outputLookupLength = outputLookup.length;\n        return result;\n      }\n      default: throw new Error('unknown data shape or configuration');\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test(data) {\n    const formattedData = this.formatData(data);\n    // for classification problems\n    const misclasses = [];\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let errorSum = 0;\n    const dataShape = lookup.dataShape(data).join(',');\n    switch (dataShape) {\n      case 'array,array,number': {\n        if (this.inputSize === 1) {\n          for (let i = 0; i < formattedData.length; i++) {\n            const input = formattedData[i];\n            const output = this.run(input.splice(0, input.length - 1));\n            const target = input[input.length - 1][0];\n            const error = target - output;\n            const errorMSE = error * error;\n            errorSum += errorMSE;\n            const errorsAbs = Math.abs(errorMSE);\n            if (errorsAbs > this.trainOpts.errorThresh) {\n              const misclass = data[i];\n              Object.assign(misclass, {\n                value: input,\n                actual: output\n              });\n              misclasses.push(misclass);\n            }\n          }\n          break;\n        }\n      }\n      case 'array,array,array,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(input.splice(0, input.length - 1));\n          const target = input[input.length - 1];\n          let errors = 0;\n          for (let j = 0; j < output.length; j++) {\n            const error = target[j] - output[j];\n            // mse\n            errors += error * error;\n          }\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,object,number':\n      {\n        if (this.inputSize > 1) throw new Error('TODO: too big');\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(lookup.toObjectPartial(this.outputLookup, input, 0, input.length - 1));\n          const target = input[input.length - 1];\n          let errors = 0;\n          let p;\n          for (p in output) {}\n          const error = target[i] - output[p];\n          // mse\n          errors += error * error;\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,array,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const input = formattedData[i];\n          const output = this.run(input.slice(0, input.length - 1));\n          const target = data[i][input.length - 1];\n          let errors = 0;\n          for (const p in output) {\n            const error = target[p] - output[p];\n            // mse\n            errors += error * error;\n          }\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              value: misclass,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,number':\n      case 'array,datum,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          for (let j = 0; j < output.length; j++) {\n            const error = datum.output[j][0] - output[j];\n            errors += error * error;\n          }\n\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            Object.assign(misclass, {\n              actual: this.outputLookup\n                ? lookup.toObject(this.outputLookup, output)\n                : output\n            });\n            misclasses.push(misclass);\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,array,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          for (let j = 0; j < output.length; j++) {\n            for (let k = 0; k < output[j].length; k++) {\n              const error = datum.output[j][k] - output[j][k];\n              errors += error * error;\n            }\n          }\n\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              input: misclass.input,\n              output: misclass.output,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      case 'array,datum,array,object,number': {\n        for (let i = 0; i < formattedData.length; i++) {\n          const datum = formattedData[i];\n          const output = this.forecast(datum.input, datum.output.length);\n          let errors = 0;\n          for (let j = 0; j < output.length; j++) {\n            for (const p in output[j]) {\n              const error = data[i].output[j][p] - output[j][p];\n              errors += error * error;\n            }\n          }\n\n          errorSum += errors;\n          const errorsAbs = Math.abs(errors);\n          if (errorsAbs > this.trainOpts.errorThresh) {\n            const misclass = data[i];\n            misclasses.push({\n              input: misclass.input,\n              output: misclass.output,\n              actual: output\n            });\n          }\n        }\n        break;\n      }\n      default: throw new Error('unimplemented');\n    }\n\n    return {\n      error: errorSum / data.length,\n      misclasses: misclasses\n    };\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const defaults = this.constructor.defaults;\n    if (!this.model) {\n      this.initialize();\n    }\n    let model = this.model;\n    let options = {};\n    for (let p in defaults) {\n      if (defaults.hasOwnProperty(p)) {\n        options[p] = this[p];\n      }\n    }\n\n    return {\n      type: this.constructor.name,\n      options: options,\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        let layers = {};\n        for (let p in hiddenLayer) {\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON()\n    };\n  }\n\n  fromJSON(json) {\n    const defaults = this.constructor.defaults;\n    const options = json.options;\n    this.model = null;\n    this.hiddenLayers = null;\n    const allMatrices = [];\n    const hiddenLayers = [];\n\n    // backward compatibility for hiddenSizes\n    (json.hiddenLayers || json.hiddenSizes).forEach((hiddenLayer) => {\n      let layers = {};\n      for (let p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    Object.assign(this, defaults, options);\n\n    // backward compatibility\n    if (options.hiddenSizes) {\n      this.hiddenLayers = options.hiddenSizes;\n    }\n\n    this.model = {\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    };\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n    this.bindEquation();\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    const model = this.model;\n    const equations = this.model.equations;\n    const inputSize = this.inputSize;\n    const inputLookup = this.inputLookup;\n    const inputLookupLength = this.inputLookupLength;\n    const outputLookup = this.outputLookup;\n    const outputLookupLength = this.outputLookupLength;\n    const equation = equations[1];\n    const states = equation.states;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        let state = states[i];\n\n        if (i === stateIndex) {\n          let j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.product:\n              return `new Matrix(${ m.rows }, ${ m.columns })`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${ i }].product`;\n        if (m === state.right) return `states[${ i }].right`;\n        if (m === state.left) return `states[${ i }].left`;\n      }\n    }\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const states = equations[0].states;\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        let hiddenLayer = model.hiddenLayers[i];\n        for (let p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${ i }].${ p }`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function formatInputData() {\n      if (!inputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupInput(input) {\n            var table = ${ JSON.stringify(inputLookup) };\n            var result = [];\n            for (var p in table) {\n              if (!input.hasOwnProperty(p)) break;\n              result.push(Float32Array.from([input[p]]));\n            }\n            return result;\n          }`;\n        }\n        return `function lookupInput(input) {\n          var table = ${ JSON.stringify(inputLookup) };\n          var result = [];\n          for (var p in table) {\n            result.push(Float32Array.from([input[p]]));\n          }\n          return result;\n        }`;\n      }\n      return `function lookupInput(rawInputs) {\n        var table = ${ JSON.stringify(inputLookup) };\n        var result = [];\n        for (var i = 0; i < rawInputs.length; i++) {\n          var rawInput = rawInputs[i];\n          var input = new Float32Array(${ inputLookupLength });\n          for (var p in table) {\n            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;\n          }\n          result.push(input);\n        }\n        return result;\n      }`;\n    }\n\n    function formatOutputData() {\n      if (!outputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupOutputPartial(output, input) {\n            var table = ${ JSON.stringify(outputLookup) };\n            var offset = input.length;\n            var result = {};\n            var i = 0;\n            for (var p in table) {\n              if (i++ < offset) continue;\n              result[p] = output[table[p] - offset][0];\n            }\n            return result;\n          }`;\n        }\n        return `function lookupOutput(output) {\n          var table = ${ JSON.stringify(outputLookup) };\n          var result = {};\n          for (var p in table) {\n            result[p] = output[table[p]][0];\n          }\n          return result;\n        }`;\n      }\n      return `function lookupOutput(output) {\n        var table = ${ JSON.stringify(outputLookup) };\n        var result = {};\n        for (var p in table) {\n          result[p] = output[table[p]];\n        }\n        return result;\n      }`;\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n\n      return fnString.join('}').split('\\n').join('\\n        ')\n        .replace(\n          'product.weights = _input.weights = _this.inputValue;',\n          inputLookup && inputSize === 1\n            ? 'product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;'\n            : inputSize === 1\n              ? 'product.weights = [input[_i]];'\n              : 'product.weights = input[_i];')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${ fnName.replace(/[A-Z]/g, function(value) { return '-' + value.toLowerCase(); }) }.js`;\n    }\n\n    let statesRaw = [];\n    let usedFunctionNames = {};\n    let innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      let state = states[i];\n      statesRaw.push(`states[${ i }] = {\n      name: '${ state.forwardFn.name }',\n      left: ${ matrixToString(state.left, i) },\n      right: ${ matrixToString(state.right, i) },\n      product: ${ matrixToString(state.product, i) }\n    }`);\n\n      let fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${ fnName }':${ fnName !== 'forwardFn' ? ` //compiled from ${ fileName(fnName) }` : '' }\n          ${ toInner(state.forwardFn.toString()) }\n          break;`\n        );\n      }\n    }\n\n    const forceForecast = this.inputSize === 1 && this.outputLookup;\n    const src = `\n  var input = ${ this.inputLookup ? 'lookupInput(rawInput)' : 'rawInput' };\n  var json = ${ jsonString };\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  var max = ${\n      forceForecast\n        ? inputLookup === outputLookup\n          ? inputLookupLength\n          : `input.length + ${ outputLookupLength - 1 }`\n        : 'input.length' };\n  for (var _i = 0; _i < max; _i++) {\n    prevStates = states;\n    states = [];\n    ${ statesRaw.join(';\\n    ') };\n    for (var stateIndex = 0, stateMax = ${ statesRaw.length }; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      \n      switch (state.name) {\n${ innerFunctionsSwitch.join('\\n') }\n      }\n    }\n    ${ inputSize === 1 && inputLookup ? 'if (_i >= input.length - 1) { output.push(state.product.weights); }' : 'output = state.product.weights;' }\n  }\n  ${\n    outputLookup\n      ? outputLookup === inputLookup\n        ? 'return lookupOutputPartial(output, input)'\n        : 'return lookupOutput(output)'\n      : inputSize === 1\n        ? 'return output[0]'\n        : 'return output'\n  };\n  ${ formatInputData() }\n  ${ formatOutputData() }\n  \n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${ zeros.toString() }\n  ${ softmax.toString().replace('_2.default', 'Matrix') }\n  ${ randomF.toString() }\n  ${ sampleI.toString() }\n  ${ maxI.toString() }`;\n    return new Function('rawInput', src);\n  }\n}\n\nRNNTimeStep.defaults = {\n  inputSize: 1,\n  hiddenLayers: [20],\n  outputSize: 1,\n  learningRate: 0.01,\n  decayRate: 0.999,\n  smoothEps: 1e-8,\n  regc: 0.000001,\n  clipval: 5\n};\n\nRNNTimeStep.trainDefaults = RNN.trainDefaults;\n"]}