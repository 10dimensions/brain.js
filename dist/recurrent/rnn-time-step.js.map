{"version":3,"sources":["../../src/recurrent/rnn-time-step.js"],"names":["RNNTimeStep","options","inputLookup","inputLookupLength","outputLookup","outputLookupLength","model","outputSize","lastHiddenSize","hiddenLayers","length","outputConnector","RandomMatrix","output","layers","equation","Equation","outputs","equationConnection","equationConnections","initialLayerInputs","getEquation","input","Matrix","inputSize","push","i","max","add","multiply","equations","allMatrices","map","size","createHiddenLayers","Error","hiddenMatrix","property","hasOwnProperty","createOutputMatrix","backpropagate","run","runObject","runNumbers","runArrays","count","forecast","forecastNumbers","forecastArrays","data","Object","assign","constructor","trainDefaults","iterations","errorThresh","log","console","logPeriod","learningRate","callback","callbackPeriod","formatData","trainInput","trainInputOutput","trainArrays","trainNumbers","error","Infinity","initialize","sum","j","err","trainPattern","isNaN","bindEquation","errorSum","predictTarget","end","isRunnable","lastOutput","runInput","weights","slice","equationIndex","result","lookup","toObject","toArray","object","totalSize","inputIndex","outputIndex","outputMatrix","Float32Array","Array","isArray","datum","from","name","ArrayLookupTable","table","LookupTable","defaults","p","type","hiddenLayer","toJSON","json","hiddenSizes","forEach","fromJSON","states","jsonString","JSON","stringify","matrixOrigin","m","stateIndex","state","previousConnectionIndex","left","rows","columns","right","product","connection","indexOf","matrixToString","formatInputData","formatOutputData","toInner","fnString","toString","split","shift","join","pop","replace","fileName","fnName","value","toLowerCase","statesRaw","usedFunctionNames","innerFunctionsSwitch","forwardFn","forceForecast","src","zeros","softmax","randomF","sampleI","maxI","Function","RNN","decayRate","smoothEps","regc","clipval"],"mappings":"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","file":"rnn-time-step.js","sourcesContent":["import Matrix from './matrix';\nimport RandomMatrix from './matrix/random-matrix';\nimport Equation from './matrix/equation';\nimport RNN from './rnn';\nimport zeros from '../utilities/zeros';\nimport softmax from './matrix/softmax';\nimport {randomF} from '../utilities/random';\nimport sampleI from './matrix/sample-i';\nimport maxI from './matrix/max-i';\nimport lookup from \"../lookup\";\nimport LookupTable from '../utilities/lookup-table';\nimport ArrayLookupTable from '../utilities/array-lookup-table';\nimport {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  objectsToFloat32Arrays,\n  objectToFloat32Arrays,\n  objectToFloat32Array } from '../utilities/cast';\n\nexport default class RNNTimeStep extends RNN {\n  constructor(options) {\n    super(options);\n    this.inputLookup = null;\n    this.inputLookupLength = null;\n    this.outputLookup = null;\n    this.outputLookupLength = null;\n  }\n\n  createOutputMatrix() {\n    let model = this.model;\n    let outputSize = this.outputSize;\n    let lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n    //whd\n    model.outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    //bd\n    model.output = new RandomMatrix(outputSize, 1, 0.08);\n  }\n\n  bindEquation() {\n    let model = this.model;\n    let hiddenLayers = this.hiddenLayers;\n    let layers = model.hiddenLayers;\n    let equation = new Equation();\n    let outputs = [];\n    let equationConnection = model.equationConnections.length > 0\n      ? model.equationConnections[model.equationConnections.length - 1]\n      : this.initialLayerInputs\n      ;\n\n      // 0 index\n    let output = this.getEquation(equation, equation.input(new Matrix(this.inputSize, 1)), equationConnection[0], layers[0]);\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      output = this.getEquation(equation, output, equationConnection[i], layers[i]);\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\n    model.equations.push(equation);\n  }\n\n  mapModel() {\n    let model = this.model;\n    let hiddenLayers = model.hiddenLayers;\n    let allMatrices = model.allMatrices;\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n\n    this.createHiddenLayers();\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      let hiddenMatrix = hiddenLayers[i];\n      for (let property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    this.createOutputMatrix();\n    if (!model.outputConnector) throw new Error('net.model.outputConnector not set');\n    if (!model.output) throw new Error('net.model.output not set');\n\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n  }\n\n  backpropagate() {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].backpropagate();\n    }\n  }\n\n\n  /**\n   *\n   * @param {Number[]|Number[][]} [input]\n   * @returns {Number[]|Number|Object[]|Object[][]}\n   */\n  run(input = []) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.run = this.runObject;\n        return this.runObject(input);\n      }\n      this.run = this.runNumbers;\n      return this.runNumbers(input);\n    }\n    this.run = this.runArrays;\n    return this.runArrays(input);\n  }\n\n  forecast(input, count) {\n    if (this.inputSize === 1) {\n      this.forecast = this.forecastNumbers;\n      return this.forecastNumbers(input, count);\n    }\n    this.forecast = this.forecastArrays;\n    return this.forecastArrays(input, count);\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    options = Object.assign({}, this.constructor.trainDefaults, options);\n    const iterations = options.iterations;\n    const errorThresh = options.errorThresh;\n    const log = options.log === true ? console.log : options.log;\n    const logPeriod = options.logPeriod;\n    const learningRate = options.learningRate || this.learningRate;\n    const callback = options.callback;\n    const callbackPeriod = options.callbackPeriod;\n    data = this.formatData(data);\n    if (data[0].input) {\n      this.trainInput = this.trainInputOutput;\n    } else if (data[0].length > 0) {\n      if (data[0][0].length > 0) {\n        this.trainInput = this.trainArrays;\n      } else {\n        if (this.inputSize > 1) {\n          data = [data];\n          this.trainInput = this.trainArrays;\n        } else {\n          this.trainInput = this.trainNumbers;\n        }\n      }\n    }\n\n\n    let error = Infinity;\n    let i;\n\n    if (!this.model) {\n      this.initialize();\n    }\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < data.length; j++) {\n        let err = this.trainPattern(data[j], learningRate);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) throw new Error('network error rate is unexpected NaN, check network configurations and try again');\n      if (log && (i % logPeriod === 0)) {\n        log(`iterations: ${ i }, training error: ${ error }`);\n      }\n      if (callback && (i % callbackPeriod === 0)) {\n        callback({ error: error, iterations: i });\n      }\n    }\n\n    return {\n      error: error,\n      iterations: i\n    };\n  }\n\n  trainNumbers(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runNumbers(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[i].runInput([input[i]]);\n    }\n    this.end();\n    return lastOutput.weights.slice(0);\n  }\n\n  forecastNumbers(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput([input[i]]);\n    }\n    const result = [lastOutput.weights[0]];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights[0]);\n    }\n    this.end();\n    return result;\n  }\n\n  runObject(input) {\n    return lookup.toObject(this.outputLookup, this.forecastNumbers(lookup.toArray(this.inputLookup, input, this.inputLookupLength), this.outputLookupLength));\n  }\n\n  trainInputOutput(object) {\n    const model = this.model;\n    const input = object.input;\n    const output = object.output;\n    const totalSize = input.length + output.length;\n    const equations = model.equations;\n    while (equations.length < totalSize) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    let equationIndex = 0;\n    for (let inputIndex = 0, max = input.length - 1; inputIndex < max; inputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(input[inputIndex], input[inputIndex + 1]);\n    }\n    errorSum += equations[equationIndex++].predictTarget(input[input.length - 1], output[0]);\n    for (let outputIndex = 0, max = output.length - 1; outputIndex < max; outputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(output[outputIndex], output[outputIndex + 1]);\n    }\n    this.end();\n    return errorSum / totalSize;\n  }\n\n  trainArrays(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runArrays(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      let outputMatrix = equations[i].runInput(input[i]);\n      lastOutput = outputMatrix.weights;\n    }\n    this.end();\n    if (this.outputLookup) {\n      return lookup.toObject(this.outputLookup, lastOutput);\n    }\n    return lastOutput;\n  }\n\n  forecastArrays(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput(input[i]);\n    }\n    const result = [lastOutput.weights];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights);\n    }\n    this.end();\n    return result;\n  }\n\n  end() {\n    this.model.equations[this.model.equations.length - 1].runInput(new Float32Array(this.outputSize));\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    if (data[0].input) {\n      if (Array.isArray(data[0].input[0])) {\n        if (this.inputSize > 1) {\n          // [{ input: number[][], output: number[][] }] to [{ input: Float32Array[], output: Float32Array[] }]\n          const result = [];\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: arraysToFloat32Arrays(datum.input),\n              output: arraysToFloat32Arrays(datum.output)\n            });\n          }\n          return result;\n        } else {\n          // { input: [[1,4],[2,3]], output: [[3,2],[4,1]] } -> [[1,4],[2,3],[3,2],[4,1]]\n          const result = [];\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: Float32Array.from(datum.input),\n              output: Float32Array.from(datum.output)\n            });\n          }\n          return result;\n        }\n      } else if (Array.isArray(data[0].input)) {\n        if (typeof data[0].input[0] === 'number') {\n          // [{ input: number[], output: number[] }] to [{ input: Float32Array, output: Float32Array }]\n          if (this.inputSize === 1) {\n            const result = [];\n            for (let i = 0; i < data.length; i++) {\n              const datum = data[i];\n              result.push({\n                input: arrayToFloat32Arrays(datum.input),\n                output: arrayToFloat32Arrays(datum.output)\n              });\n            }\n            return result;\n          }\n          throw new Error(`data size too small for brain.${ this.constructor.name }, try brain.NeuralNetwork`);\n        } else {\n          // [{ input: object[], output: object[] }] to [{ input: Float32Array[], output: Float32Array[] }]\n          const inputLookup = new ArrayLookupTable(data, 'input');\n          const outputLookup = new ArrayLookupTable(data, 'output');\n          const result = [];\n\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: objectsToFloat32Arrays(datum.input, inputLookup),\n              output: objectsToFloat32Arrays(datum.output, outputLookup)\n            });\n          }\n\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n          this.outputLookup = outputLookup.table;\n          this.outputLookupLength = outputLookup.length;\n          return result;\n        }\n      } else {\n        // [{ input: object, output: object }] to [{ input: Float32Array, output: Float32Array }]\n        if (this.inputSize === 1) {\n          const inputLookup = new LookupTable(data, 'input');\n          const outputLookup = new LookupTable(data, 'output');\n          const result = [];\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: objectToFloat32Arrays(datum.input),\n              output: objectToFloat32Arrays(datum.output)\n            });\n            this.inputLookup = inputLookup.table;\n            this.inputLookupLength = inputLookup.length;\n            this.outputLookup = outputLookup.table;\n            this.outputLookupLength = outputLookup.length;\n          }\n          return result;\n        } else {\n          const inputLookup = new LookupTable(data, 'input');\n          const outputLookup = new LookupTable(data, 'output');\n          const result = [];\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: objectToFloat32Array(datum.input, inputLookup),\n              output: objectToFloat32Array(datum.output, outputLookup)\n            });\n          }\n\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n          this.outputLookup = outputLookup.table;\n          this.outputLookupLength = outputLookup.length;\n          return result;\n        }\n      }\n    } else if (Array.isArray(data)) {\n      if (Array.isArray(data[0])) {\n        if (this.inputSize > 1) {\n          // number[][][] to Float32Array[][][]\n          if (Array.isArray(data[0][0])) {\n            const result = [];\n            for (let i = 0; i < data.length; i++) {\n              result.push(arraysToFloat32Arrays(data[i]));\n            }\n            return result;\n          } else {\n            // number[][] to Float32Array[][]\n            const result = [];\n            for (let i = 0; i < data.length; i++) {\n              result.push(Float32Array.from(data[i]));\n            }\n            return result;\n          }\n        } else if (this.inputSize === 1) {\n          // number[][] to Float32Array[][][]\n          const result = [];\n          for (let i = 0; i < data.length; i++) {\n            result.push(arrayToFloat32Arrays(data[i]));\n          }\n          return result;\n        }\n      } else {\n        // number[] to Float32Array[]\n        if (this.inputSize === 1) {\n          const result = [];\n          for (let i = 0; i < data.length; i++) {\n            result.push(Float32Array.from([data[i]]));\n          }\n          return result;\n        }\n      }\n    }\n    throw new Error('unhandled data type');\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const defaults = this.constructor.defaults;\n    if (!this.model) {\n      this.initialize();\n    }\n    let model = this.model;\n    let options = {};\n    for (let p in defaults) {\n      if (defaults.hasOwnProperty(p)) {\n        options[p] = this[p];\n      }\n    }\n\n    return {\n      type: this.constructor.name,\n      options: options,\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        let layers = {};\n        for (let p in hiddenLayer) {\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON()\n    };\n  }\n\n  fromJSON(json) {\n    const defaults = this.constructor.defaults;\n    const options = json.options;\n    this.model = null;\n    this.hiddenLayers = null;\n    const allMatrices = [];\n    const hiddenLayers = [];\n\n    // backward compatibility for hiddenSizes\n    (json.hiddenLayers || json.hiddenSizes).forEach((hiddenLayer) => {\n      let layers = {};\n      for (let p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    Object.assign(this, defaults, options);\n\n    // backward compatibility\n    if (options.hiddenSizes) {\n      this.hiddenLayers = options.hiddenSizes;\n    }\n\n    this.model = {\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    };\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n    this.bindEquation();\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    const model = this.model;\n    const equations = this.model.equations;\n    const inputSize = this.inputSize;\n    const inputLookup = this.inputLookup;\n    const inputLookupLength = this.inputLookupLength;\n    const outputLookup = this.outputLookup;\n    const outputLookupLength = this.outputLookupLength;\n    const equation = equations[1];\n    const states = equation.states;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        let state = states[i];\n\n        if (i === stateIndex) {\n          let j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.product:\n              return `new Matrix(${ m.rows }, ${ m.columns })`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${ i }].product`;\n        if (m === state.right) return `states[${ i }].right`;\n        if (m === state.left) return `states[${ i }].left`;\n      }\n    }\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const states = equations[0].states;\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        let hiddenLayer = model.hiddenLayers[i];\n        for (let p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${ i }].${ p }`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function formatInputData() {\n      if (!inputLookup) return '';\n      if (inputSize === 1) {\n        return `function lookupInput(input) {\n          var table = ${ JSON.stringify(inputLookup) };\n          var result = [];\n          for (var p in table) {\n            result.push(Float32Array.from([input[p]]));\n          }\n          return result;\n        }`;\n      }\n      return `function lookupInput(input) {\n          var table = ${ JSON.stringify(inputLookup) };\n          var result = new Float32Array(${ inputLookupLength });\n          for (var p in table) {\n            result[table[p]] = input[p];\n          }\n          return result;\n        }`;\n    }\n\n    function formatOutputData() {\n      if (!outputLookup) return '';\n      if (inputSize === 1) {\n        return `function lookupOutput(output) {\n          var table = ${ JSON.stringify(outputLookup) };\n          var result = {};\n          for (var p in table) {\n            result[p] = output[table[p]][0];\n          }\n          return result;\n        }`\n      }\n      outputLookup\n        ? `function lookupOutput(output) {\n          var table = ${ JSON.stringify(outputLookup) };\n          var result = {};\n          debugger;\n          for (var p in table) {\n            result[p] = output[table[p]];\n          }\n          debugger;\n          return result;\n        }`\n        : ''\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n\n      return fnString.join('}').split('\\n').join('\\n        ')\n        .replace('product.weights = _input.weights = _this.inputValue;', inputLookup && inputSize === 1 ? 'product.weights = _i < input.length ? input[_i] : prevStates[prevStates.length - 1].product.weights' : 'debugger;product.weights = input[_i];')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${ fnName.replace(/[A-Z]/g, function(value) { return '-' + value.toLowerCase(); }) }.js`;\n    }\n\n    let statesRaw = [];\n    let usedFunctionNames = {};\n    let innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      let state = states[i];\n      statesRaw.push(`states[${ i }] = {\n      name: '${ state.forwardFn.name }',\n      left: ${ matrixToString(state.left, i) },\n      right: ${ matrixToString(state.right, i) },\n      product: ${ matrixToString(state.product, i) }\n    }`);\n\n      let fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${ fnName }':${ fnName !== 'forwardFn' ? ` //compiled from ${ fileName(fnName) }` : '' }\n          ${ toInner(state.forwardFn.toString()) }\n          break;`\n        );\n      }\n    }\n\n    const forceForecast = this.inputSize === 1 && this.outputLookup;\n    const src = `\n  var input = ${ this.inputLookup ? 'lookupInput(rawInput)' : 'rawInput' };\n  var json = ${ jsonString };\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  var max = ${ forceForecast ? `input.length + ${ outputLookupLength - 1 }` : 'input.length' };\n  for (var _i = 0; _i < max; _i++) {\n    prevStates = states;\n    states = [];\n    ${ statesRaw.join(';\\n    ') };\n    for (var stateIndex = 0, stateMax = ${ statesRaw.length }; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      \n      switch (state.name) {\n${ innerFunctionsSwitch.join('\\n') }\n      }\n    }\n    ${ inputSize && inputLookup ? 'if (_i >= input.length - 1) { output.push(state.product.weights); }' : '' }\n  }\n  ${\n    this.inputLookup\n      ? 'return lookupOutput(output)'\n      : 'return state.product.weights'\n  };\n  ${ formatInputData() }\n  ${ formatOutputData() }\n  \n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${ zeros.toString() }\n  ${ softmax.toString().replace('_2.default', 'Matrix') }\n  ${ randomF.toString() }\n  ${ sampleI.toString() }\n  ${ maxI.toString() }`;\n    return new Function('rawInput', src);\n  }\n}\n\nRNNTimeStep.defaults = {\n  inputSize: 1,\n  hiddenLayers: [20],\n  outputSize: 1,\n  learningRate: 0.01,\n  decayRate: 0.999,\n  smoothEps: 1e-8,\n  regc: 0.000001,\n  clipval: 5\n};\n\nRNNTimeStep.trainDefaults = RNN.trainDefaults;"]}