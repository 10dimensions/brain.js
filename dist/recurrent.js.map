{"version":3,"sources":["../src/recurrent.js"],"names":["Recurrent","initialLayers","inputLayer","hiddenLayers","_connectHiddenLayers","_outputConnection","setLayer","length","outputLayer","push","apply","flattenedLayers","_inputLayers","slice","indexOf","_hiddenLayers","_outputLayers","unshift","_recurrentIndices","_model","i","Object","getPrototypeOf","constructor","name","splice","previousLayer","recurrentInput","hiddenLayer","previousHiddenLayers","firstLayer","recurrentIndex","previousHiddenLayer","layer","settings","setDimensions","width","height","setRecurrentInput","inputLayer1","inputLayer2","Error","_previousInputs","_connectLayers","initializeLayers","_connectHiddenLayersDeep","reuseKernels","input","max","x","hiddenConnection","predict","weights","data","options","stats","initializeDeep","target","offset","hiddenLayersIndex","pop","compare","learn","logErrorRate","runInput","_calculateDeltas","_adjustWeights","errors","hasOwnProperty","toArray"],"mappings":"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","file":"recurrent.js","sourcesContent":["import RecurrentConnection from './layer/recurrent-connection';\nimport RecurrentInput from './layer/recurrent-input';\nimport RecurrentZeros from './layer/recurrent-zeros';\nimport flattenLayers from './utilities/flatten-layers';\nimport mse2d from './utilities/mse-2d';\nimport FeedForward from './feed-forward';\nimport Base from \"./layer/base\";\n\nexport default class Recurrent extends FeedForward {\n  static get structure() {\n    return {\n      /**\n       *\n       * _inputLayers are a 1 dimensional array of input layers defined once\n       * @type Object[]\n       * @private\n       */\n      _inputLayers: null,\n\n      /**\n       * _hiddenLayers are a 2 dimensional array of hidden layers defined for each recursion\n       * @type Object[][]\n       * @private\n       */\n      _hiddenLayers: null,\n\n      /**\n       * _outputLayers are a 1 dimensional array of output layers defined once\n       * @type Object[]\n       * @private\n       */\n      _outputLayers: null,\n      _outputConnection: null,\n      _previousInputs: null,\n      _model: null,\n      _recurrentIndices: null\n    };\n  }\n\n  _connectLayers() {\n    const initialLayers = [];\n    const inputLayer = this.inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(inputLayer);\n    this._outputConnection.setLayer(hiddenLayers[hiddenLayers.length - 1]);\n    const outputLayer = this.outputLayer(\n      this._outputConnection,\n      hiddenLayers.length\n    );\n    initialLayers.push(inputLayer);\n    initialLayers.push.apply(initialLayers, hiddenLayers);\n    initialLayers.push(outputLayer);\n    const flattenedLayers = flattenLayers(initialLayers);\n    this._inputLayers = flattenedLayers.slice(0, flattenedLayers.indexOf(inputLayer) + 1);\n    this._hiddenLayers = [flattenedLayers.slice(flattenedLayers.indexOf(inputLayer) + 1, flattenedLayers.indexOf(hiddenLayers[hiddenLayers.length - 1]) + 1)];\n    this._outputLayers = flattenedLayers.slice(flattenedLayers.indexOf(hiddenLayers[hiddenLayers.length - 1]) + 1);\n    this._outputLayers.unshift();\n    this._recurrentIndices = [];\n    this._model = [];\n    for (let i = 0; i < this._hiddenLayers[0].length; i++) {\n      if (Object.getPrototypeOf(this._hiddenLayers[0][i].constructor).name === 'Model') {\n        this._model.push(this._hiddenLayers[0][i]);\n        this._hiddenLayers[0].splice(i, 1);\n      }\n    }\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      this._recurrentIndices.push(this._hiddenLayers[0].indexOf(hiddenLayers[i]));\n    }\n  }\n\n  _connectHiddenLayers(previousLayer) {\n    const hiddenLayers = [];\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\n      const recurrentInput = new RecurrentZeros();\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, recurrentInput, i);\n      previousLayer = hiddenLayer;\n      hiddenLayers.push(hiddenLayer);\n    }\n    return hiddenLayers;\n  }\n\n  _connectHiddenLayersDeep() {\n    const hiddenLayers = [];\n    const previousHiddenLayers = this._hiddenLayers[this._hiddenLayers.length - 1];\n    const firstLayer = this._hiddenLayers[0];\n    let recurrentIndex = 0;\n    for (let i = 0; i < previousHiddenLayers.length; i++) {\n      const previousHiddenLayer = previousHiddenLayers[i];\n      let layer = null;\n      switch (Object.getPrototypeOf(firstLayer[i].constructor).name) {\n        case 'Activation': {\n          const inputLayer = hiddenLayers[previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(inputLayer);\n          break;\n        }\n        case 'Filter': {\n          const settings = previousHiddenLayer;\n          const inputLayer = hiddenLayers[previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(settings, inputLayer);\n          break;\n        }\n        case 'Internal': {\n          switch (previousHiddenLayer.constructor.name) {\n            case 'RecurrentConnection':\n              break;\n            case 'RecurrentInput':\n            case 'RecurrentZeros':\n              layer = new RecurrentInput();\n              layer.setDimensions(previousHiddenLayer.width, previousHiddenLayer.height);\n              layer.setRecurrentInput(previousHiddenLayers[this._recurrentIndices[recurrentIndex]]);\n              recurrentIndex++;\n              break;\n          }\n          break;\n        }\n        case 'Model': {\n          layer = previousHiddenLayer;\n          break;\n        }\n        case 'Modifier': {\n          const inputLayer = hiddenLayers[previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(inputLayer);\n          break;\n        }\n        case 'Operator': {\n          const inputLayer1 = hiddenLayers[previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer1)] || previousHiddenLayer.inputLayer1;\n          const inputLayer2 = hiddenLayers[previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer2)] || previousHiddenLayer.inputLayer2;\n          layer = new previousHiddenLayer.constructor(inputLayer1, inputLayer2);\n          break;\n        }\n        default:\n          throw new Error(`hidden layer ${previousHiddenLayer.constructor.name} extends unknown hidden layer ${ Object.getPrototypeOf(previousHiddenLayer.constructor).name }`);\n      }\n\n      hiddenLayers[i] = layer;\n    }\n    this._hiddenLayers.push(hiddenLayers);\n    return hiddenLayers;\n  }\n\n  initialize() {\n    this._previousInputs = [];\n    this._outputConnection = new RecurrentConnection();\n    this._connectLayers();\n    this.initializeLayers(this._model);\n    this.initializeLayers(this._inputLayers);\n    this.initializeLayers(this._hiddenLayers[0]);\n    this.initializeLayers(this._outputLayers);\n  }\n\n  initializeDeep() {\n    const hiddenLayers = this._connectHiddenLayersDeep();\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      const hiddenLayer = hiddenLayers[i];\n      hiddenLayer.reuseKernels(this._hiddenLayers[0][i]);\n    }\n  }\n\n  runInput(input) {\n    const max = input.length - 1;\n    for (let x = 0; x < max; x++) {\n      const hiddenLayers = this._hiddenLayers[x];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n\n      this._inputLayers[0].predict([input[x]]);\n      this._previousInputs.push(this._inputLayers[0].weights);\n      for (let i = 1; i < this._inputLayers.length; i++) {\n        this._inputLayers[i].predict();\n      }\n      for (let i = 0; i < this._hiddenLayers[x].length; i++) {\n        this._hiddenLayers[x][i].predict();\n      }\n      for (let i = 0; i < this._outputLayers.length; i++) {\n        this._outputLayers[i].predict();\n      }\n    }\n    return this._outputLayers[this._outputLayers.length - 1].weights;\n  }\n\n  _prepTraining(data, options) {\n    const stats = super._prepTraining(data, options);\n    this.initializeDeep();\n    return stats;\n  }\n\n  _calculateDeltas(target, offset) {\n    for (let x = target.length - 1; x >= 0; x--) {\n      const hiddenLayersIndex = offset + x;\n      const hiddenLayers = this._hiddenLayers[hiddenLayersIndex];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n      if (this._previousInputs.length > 0) {\n        this._inputLayers[0].weights = this._previousInputs.pop();\n      }\n\n      this._outputLayers[this._outputLayers.length - 1].compare([target[x]]);\n      for (let i = this._outputLayers.length - 2; i >= 0; i--) {\n        this._outputLayers[i].compare();\n      }\n      for (let i = hiddenLayers.length - 1; i >= 0; i--) {\n        hiddenLayers[i].compare();\n      }\n      for (let i = this._inputLayers.length - 1; i >= 1; i--) {\n        this._inputLayers[i].compare();\n      }\n    }\n  }\n\n  _adjustWeights() {\n    for (let hiddenLayersIndex = 0; hiddenLayersIndex < this._hiddenLayers.length; hiddenLayersIndex++) {\n      const hiddenLayers = this._hiddenLayers[hiddenLayersIndex];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n      for (let i = 0; i < this._inputLayers.length; i++) {\n        this._inputLayers[i].learn();\n      }\n\n      for (let i = 0; i < hiddenLayers.length; i++) {\n        hiddenLayers[i].learn();\n      }\n\n      for (let i = 0; i < this._outputLayers.length; i++) {\n        this._outputLayers[i].learn();\n      }\n\n      for (let i = 0; i < this._model.length; i++) {\n        this._model[i].learn();\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {number[]} input\n   * @param {number[]} target\n   * @param {Boolean} [logErrorRate]\n   */\n  _trainPattern(input, target, logErrorRate) {\n\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(target, input.length - 1);\n    this._calculateDeltas(input.slice(1), 0);\n    this._adjustWeights();\n\n    if (logErrorRate) {\n      const outputLayer = this._outputLayers[this._outputLayers.length - 1];\n      return mse2d(outputLayer.errors.hasOwnProperty('toArray') ? outputLayer.errors.toArray() : outputLayer.errors);\n    } else {\n      return null\n    }\n  }\n}"]}