{"version":3,"sources":["../../src/layer/base.js"],"names":["Base","width","height","depth","weights","deltas","name","settings","praxis","constructor","Object","assign","defaults","hasOwnProperty","isNaN","Error","layer","predictKernel","compareKernel","previousLayer","nextLayer","learningRate","run","toArray","jsonLayer","keys","i","length","key","type"],"mappings":"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","file":"base.js","sourcesContent":["import zeros2D from '../utilities/zeros-2d';\n\nexport default class Base {\n  static get defaults() {\n    return {\n      width: 1,\n      height: 1,\n      depth: 1,\n      weights: null,\n      deltas: null,\n      name: null\n    };\n  }\n\n  constructor(settings = {}) {\n    //size\n    this.width = null;\n    this.height = null;\n\n    //what matters :P\n    this.deltas = null;\n    this.weights = null;\n\n    this.praxis = null;\n    if (this.constructor !== Base) {\n      Object.assign(this, Base.defaults, settings);\n    }\n    Object.assign(this, this.constructor.defaults, settings);\n\n    // special settings\n    if (settings.hasOwnProperty('praxis')) {\n      if (typeof settings.praxis === 'function') {\n        this.praxis = settings.praxis(Object.assign({\n          height: this.height,\n          width: this.width\n        }, settings));\n      } else {\n        this.praxis = settings.praxis;\n      }\n    }\n  }\n\n  /*\n  get weights() {\n    return this._weights;\n  }\n\n  set weights(value) {\n    if (value) {\n      if (value[0].length !== this.width) {\n        throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n      }\n      if (value.length !== this.height) {\n        throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n      }\n    }\n    this._weights = value;\n  }\n\n  get deltas() {\n    return this._deltas;\n  }\n\n  set deltas(value) {\n    if (value) {\n      if (value[0].length !== this.width) {\n        throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n      }\n      if (value.length !== this.height) {\n        throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n      }\n    }\n    this._deltas = value;\n  }*/\n\n  validate() {\n    if (isNaN(this.height)) {\n      throw new Error(`${this.constructor.name} layer height is not a number`)\n    }\n    if (isNaN(this.width)) {\n      throw new Error(`${this.constructor.name} layer width is not a number`)\n    }\n    if (this.height < 1) {\n      throw new Error(`${this.constructor.name} layer height is less than 1`);\n    }\n    if (this.width < 1) {\n      throw new Error(`${this.constructor.name} layer width is less than 1`);\n    }\n  }\n\n  setupKernels() {}\n  reuseKernels(layer) {\n    if (layer.width !== this.width) {\n      throw new Error(`${this.constructor.name} kernel width mismatch ${layer.width} is not ${this.width}`);\n    }\n    if (layer.height !== this.height) {\n      throw new Error(`${this.constructor.name} kernel width mismatch ${layer.height} is not ${this.height}`);\n    }\n    if (layer.hasOwnProperty('predictKernel')) {\n      this.predictKernel = layer.predictKernel;\n    }\n    if (layer.hasOwnProperty('compareKernel')) {\n      this.compareKernel = layer.compareKernel;\n    }\n    this.praxis = layer.praxis;\n  }\n\n  predict() {\n    throw new Error('`predict` not defined on Base layer');\n  }\n\n  compare(previousLayer, nextLayer) {\n    throw new Error('`compare` not defined on Base layer');\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  toArray() {\n    return this.weights.toArray();\n  }\n\n  toJSON() {\n    const jsonLayer = {};\n    const { defaults, name } = this.constructor;\n    if (this.constructor !== Base) {\n      Object.assign(defaults, Base.defaults, defaults);\n    }\n    const keys = Object.keys(defaults);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key === 'deltas') continue;\n      if (key === 'name' && this[key] === null) continue;\n      jsonLayer[key] = this[key];\n    }\n    jsonLayer.type = name;\n    return jsonLayer;\n  }\n}"]}