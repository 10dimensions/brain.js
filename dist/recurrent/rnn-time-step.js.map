{"version":3,"sources":["../../src/recurrent/rnn-time-step.js"],"names":["RNNTimeStep","options","inputLookup","inputLookupLength","outputLookup","outputLookupLength","model","outputSize","lastHiddenSize","hiddenLayers","length","outputConnector","RandomMatrix","output","layers","equation","Equation","outputs","equationConnection","equationConnections","initialLayerInputs","getEquation","input","Matrix","inputSize","push","i","max","add","multiply","equations","allMatrices","map","size","createHiddenLayers","Error","hiddenMatrix","property","hasOwnProperty","createOutputMatrix","backpropagate","run","runObject","runNumbers","runArrays","count","forecastNumbers","forecastArrays","data","Array","isArray","trainInput","trainInputOutputArray","trainInputOutput","lookup","toInputTable","Object","keys","toOutputTable","toTrainingData","trainArrays","trainNumbers","assign","constructor","trainDefaults","iterations","errorThresh","log","console","logPeriod","learningRate","callback","callbackPeriod","error","Infinity","setupData","initialize","sum","j","err","trainPattern","isNaN","bindEquation","errorSum","predictTarget","end","isRunnable","lastOutput","runInput","weights","slice","equationIndex","result","toObject","toArray","object","totalSize","inputIndex","outputIndex","set","outputMatrix","Float32Array","defaults","p","type","name","hiddenLayer","toJSON","json","hiddenSizes","forEach","fromJSON","dataFormatter","DataFormatter","states","jsonString","JSON","stringify","matrixOrigin","m","stateIndex","state","previousConnectionIndex","left","rows","columns","right","product","connection","indexOf","matrixToString","toInner","fnString","toString","split","shift","join","pop","replace","fileName","fnName","value","toLowerCase","statesRaw","usedFunctionNames","innerFunctionsSwitch","forwardFn","src","toFunctionString","formatDataIn","formatDataOut","zeros","softmax","randomF","sampleI","maxI","Function","RNN","decayRate","smoothEps","regc","clipval"],"mappings":"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","file":"rnn-time-step.js","sourcesContent":["import Matrix from './matrix';\nimport RandomMatrix from './matrix/random-matrix';\nimport Equation from './matrix/equation';\nimport RNN from './rnn';\nimport zeros from '../utilities/zeros';\nimport softmax from './matrix/softmax';\nimport {randomF} from '../utilities/random';\nimport sampleI from './matrix/sample-i';\nimport maxI from './matrix/max-i';\nimport lookup from \"../lookup\";\n\nexport default class RNNTimeStep extends RNN {\n  constructor(options) {\n    super(options);\n    this.inputLookup = null;\n    this.inputLookupLength = null;\n    this.outputLookup = null;\n    this.outputLookupLength = null;\n  }\n\n  createOutputMatrix() {\n    let model = this.model;\n    let outputSize = this.outputSize;\n    let lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n    //whd\n    model.outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    //bd\n    model.output = new RandomMatrix(outputSize, 1, 0.08);\n  }\n\n  bindEquation() {\n    let model = this.model;\n    let hiddenLayers = this.hiddenLayers;\n    let layers = model.hiddenLayers;\n    let equation = new Equation();\n    let outputs = [];\n    let equationConnection = model.equationConnections.length > 0\n      ? model.equationConnections[model.equationConnections.length - 1]\n      : this.initialLayerInputs\n      ;\n\n      // 0 index\n    let output = this.getEquation(equation, equation.input(new Matrix(this.inputSize, 1)), equationConnection[0], layers[0]);\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      output = this.getEquation(equation, output, equationConnection[i], layers[i]);\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\n    model.equations.push(equation);\n  }\n\n  mapModel() {\n    let model = this.model;\n    let hiddenLayers = model.hiddenLayers;\n    let allMatrices = model.allMatrices;\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n\n    this.createHiddenLayers();\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      let hiddenMatrix = hiddenLayers[i];\n      for (let property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    this.createOutputMatrix();\n    if (!model.outputConnector) throw new Error('net.model.outputConnector not set');\n    if (!model.output) throw new Error('net.model.output not set');\n\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n  }\n\n  backpropagate() {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].backpropagate();\n    }\n  }\n\n\n  /**\n   *\n   * @param {Number[]|Number[][]} [input]\n   * @returns {Number[]|Number|Object[]|Object[][]}\n   */\n  run(input = []) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.run = this.runObject;\n        return this.runObject(input);\n      }\n      this.run = this.runNumbers;\n      return this.runNumbers(input);\n    }\n    this.run = this.runArrays;\n    return this.runArrays(input);\n  }\n\n  forecast(input, count) {\n    if (this.inputSize === 1) {\n      this.run = this.forecastNumbers;\n      return this.forecastNumbers(input, count);\n    }\n    this.run = this.forecastArrays;\n    return this.forecastArrays(input, count);\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    if (data[0].input) {\n      if (Array.isArray(data[0].input[0])) {\n        this.trainInput = this.trainInputOutputArray;\n      } else if (Array.isArray(data[0].input)) {\n        this.trainInput = this.trainInputOutput;\n      } else {\n        this.inputLookup = lookup.toInputTable(data);\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n        this.outputLookup = lookup.toOutputTable(data);\n        this.outputLookupLength = Object.keys(this.outputLookup).length;\n        data = lookup.toTrainingData(data, this.inputLookup, this.outputLookup);\n        this.trainInput = this.trainInputOutput;\n      }\n    } else if (Array.isArray(data[0])) {\n      if (Array.isArray(data[0][0])) {\n        this.trainInput = this.trainArrays;\n      } else {\n        if (this.inputSize > 1) {\n          data = [data];\n          this.trainInput = this.trainArrays;\n        } else {\n          this.trainInput = this.trainNumbers;\n        }\n      }\n    }\n\n    options = Object.assign({}, this.constructor.trainDefaults, options);\n    const iterations = options.iterations;\n    const errorThresh = options.errorThresh;\n    const log = options.log === true ? console.log : options.log;\n    const logPeriod = options.logPeriod;\n    const learningRate = options.learningRate || this.learningRate;\n    const callback = options.callback;\n    const callbackPeriod = options.callbackPeriod;\n    let error = Infinity;\n    let i;\n\n    if (this.hasOwnProperty('setupData')) {\n      data = this.setupData(data);\n    }\n\n    if (!this.model) {\n      this.initialize();\n    }\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < data.length; j++) {\n        let err = this.trainPattern(data[j], learningRate);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) throw new Error('network error rate is unexpected NaN, check network configurations and try again');\n      if (log && (i % logPeriod === 0)) {\n        log(`iterations: ${ i }, training error: ${ error }`);\n      }\n      if (callback && (i % callbackPeriod === 0)) {\n        callback({ error: error, iterations: i });\n      }\n    }\n\n    return {\n      error: error,\n      iterations: i\n    };\n  }\n\n  trainNumbers(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget([input[i]], [input[i + 1]]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runNumbers(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[i].runInput([input[i]]);\n    }\n    this.end();\n    return lastOutput.weights.slice(0);\n  }\n\n  forecastNumbers(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput([input[i]]);\n    }\n    const result = [lastOutput.weights[0]];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights[0]);\n    }\n    this.end();\n    return result;\n  }\n\n  runObject(input) {\n    return lookup.toObject(this.outputLookup, this.forecastNumbers(lookup.toArray(this.inputLookup, input, this.inputLookupLength), this.outputLookupLength));\n  }\n\n  trainInputOutput(object) {\n    const model = this.model;\n    const input = object.input;\n    const output = object.output;\n    const totalSize = input.length + output.length;\n    const equations = model.equations;\n    while (equations.length < totalSize) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    let equationIndex = 0;\n    for (let inputIndex = 0, max = input.length - 1; inputIndex < max; inputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget([input[inputIndex]], [input[inputIndex + 1]]);\n    }\n    errorSum += equations[equationIndex++].predictTarget([input[input.length - 1]], [output[0]]);\n    for (let outputIndex = 0, max = output.length - 1; outputIndex < max; outputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget([output[outputIndex]], [output[outputIndex + 1]]);\n    }\n    this.end();\n    return errorSum / totalSize;\n  }\n\n  trainInputOutputArray(set) {\n    const model = this.model;\n    const input = set.input;\n    const output = set.output;\n    const totalSize = input.length + output.length;\n    const equations = model.equations;\n    while (equations.length < totalSize) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    let equationIndex = 0;\n    for (let inputIndex = 0, max = input.length - 1; inputIndex < max; inputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(input[inputIndex], input[inputIndex + 1]);\n    }\n    errorSum += equations[equationIndex++].predictTarget(input[input.length - 1], output[0]);\n    for (let outputIndex = 0, max = output.length - 1; outputIndex < max; outputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(output[outputIndex], output[outputIndex + 1]);\n    }\n    this.end();\n    return errorSum / totalSize;\n  }\n\n  trainArrays(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runArrays(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      let outputMatrix = equations[i].runInput(input[i]);\n      lastOutput = outputMatrix.weights;\n    }\n    this.end();\n    return lastOutput;\n  }\n\n  forecastArrays(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput(input[i]);\n    }\n    const result = [lastOutput.weights];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights);\n    }\n    this.end();\n    return result;\n  }\n\n  end() {\n    this.model.equations[this.model.equations.length - 1].runInput(new Float32Array(this.outputSize));\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const defaults = this.constructor.defaults;\n    if (!this.model) {\n      this.initialize();\n    }\n    let model = this.model;\n    let options = {};\n    for (let p in defaults) {\n      if (defaults.hasOwnProperty(p)) {\n        options[p] = this[p];\n      }\n    }\n\n    return {\n      type: this.constructor.name,\n      options: options,\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        let layers = {};\n        for (let p in hiddenLayer) {\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON()\n    };\n  }\n\n  fromJSON(json) {\n    const defaults = this.constructor.defaults;\n    const options = json.options;\n    this.model = null;\n    this.hiddenLayers = null;\n    const allMatrices = [];\n    const hiddenLayers = [];\n\n    // backward compatibility for hiddenSizes\n    (json.hiddenLayers || json.hiddenSizes).forEach((hiddenLayer) => {\n      let layers = {};\n      for (let p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    Object.assign(this, defaults, options);\n\n    // backward compatibility\n    if (options.hiddenSizes) {\n      this.hiddenLayers = options.hiddenSizes;\n    }\n\n    if (options.hasOwnProperty('dataFormatter') && options.dataFormatter !== null) {\n      this.dataFormatter = DataFormatter.fromJSON(options.dataFormatter);\n    }\n\n    this.model = {\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    };\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n    this.bindEquation();\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    let model = this.model;\n    let equations = this.model.equations;\n    const inputSize = this.inputSize;\n    let equation = equations[1];\n    let states = equation.states;\n    let jsonString = JSON.stringify(this.toJSON());\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        let state = states[i];\n\n        if (i === stateIndex) {\n          let j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.product:\n              return `new Matrix(${ m.rows }, ${ m.columns })`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${ i }].product`;\n        if (m === state.right) return `states[${ i }].right`;\n        if (m === state.left) return `states[${ i }].left`;\n      }\n    }\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const states = equations[0].states;\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        let hiddenLayer = model.hiddenLayers[i];\n        for (let p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${ i }].${ p }`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n\n      return fnString.join('}').split('\\n').join('\\n        ')\n        .replace('product.weights = _input.weights = _this.inputValue;', inputSize === 1 ? 'product.weights = [input[_i]];' : 'product.weights = input[_i];')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${ fnName.replace(/[A-Z]/g, function(value) { return '-' + value.toLowerCase(); }) }.js`;\n    }\n\n    let statesRaw = [];\n    let usedFunctionNames = {};\n    let innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      let state = states[i];\n      statesRaw.push(`states[${ i }] = {\n      name: '${ state.forwardFn.name }',\n      left: ${ matrixToString(state.left, i) },\n      right: ${ matrixToString(state.right, i) },\n      product: ${ matrixToString(state.product, i) }\n    }`);\n\n      let fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${ fnName }':${ fnName !== 'forwardFn' ? ` //compiled from ${ fileName(fnName) }` : '' }\n          ${ toInner(state.forwardFn.toString()) }\n          break;`\n        );\n      }\n    }\n\n    const src = `\n  if (typeof rawInput === 'undefined') rawInput = [];\n  ${ (this.dataFormatter !== null) ? this.dataFormatter.toFunctionString() : '' }\n  \n  var input = ${\n      (this.dataFormatter !== null && typeof this.formatDataIn === 'function')\n        ? 'formatDataIn(rawInput)'\n        : 'rawInput'\n      };\n  var json = ${ jsonString };\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  for (let _i = 0; _i < input.length; _i++) {\n    prevStates = states;\n    states = [];\n    ${ statesRaw.join(';\\n    ') };\n    for (var stateIndex = 0, stateMax = ${ statesRaw.length }; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      \n      switch (state.name) {\n${ innerFunctionsSwitch.join('\\n') }\n      }\n    }\n  }\n  ${\n    (this.dataFormatter !== null && typeof this.formatDataOut === 'function')\n      ? `return formatDataOut(input, ${ this.outputSize === 1 ? 'state.product.weights[0]' : 'state.product.weights' })`\n      : `return ${ this.outputSize === 1 ? 'state.product.weights[0]' : 'state.product.weights' }`\n  };\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${ this.dataFormatter !== null && typeof this.formatDataIn === 'function'\n        ? `function formatDataIn(input, output) { ${\n          toInner(this.formatDataIn.toString())\n            .replace(/this[.]dataFormatter[\\n\\s]+[.]/g, '')\n            .replace(/this[.]dataFormatter[.]/g, '')\n            .replace(/this[.]dataFormatter/g, 'true')\n          } }`\n        : '' }\n  ${ this.dataFormatter !== null && typeof this.formatDataOut === 'function'\n        ? `function formatDataOut(input, output) { ${\n          toInner(this.formatDataOut.toString())\n            .replace(/this[.]dataFormatter[\\n\\s]+[.]/g, '')\n            .replace(/this[.]dataFormatter[.]/g, '')\n            .replace(/this[.]dataFormatter/g, 'true')\n          } }`\n        : '' }\n  ${ zeros.toString() }\n  ${ softmax.toString().replace('_2.default', 'Matrix') }\n  ${ randomF.toString() }\n  ${ sampleI.toString() }\n  ${ maxI.toString() }`;\n    return new Function('rawInput', src);\n  }\n}\n\nRNNTimeStep.defaults = {\n  inputSize: 1,\n  hiddenLayers: [20],\n  outputSize: 1,\n  learningRate: 0.01,\n  decayRate: 0.999,\n  smoothEps: 1e-8,\n  regc: 0.000001,\n  clipval: 5,\n  dataFormatter: null\n};\n\nRNNTimeStep.trainDefaults = RNN.trainDefaults;"]}