{"version":3,"sources":["cross-validate.js","..\\node_modules\\gpu.js\\dist\\core\\utils-core.js","..\\node_modules\\gpu.js\\dist\\core\\input.js","..\\node_modules\\gpu.js\\dist\\core\\texture.js","..\\node_modules\\gpu.js\\dist\\core\\utils.js","..\\node_modules\\gpu.js\\dist\\backend\\kernel-run-shortcut.js","..\\node_modules\\gpu.js\\dist\\backend\\runner-base.js","..\\node_modules\\gpu.js\\dist\\backend\\kernel-base.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl\\shader-frag.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl\\shader-vert.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl\\kernel-string.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl\\kernel.js","..\\node_modules\\gpu.js\\dist\\backend\\function-builder-base.js","..\\node_modules\\acorn\\dist\\acorn.es.js","..\\node_modules\\gpu.js\\dist\\backend\\function-node-base.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl\\function-node.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl\\function-builder.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl\\runner.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl2\\function-node.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl2\\function-builder.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl2\\shader-frag.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl2\\shader-vert.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl2\\kernel.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl2\\runner.js","..\\node_modules\\gpu.js\\dist\\backend\\cpu\\kernel-string.js","..\\node_modules\\gpu.js\\dist\\backend\\cpu\\kernel.js","..\\node_modules\\gpu.js\\dist\\backend\\cpu\\function-node.js","..\\node_modules\\gpu.js\\dist\\backend\\cpu\\function-builder.js","..\\node_modules\\gpu.js\\dist\\backend\\cpu\\runner.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl\\validator-kernel.js","..\\node_modules\\gpu.js\\dist\\backend\\web-gl2\\validator-kernel.js","..\\node_modules\\gpu.js\\dist\\core\\gpu-core.js","..\\node_modules\\gpu.js\\dist\\core\\gpu.js","..\\node_modules\\gpu.js\\dist\\core\\alias.js","..\\node_modules\\gpu.js\\dist\\index.js","utilities\\make-kernel.js","utilities\\zeros.js","utilities\\zeros-2d.js","layer\\base.js","layer\\add.js","utilities\\layer-setup.js","layer\\convolution.js","layer\\dropout.js","layer\\feed-forward.js","layer\\fully-connected.js","layer\\gru.js","layer\\input.js","activation\\leaky-relu.js","layer\\leaky-relu.js","layer\\lstm.js","layer\\multiply.js","utilities\\random-weight.js","utilities\\randos.js","utilities\\randos-2d.js","layer\\multiply-element.js","layer\\negative.js","utilities\\ones.js","utilities\\ones-2d.js","layer\\ones.js","layer\\output.js","layer\\pool.js","layer\\random.js","layer\\recurrent.js","layer\\regression.js","activation\\relu.js","layer\\relu.js","activation\\sigmoid.js","layer\\sigmoid.js","layer\\soft-max.js","layer\\svm.js","activation\\tanh.js","layer\\tanh.js","layer\\target.js","layer\\transpose.js","layer\\zeros.js","layer\\index.js","activation\\index.js","likely.js","lookup.js","..\\node_modules\\events\\events.js","..\\node_modules\\inherits\\inherits_browser.js","..\\node_modules\\process\\browser.js","..\\node_modules\\process-nextick-args\\index.js","..\\node_modules\\isarray\\index.js","..\\node_modules\\readable-stream\\lib\\internal\\streams\\stream.js","..\\node_modules\\base64-js\\index.js","..\\node_modules\\ieee754\\index.js","..\\node_modules\\buffer\\index.js","..\\node_modules\\safe-buffer\\index.js","..\\node_modules\\core-util-is\\lib\\util.js","..\\node_modules\\readable-stream\\lib\\internal\\streams\\BufferList.js","..\\node_modules\\readable-stream\\lib\\internal\\streams\\destroy.js","..\\node_modules\\util-deprecate\\browser.js","..\\node_modules\\readable-stream\\lib\\_stream_writable.js","..\\node_modules\\readable-stream\\lib\\_stream_duplex.js","..\\node_modules\\string_decoder\\lib\\string_decoder.js","..\\node_modules\\readable-stream\\lib\\_stream_readable.js","..\\node_modules\\readable-stream\\lib\\_stream_transform.js","..\\node_modules\\readable-stream\\lib\\_stream_passthrough.js","..\\node_modules\\readable-stream\\readable-browser.js","..\\node_modules\\readable-stream\\writable-browser.js","..\\node_modules\\readable-stream\\duplex-browser.js","..\\node_modules\\readable-stream\\transform.js","..\\node_modules\\readable-stream\\passthrough.js","..\\node_modules\\stream-browserify\\index.js","train-stream.js","utilities\\to-array.js","utilities\\max.js","utilities\\mse.js","utilities\\range.js","..\\node_modules\\thaw.js\\dist\\thaw.js","..\\node_modules\\thaw.js\\dist\\block.js","..\\node_modules\\thaw.js\\dist\\index.js","neural-network.js","neural-network-gpu.js","recurrent\\matrix\\index.js","utilities\\random.js","recurrent\\matrix\\random-matrix.js","recurrent\\matrix\\ones-matrix.js","recurrent\\matrix\\copy.js","recurrent\\matrix\\clone-negative.js","recurrent\\matrix\\add.js","recurrent\\matrix\\add-b.js","recurrent\\matrix\\all-ones.js","recurrent\\matrix\\multiply.js","recurrent\\matrix\\multiply-b.js","recurrent\\matrix\\multiply-element.js","recurrent\\matrix\\multiply-element-b.js","recurrent\\matrix\\relu.js","recurrent\\matrix\\relu-b.js","recurrent\\matrix\\row-pluck.js","recurrent\\matrix\\row-pluck-b.js","recurrent\\matrix\\sigmoid.js","recurrent\\matrix\\sigmoid-b.js","recurrent\\matrix\\tanh.js","recurrent\\matrix\\tanh-b.js","recurrent\\matrix\\equation.js","recurrent\\matrix\\sample-i.js","recurrent\\matrix\\max-i.js","recurrent\\matrix\\softmax.js","utilities\\data-formatter.js","recurrent\\rnn.js","recurrent\\lstm.js","recurrent\\gru.js","utilities\\mse-2d.js","utilities\\layer-from-json.js","praxis\\momentum-root-mean-squared-propagation.js","praxis\\index.js","utilities\\traverse-layers-from.js","utilities\\flatten-layers.js","feed-forward.js","layer\\recurrent-connection.js","layer\\recurrent-input.js","layer\\recurrent-zeros.js","utilities\\traverse-layers-excluding-from.js","utilities\\flatten-layers-excluding.js","recurrent.js","index.js"],"names":["testPartition","Classifier","opts","trainOpts","trainSet","testSet","classifier","beginTrain","Date","now","trainingStats","train","beginTest","testStats","test","endTest","stats","Object","assign","iterations","error","learningRate","hiddenSizes","toJSON","shuffleArray","array","i","length","j","Math","floor","random","temp","crossValidate","data","k","size","constructor","Array","newData","keys","forEach","key","avgs","misclasses","results","stat","sum","dclone","slice","splice","result","concat","push","precision","truePos","falsePos","recall","falseNeg","accuracy","trueNeg","total","testSize","trainSize","nonASCIIwhitespace","reservedWords","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","pos","isIdentifierStart","astral","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","options","types","lineBreak","lineBreakG","source","isNewLine","ecma2019String","skipWhiteSpace","ref","prototype","hasOwnProperty","toString","has","obj","propName","call","isArray","Position","line","col","column","offset","n","SourceLocation","p","start","end","sourceFile","getLineInfo","input","cur","lastIndex","match","exec","index","defaultOptions","getOptions","opt","ecmaVersion","allowReserved","onToken","tokens","token","onComment","pushComment","block","text","startLoc","endLoc","comment","locations","loc","ranges","range","plugins","keywordRegexp","words","replace","Parser","startPos","reserved","v","sourceType","reservedStrict","strict","reservedWordsStrict","reservedWordsStrictBind","strictBind","containsEsc","loadPlugins","lineStart","lastIndexOf","curLine","split","type","eof","value","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","inFunction","inGenerator","inAsync","yieldPos","awaitPos","labels","allowHashBang","skipLineComment","scopeStack","enterFunctionScope","regexpState","isKeyword","word","isReservedWord","extend","f","pluginConfigs","plugin","Error","this$1","parse","node","program","startNode","nextToken","parseTopLevel","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","braceR","insertSemicolon","onInsertedSemicolon","semicolon","semi","afterTrailingComma","tokType","notNext","onTrailingComma","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","exports","body","stmt","parseStatement","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","declaration","topLevel","starttype","_var","_break","_continue","parseBreakContinueStatement","_debugger","parseDebuggerStatement","_do","parseDoStatement","_for","parseForStatement","_function","parseFunctionStatement","_class","parseClass","_if","parseIfStatement","_return","parseReturnStatement","_switch","parseSwitchStatement","_throw","parseThrowStatement","_try","parseTryStatement","_const","parseVarStatement","_while","parseWhileStatement","_with","parseWithStatement","braceL","parseBlock","parseEmptyStatement","_export","_import","allowImportExportEverywhere","parseImport","parseExport","maybeName","parseExpression","colon","parseLabeledStatement","parseExpressionStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","enterLexicalScope","parenL","parseFor","init$1","parseVar","_in","declarations","init","await","parseForIn","toAssignable","checkLVal","isAsync","parseFunction","consequent","alternate","_else","allowReturnOutsideFunction","argument","discriminant","cases","sawDefault","_case","_default","isCase","exitLexicalScope","empty","handler","_catch","clause","param","parseBindingAtom","parenR","finalizer","_finally","object","i$1","list","label$1","statementStart","generator","createNewLexicalScope","update","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","eq","comma","isStatement","allowExpressionBody","initFunction","star","async","oldInGen","oldInAsync","oldYieldPos","oldAwaitPos","oldInFunc","parseFunctionParams","parseFunctionBody","params","parseBindingList","parseClassId","parseClassSuper","classBody","hadConstructor","member","parseClassMember","method","tryContextual","noLineBreak","computed","startNodeAt","static","isGenerator","parsePropertyName","parseClassMethod","parseMethod","superClass","_extends","parseExprSubscripts","string","parseExprAtom","checkExport","fNode","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","statement","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","bracketL","bracketR","parseObj","close","allowEmpty","allowTrailingComma","elts","ellipsis","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","canDeclareVarName","canDeclareLexicalName","declareVarName","declareLexicalName","pp$3","checkPropClash","propHash","shorthand","proto","other","get","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","question","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","logicalOR","logicalAND","op","buildBinary","sawUnary","allowAwaitOutsideFunction","parseAwait","incDec","starstar","skipArrowSubscripts","parseSubscripts","base","noCalls","maybeAsyncArrow","dot","property","parseExprList","arrow","parseArrowExpression","callee","arguments","backQuote","tag","quasi","parseTemplate","isTagged","canBeArrow","_super","_this","regexp","parseLiteral","regex","pattern","flags","num","_null","_true","_false","parseParenAndDistinguishExpression","_new","parseNew","val","innerStartPos","spreadStart","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","preserveParens","par","item","empty$1","meta","parseTemplateElement","invalidTemplate","tail","curElt","quasis","dollarBraceL","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isExpression","oldStrict","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","exitFunctionScope","allowDuplicates","nameHash","indexOf","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","target","len","sources","var","lexical","childVar","parentLexical","parentScope","childScope","currentScope","Node","parser","directSourceFile","pp$6","TokContext","isExpr","preserveSpace","override","types$1","tryReadTemplateToken","pp$7","b_stat","braceIsBlock","prevType","parent","curContext","f_expr","f_stat","b_expr","inGeneratorContext","out","b_tmpl","statementParens","p_stat","p_expr","q_tmpl","f_expr_gen","f_gen","allowed","apply","$LONE","General_Category","gc","sc","Script_Extensions","scx","Script","pp$9","RegExpValidationState","validFlags","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString$1","ch","isSyntaxCharacter","isRegExpIdentifierStart","isRegExpIdentifierPart","isControlLetter","isValidUnicode","isCharacterClassEscape","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","c","nextIndex","current","lookahead","advance","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","max","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$8","codePointToString","getToken","Symbol","iterator","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","readRegexp","finishOp","slash","readToken_mult_modulo_exp","tokentype","modulo","readToken_pipe_amp","bitwiseOR","bitwiseAND","readToken_caret","bitwiseXOR","readToken_plus_min","plusMin","readToken_lt_gt","bitShift","relational","readToken_eq_excl","equality","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","e","readInt","radix","Infinity","startsWithDot","octal","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","template","inTemplate","octalStr","substr","escStart","esc","parse_dammit","LooseParser","pluginsLoose","version","parseExpressionAt","tokenizer","addLooseExports","Parser$$1","plugins$$1","tokTypes","keywordTypes","tokContexts","fn","settings","gpuInstance","GPU","createKernelMap","map","setOutputToTexture","createKernel","setup","zeros","Float32Array","zeros2D","width","height","y","Base","deltas","weights","praxis","defaults","isNaN","layer","predictKernel","compareKernel","previousLayer","nextLayer","run","toArray","jsonLayer","predict","Add","inputLayer1","inputLayer2","validate","inputWeights1","inputWeights2","thread","x","setStride","strideX","stride","strideY","setPadding","paddingX","padding","paddingY","compare","compareInputs","Convolution","inputLayer","filterCount","filterWidth","filterHeight","depth","bias","filters","filterDeltas","learnFilters","learnInputs","compareInputsKernel","biases","inputs","output","constants","inputWidth","inputHeight","filterY","inputY","filterX","inputX","inputIndex","inputDepth","filterIndex","z","delta","inputXMax","inputYMax","offsetY","offsetX","trainingPredict","Dropout","isTraining","learnKernel","probability","feedForward","learnBiases","FullyConnected","learnInputsKernel","learnFiltersKernel","learnBiasKernel","learnBiasesKernel","outputs","filterDelta","recurrentInput","updateGateWeights","updateGatePeepholes","updateGateBias","updateGate","resetGateWeights","resetGatePeepholes","resetGateBias","resetGate","cellWeights","cellPeepholes","cellBias","cell","rows","columns","Input","predict1D","activate","weight","measure","learn","LeakyRelu","inputGateWeights","inputGatePeepholes","inputGateBias","inputGate","forgetGateWeights","forgetGatePeepholes","forgetGateBias","forgetGate","outputGateWeights","outputGatePeepholes","outputGateBias","outputGate","memoryWeights","memoryPeepholes","memoryBias","memory","retainCell","writeCell","compareFromX","compareFromY","Multiply","compareKernel1","compareKernel2","myName","newDeltas1","newDeltas2","weights1","weights2","inputDeltas","inputWeights","randomWeight","randos","randos2D","MultiplyElement","inputLayerWeights","Negative","ones","fill","ones2D","Ones","outputGateConnector","Pool","switchX","switchY","setSwitchX","setSwitchY","largestValue","largestX","largestY","outputWidth","outputHeight","deltaXIndex","deltaYIndex","Random","setDimensions","transition","Regression","targets","Relu","exp","Sigmoid","SoftMax","getMaxInput","maxInput","getExponentialSum","exponentialSum","getExponential","exponentials","tanh","tanhDerivative","Tanh","errors","Target","compareKernelOutput","compareFn","compare1D","compare2D","compareOutput","targetValues","outputWeights","outputDeltas","Transpose","transpose","Zeros","add","convolution","dropout","fullyConnected","leakyRelu","multiply","multiplyElement","negative","pool","regression","relu","sigmoid","softMax","svm","SVM","gru","lstm","recurrent","likely","net","maxProp","maxValue","lookup","hashes","hash","reduce","memo","lookupFromHash","EventEmitter","_events","_maxListeners","undefined","isFunction","arg","isNumber","isObject","isUndefined","module","defaultMaxListeners","setMaxListeners","TypeError","emit","er","args","listeners","addListener","listener","m","newListener","warned","console","trace","on","once","fired","g","removeListener","removeAllListeners","ret","listenerCount","evlistener","emitter","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","Item","noop","nextTick","title","browser","env","argv","versions","off","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","TrainStream","neuralNetwork","dataFormatDetermined","inputKeys","outputKeys","errorThresh","log","logPeriod","callback","callbackPeriod","floodCallback","doneTrainingCallback","count","finishStreamIteration","bind","Writable","chunk","enc","uniques","firstDatum","formatData","trainDatum","datum","trainPattern","inputLookup","lookupFromArray","outputLookup","sizes","inputSize","outputSize","unshift","initialize","arr","Set","values","mse","pow","NeuralNetwork","hiddenLayers","_updateTrainingOptions","trainDefaults","outputLayer","changes","errorCheckInterval","runInput","calculateDeltas","validations","prevSize","setActivation","activation","_runInputSigmoid","_calculateDeltasSigmoid","_runInputRelu","_calculateDeltasRelu","_runInputLeakyRelu","_calculateDeltasLeakyRelu","_runInputTanh","_calculateDeltasTanh","isRunnable","toHash","_initialize","_validateTrainingOptions","_setLogMethod","_trainPattern","status","endTime","_calculateTrainingError","_trainPatterns","_formatData","_verifyIsInitialized","_prepTraining","_trainingTick","Promise","resolve","reject","thawedTrain","Thaw","stop","tick","trainError","logErrorRate","_adjustWeights","incoming","change","momentum","tmp","buildLookup","isBinary","actual","expected","binaryThresh","misclass","layers","_getTrainOptsJSON","json","nodeHandle","layerNumber","nodeKey","w","join","layersAsMath","Function","trainStream","checkFns","filter","NeuralNetworkGPU","forwardPropagate","backwardPropagate","changesPropagate","biasesPropagate","biasCopies","copyBias","changesCopies","copyChanges","weightsCopies","copyWeights","gpu","mode","buildRunInput","buildCalculateDeltas","buildGetChanges","buildChangeBiases","buildGetMSE","getChanges","changeBiases","getMSE","weightedSum","weightedSumSigmoid","weightedSumRelu","weightedSumLeakyRelu","weightedSumTanh","_texturizeInputData","calcDeltas","calcDeltasSigmoid","calcDeltasRelu","calcDeltasLeakyRelu","calcDeltasTanh","alias","calcErrorOutput","calcError","nextWeights","nextDeltas","addWeights","calcChanges","previousOutputs","addBiases","inputTexture","texturizeOutputData","previousChanges","Matrix","row","ix","matrix","weightRows","deltasRows","rowIndex","weightValues","deltasValues","columnIndex","setWeight","setDeltas","randomFloat","a","b","randomInteger","randomN","mu","std","gaussRandom","returnV","vVal","u","r","sqrt","RandomMatrix","OnesMatrix","copy","product","cloneNegative","addB","allOnes","leftRows","leftColumns","rightColumns","leftRow","leftRowBase","rightRowBase","rightColumn","leftColumn","rightColumnBase","leftIndex","rightIndex","multiplyB","rightRow","backPropagateValue","multiplyElementB","reluB","rowPluck","rowPluckIndex","rowBase","rowPluckB","sig","sigmoidB","mwi","tanhB","Equation","inputRow","inputValue","states","self","iForward","iBackpropagate","forwardFn","backpropagationFn","sampleI","randomF","_randomF","maxI","maxv","maxix","softmax","maxVal","DataFormatter","maxThreshold","indexTable","characterTable","characters","buildCharactersFromIterable","buildTables","tempCharactersTable","dataFormatterIndex","dataFormatterLength","characterIndex","charactersLength","character","value1","value2","toIndexes","indices","toCharacters","addSpecial","special","specialIndex","JSON","stringify","toIndexesInputOutput","dataFormatter","fromAllPrintable","addInputOutput","sort","RNN","stepCache","runs","totalCost","ratioClipped","model","initialLayerInputs","inputRange","fromJSON","mapModel","getModel","d","hiddenSize","equation","inputMatrix","previousResult","hiddenLayer","lastHiddenSize","outputConnector","equationConnection","equationConnections","getEquation","inputMatrixToRow","equations","allMatrices","createInputMatrix","createHiddenLayers","hiddenMatrix","createOutputMatrix","runBackpropagate","step","log2ppl","cost","bindEquation","inputMax","equationIndex","logProbabilities","probabilities","log2","stepSize","regc","clipval","numClipped","numTot","matrixIndex","cache","decayRate","smoothEps","rawInput","maxPredictionLength","isSampleI","temperature","formatDataIn","previousIndex","outputMatrix","probs","formatDataOut","setupData","keepNetworkIntact","jsonString","previousConnectionIndex","connection","matrixToString","stateIndex","matrixOrigin","toInner","fnString","shift","fileName","fnName","toLowerCase","statesRaw","usedFunctionNames","innerFunctionsSwitch","src","toFunctionString","fromArrayInputOutput","LSTM","inputHidden","inputBias","forgetMatrix","forgetHidden","forgetBias","outputHidden","outputBias","cellWrite","cellActivationMatrix","cellActivationHidden","cellActivationBias","GRU","updateGateInputMatrix","updateGateHiddenMatrix","resetGateInputMatrix","resetGateHiddenMatrix","cellWriteInputMatrix","cellWriteHiddenMatrix","cellWriteBias","mse2d","layerFromJSON","require","Layer","realLayer","Reflect","construct","MRmsProp","clipByValue","isClippedByValue","MomentumRootMeanSquaredPropagation","momentums","setupKernels","kernel","momentumRootMeanSquaredPropagation","clipValue","regularizationStrength","getMomentum","previousMomentums","clippedDelta","previousMomentum","decay","mRmsProp","traverseLayersFrom","cb","flattenLayers","FeedForward","structure","_inputLayer","_connectHiddenLayers","_outputLayer","_connectLayers","initializeLayers","_calculateDeltas","jsonLayers","inputLayerIndex","inputLayer1Index","inputLayer2Index","getLayer","RecurrentConnection","RecurrentInput","RecurrentZeros","traverseLayersExcludingFrom","recurrentLayer","flattenLayersExcluding","Recurrent","initialLayers","_outputConnection","setLayer","flattenedLayers","_inputLayers","_hiddenLayers","_outputLayers","previousHiddenLayers","setRecurrentInput","flattenedHiddenLayers","_praxises","_connectHiddenLayersDeep","reuseKernels","hiddenConnection","hiddenLayersIndex","utilities","default","brain"],"mappings":"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A,UACA,sBACA,SACA,iBACA,QACA,UACA,qBACA,KACA,oBACA,QACA,cACA,KACA,uBACA,OACA,oBACA,QACA,YACA,QACA,qBACA,KACA,cACA,QACA,eACA,OACA,YACA,QAEkB,kBAClB,eACA,KACA,oBACA,KACA,wBACA,KACA,UACA,KACA,QACA,kBACA,KACA,mBACA,KACA,iBACA,KACA,QACA,iBACA,KACA,oBACA,KACA,SACA,KACA,sBACA,KACA,SACA,IACA,gBACA,KACA,iBACA,KACA,mBACA,KACA,OACA,IACA,iBACA,cACA,KACA,kBACA,KACA,kBACA,KACA,kBACA,KACA,SACA,IACA,mBACA,KACA,QACA,IACA,eACA,KACA,eACA,KACA,oBACA,KACA,eACA,KACA,sBACA,KACA,cACA,KACA,cACA,IACA,QACA,YACA,IACA,kBACA,KACA,eACA,KACA,YACA,KACA,SACA,IACA,mBACA,KACA,aACA,KACA,mBACA,MAEQ,QACR,QACA,OACA,OACA,wBACA,OACA,SACA,OACA,WACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,YACA,OACA,QACA,OACA,UACA,OACA,YACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,sBACA,OACA,SACA,OACA,qBACA,OACA,SACA,OACA,OACA,WACA,OACA,SACA,OACA,SACA,OACA,OACA,YACA,OACA,UACA,OACA,WACA,OACA,UACA,OACA,aACA,OACA,WACA,OACA,uBACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,SACA,OACA,UACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,MACA,OACA,SACA,OACA,UACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,mBACA,OACA,YACA,OACA,OACA,wBACA,OACA,yBACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,QACA,OACA,SACA,OACA,YACA,OACA,MACA,OACA,QACA,OACA,SACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,YACA,OACA,UACA,OACA,aACA,OACA,UACA,OACA,gBACA,OACA,eACA,OACA,gBACA,OACA,mBACA,OACA,uBACA,OACA,OACA,OACA,OACA,YACA,OACA,MACA,OACA,UACA,OACA,UACA,OACA,YACA,OACA,cACA,OACA,OACA,MACA,OACA,QACA,OACA,QACA,OACA,WACA,OACA,gBACA,OACA,aACA,OACA,oBACA,OACA,aACA,OACA,cACA,OACA,oBACA,OACA,aACA,OACA,QACA,OACA,QACA,OACA,UACA,OACA,eACA,OACA,YACA,OACA,cACA,OACA,WACA,OACA,aACA,OACA,kBACA,OACA,SACA,OACA,QACA,OACA,YACA,OACA,aACA,OACA,UACA,OACA,UACA,OACA,UACA,OACA,cACA,OACA,UACA,OACA,eACA,OACA,UACA,OACA,YACA,OACA,eACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,SACA,OACA,WACA,OACA,WACA,OACA,QACA,OACA,QACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,WACA,OACA,UACA,OACA,WACA,OACA,MACA,OACA,cACA,OACA,KACA,OACA,mBACA,SAGJI,MAAMwE,UAAUzD,KAAK+iB,MAAMlkB,GAAKmkB,MAAOnkB,GAAKokB,kBAC5CpkB,GAAKqkB,GAAKrkB,GAAKokB,iBACfpkB,GAAKskB,GAAKtkB,GAAKukB,kBAAoBvkB,GAAKwkB,IAAMxkB,GAAKykB,OAEnD,IAAIC,GAAO7c,EAAOjD,UAEd+f,GAAwB,SAA+BrC,GACpDA,KAAAA,OAASA,EACTsC,KAAAA,WAAa,OAAStC,EAAOne,QAAQsC,aAAe,EAAI,KAAO,KAAO6b,EAAOne,QAAQsC,aAAe,EAAI,IAAM,IAC9GlC,KAAAA,OAAS,GACT8Z,KAAAA,MAAQ,GACRzY,KAAAA,MAAQ,EACRif,KAAAA,SAAU,EACVC,KAAAA,SAAU,EACVjiB,KAAAA,IAAM,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","file":"brain.min.map","sourceRoot":"..\\src","sourcesContent":["/**\r\n *\r\n * @param {NeuralNetwork|constructor} Classifier\r\n * @param {object} opts\r\n * @param {object} trainOpts\r\n * @param {object} trainSet\r\n * @param {object} testSet\r\n * @returns {void|*}\r\n */\r\nexport function testPartition(Classifier, opts, trainOpts, trainSet, testSet) {\r\n  let classifier = new Classifier(opts);\r\n  let beginTrain = Date.now();\r\n  let trainingStats = classifier.train(trainSet, trainOpts);\r\n  let beginTest = Date.now();\r\n  let testStats = classifier.test(testSet);\r\n  let endTest = Date.now();\r\n  let stats = Object.assign({}, testStats, {\r\n    trainTime : beginTest - beginTrain,\r\n    testTime : endTest - beginTest,\r\n    iterations: trainingStats.iterations,\r\n    trainError: trainingStats.error,\r\n    learningRate: trainOpts.learningRate,\r\n    hidden: classifier.hiddenSizes,\r\n    network: classifier.toJSON()\r\n  });\r\n\r\n  return stats;\r\n}\r\n\r\n/**\r\n * Randomize array element order in-place.\r\n * Using Durstenfeld shuffle algorithm.\r\n * source: http://stackoverflow.com/a/12646864/1324039\r\n */\r\nexport function shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    let temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n  return array;\r\n}\r\n\r\n/**\r\n *\r\n * @param {NeuralNetwork|constructor} Classifier\r\n * @param {object} data\r\n * @param {object} opts\r\n * @param {object} trainOpts\r\n * @param {number} k\r\n * @returns {\r\n *  {\r\n *    avgs: {\r\n *      error: number,\r\n *      trainTime: number,\r\n *      testTime: number,\r\n *      iterations: number,\r\n *      trainError: number\r\n *    },\r\n *    stats: {\r\n *      truePos: number,\r\n *      trueNeg: number,\r\n *      falsePos: number,\r\n *      falseNeg: number,\r\n *      total: number\r\n *    },\r\n *    sets: Array,\r\n *    misclasses: Array\r\n *  }\r\n * }\r\n */\r\nexport default function crossValidate(Classifier, data, opts, trainOpts, k) {\r\n  k = k || 4;\r\n  let size = data.length / k;\r\n\r\n  if (data.constructor === Array) {\r\n    shuffleArray(data);\r\n  } else {\r\n    let newData = {};\r\n    shuffleArray(Object.keys(data)).forEach((key) => {\r\n      newData[key] = data[key];\r\n    });\r\n    data = newData;\r\n  }\r\n\r\n  let avgs = {\r\n    error : 0,\r\n    trainTime : 0,\r\n    testTime : 0,\r\n    iterations: 0,\r\n    trainError: 0\r\n  };\r\n\r\n  let stats = {\r\n    truePos: 0,\r\n    trueNeg: 0,\r\n    falsePos: 0,\r\n    falseNeg: 0,\r\n    total: 0\r\n  };\r\n\r\n  let misclasses = [];\r\n  let results = [];\r\n  let stat;\r\n  let sum;\r\n\r\n  for (let i = 0; i < k; i++) {\r\n    let dclone = data.slice(0);\r\n    let testSet = dclone.splice(i * size, size);\r\n    let trainSet = dclone;\r\n    let result = testPartition(Classifier, opts, trainOpts, trainSet, testSet);\r\n    for (stat in avgs) {\r\n      if (stat in avgs) {\r\n        sum = avgs[stat];\r\n        avgs[stat] = sum + result[stat];\r\n      }\r\n    }\r\n\r\n    for (stat in stats) {\r\n      if (stat in stats) {\r\n        sum = stats[stat];\r\n        stats[stat] = sum + result[stat];\r\n      }\r\n    }\r\n\r\n    misclasses.concat(results.misclasses);\r\n\r\n    results.push(result);\r\n  }\r\n\r\n  for (stat in avgs) {\r\n    if (stat in avgs) {\r\n      sum = avgs[stat];\r\n      avgs[stat] = sum / k;\r\n    }\r\n  }\r\n\r\n  stats.precision = stats.truePos / (stats.truePos + stats.falsePos);\r\n  stats.recall = stats.truePos / (stats.truePos + stats.falseNeg);\r\n  stats.accuracy = (stats.trueNeg + stats.truePos) / stats.total;\r\n\r\n  stats.testSize = size;\r\n  stats.trainSize = data.length - size;\r\n\r\n  return {\r\n    avgs: avgs,\r\n    stats: stats,\r\n    sets: results,\r\n    misclasses: misclasses\r\n  };\r\n}\r\n","'use strict';\n\n/**\n *\n * @desc Reduced subset of Utils, used exclusively in gpu-core.js\n * Various utility functions / snippets of code that GPU.JS uses internally.\\\n * This covers various snippets of code that is not entirely gpu.js specific (ie. may find uses elsewhere)\n *\n * Note that all methods in this class is 'static' by nature `UtilsCore.functionName()`\n *\n * @class UtilsCore\n *\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UtilsCore = function () {\n\tfunction UtilsCore() {\n\t\t_classCallCheck(this, UtilsCore);\n\t}\n\n\t_createClass(UtilsCore, null, [{\n\t\tkey: 'isCanvas',\n\n\n\t\t/**\n   * @typedef {Object} webGlContext\n   */\n\n\t\t/**\n   * @typedef {Object} CanvasDOMObject\n   */\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Canvas validation and support\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @name isCanvas\n   * @static\n   * @function\n   * @memberOf UtilsCore\n   *\n   *\n   * @desc Return TRUE, on a valid DOM canvas object\n   *\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {CanvasDOMObject} canvasObj - Object to validate\n   *\n   * @returns {Boolean} TRUE if the object is a DOM canvas\n   *\n   */\n\t\tvalue: function isCanvas(canvasObj) {\n\t\t\treturn canvasObj !== null && canvasObj.nodeName && canvasObj.getContext && canvasObj.nodeName.toUpperCase() === 'CANVAS';\n\t\t}\n\n\t\t/**\n   * @name isCanvasSupported\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, if browser supports canvas\n   *\n   * @returns {Boolean} TRUE if browser supports canvas\n   *\n   */\n\n\t}, {\n\t\tkey: 'isCanvasSupported',\n\t\tvalue: function isCanvasSupported() {\n\t\t\treturn _isCanvasSupported;\n\t\t}\n\n\t\t/**\n   * @name initCanvas\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Initiate and returns a canvas, for usage in init_webgl.\n   * Returns only if canvas is supported by browser.\n   *\n   * @returns {CanvasDOMObject} CanvasDOMObject if supported by browser, else null\n   *\n   */\n\n\t}, {\n\t\tkey: 'initCanvas',\n\t\tvalue: function initCanvas() {\n\t\t\t// Fail fast if browser previously detected no support\n\t\t\tif (!_isCanvasSupported) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Create a new canvas DOM\n\t\t\tvar canvas = document.createElement('canvas');\n\n\t\t\t// Default width and height, to fix webgl issue in safari\n\t\t\tcanvas.width = 2;\n\t\t\tcanvas.height = 2;\n\n\t\t\t// Returns the canvas\n\t\t\treturn canvas;\n\t\t}\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Webgl validation and support\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\n\t\t/**\n   *\n   * @name isWebGl\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, on a valid webGlContext object\n   *\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {webGlContext} webGlObj - Object to validate\n   *\n   * @returns {Boolean} TRUE if the object is a webGlContext object\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGl',\n\t\tvalue: function isWebGl(webGlObj) {\n\t\t\treturn webGlObj && typeof webGlObj.getExtension === 'function';\n\t\t}\n\n\t\t/**\n   * @name isWebGlSupported\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, if browser supports webgl\n   *\n   * @returns {Boolean} TRUE if browser supports webgl\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGlSupported',\n\t\tvalue: function isWebGlSupported() {\n\t\t\treturn _isWebGlSupported;\n\t\t}\n\t}, {\n\t\tkey: 'isWebGlDrawBuffersSupported',\n\t\tvalue: function isWebGlDrawBuffersSupported() {\n\t\t\treturn _isWebGlDrawBuffersSupported;\n\t\t}\n\n\t\t// Default webgl options to use\n\n\t}, {\n\t\tkey: 'initWebGlDefaultOptions',\n\t\tvalue: function initWebGlDefaultOptions() {\n\t\t\treturn {\n\t\t\t\talpha: false,\n\t\t\t\tdepth: false,\n\t\t\t\tantialias: false\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @name initWebGl\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Initiate and returns a webGl, from a canvas object\n   * Returns only if webGl is supported by browser.\n   *\n   * @param {CanvasDOMObject} canvasObj - Object to validate\n   *\n   * @returns {CanvasDOMObject} CanvasDOMObject if supported by browser, else null\n   *\n   */\n\n\t}, {\n\t\tkey: 'initWebGl',\n\t\tvalue: function initWebGl(canvasObj) {\n\n\t\t\t// First time setup, does the browser support check memorizer\n\t\t\tif (typeof _isCanvasSupported !== 'undefined' || canvasObj === null) {\n\t\t\t\tif (!_isCanvasSupported) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fail fast for invalid canvas object\n\t\t\tif (!UtilsCore.isCanvas(canvasObj)) {\n\t\t\t\tthrow new Error('Invalid canvas object - ' + canvasObj);\n\t\t\t}\n\n\t\t\t// Create a new canvas DOM\n\t\t\tvar webGl = canvasObj.getContext('experimental-webgl', UtilsCore.initWebGlDefaultOptions()) || canvasObj.getContext('webgl', UtilsCore.initWebGlDefaultOptions());\n\n\t\t\tif (webGl) {\n\t\t\t\t// Get the extension that is needed\n\t\t\t\twebGl.OES_texture_float = webGl.getExtension('OES_texture_float');\n\t\t\t\twebGl.OES_texture_float_linear = webGl.getExtension('OES_texture_float_linear');\n\t\t\t\twebGl.OES_element_index_uint = webGl.getExtension('OES_element_index_uint');\n\t\t\t}\n\n\t\t\t// Returns the canvas\n\t\t\treturn webGl;\n\t\t}\n\n\t\t/**\n   * @name initWebGl2\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Initiate and returns a webGl, from a canvas object\n   * Returns only if webGl is supported by browser.\n   *\n   * @param {CanvasDOMObject} canvasObj - Object to validate\n   *\n   * @returns {CanvasDOMObject} CanvasDOMObject if supported by browser, else null\n   *\n   */\n\n\t}, {\n\t\tkey: 'initWebGl2',\n\t\tvalue: function initWebGl2(canvasObj) {\n\n\t\t\t// First time setup, does the browser support check memorizer\n\t\t\tif (typeof _isCanvasSupported !== 'undefined' || canvasObj === null) {\n\t\t\t\tif (!_isCanvasSupported) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fail fast for invalid canvas object\n\t\t\tif (!UtilsCore.isCanvas(canvasObj)) {\n\t\t\t\tthrow new Error('Invalid canvas object - ' + canvasObj);\n\t\t\t}\n\n\t\t\t// Create a new canvas DOM\n\t\t\treturn canvasObj.getContext('webgl2', UtilsCore.initWebGlDefaultOptions());\n\t\t}\n\t}]);\n\n\treturn UtilsCore;\n}();\n\n//-----------------------------------------------------------------------------\n//\n//  Canvas & Webgl validation and support constants\n//\n//-----------------------------------------------------------------------------\n\nvar _isCanvasSupported = typeof document !== 'undefined' ? UtilsCore.isCanvas(document.createElement('canvas')) : false;\nvar _testingWebGl = UtilsCore.initWebGl(UtilsCore.initCanvas());\nvar _isWebGlSupported = UtilsCore.isWebGl(_testingWebGl);\nvar _isWebGlDrawBuffersSupported = _isWebGlSupported && Boolean(_testingWebGl.getExtension('WEBGL_draw_buffers'));\n\nif (_isWebGlSupported) {\n\tUtilsCore.OES_texture_float = _testingWebGl.OES_texture_float;\n\tUtilsCore.OES_texture_float_linear = _testingWebGl.OES_texture_float_linear;\n\tUtilsCore.OES_element_index_uint = _testingWebGl.OES_element_index_uint;\n} else {\n\tUtilsCore.OES_texture_float = false;\n\tUtilsCore.OES_texture_float_linear = false;\n\tUtilsCore.OES_element_index_uint = false;\n}\n\nmodule.exports = UtilsCore;","\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function Input(value, size) {\n\t_classCallCheck(this, Input);\n\n\tthis.value = value;\n\tif (Array.isArray(size)) {\n\t\tthis.size = [];\n\t\tfor (var i = 0; i < size.length; i++) {\n\t\t\tthis.size[i] = size[i];\n\t\t}\n\t\twhile (this.size.length < 3) {\n\t\t\tthis.size.push(1);\n\t\t}\n\t} else {\n\t\tif (size.z) {\n\t\t\tthis.size = [size.x, size.y, size.z];\n\t\t} else if (size.y) {\n\t\t\tthis.size = [size.x, size.y, 1];\n\t\t} else {\n\t\t\tthis.size = [size.x, 1, 1];\n\t\t}\n\t}\n};","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar gpu = null;\n\nmodule.exports = function () {\n\n\t/**\n  * @desc WebGl Texture implementation in JS\n  * @constructor Texture\n  * @param {Object} texture\n  * @param {Array} size\n  * @param dimensions\n  * @param {Array} output\n  * @param {Object} webGl\n  */\n\tfunction Texture(texture, size, dimensions, output, webGl) {\n\t\t_classCallCheck(this, Texture);\n\n\t\tthis.texture = texture;\n\t\tthis.size = size;\n\t\tthis.dimensions = dimensions;\n\t\tthis.output = output;\n\t\tthis.webGl = webGl;\n\t\tthis.kernel = null;\n\t}\n\n\t/**\n  * @name toArray\n  * @function\n  * @memberOf Texture#\n  *\n  * @desc Converts the Texture into a JavaScript Array.\n  * \n  * @param {Object} The `gpu` Object\n  *\n  */\n\n\n\t_createClass(Texture, [{\n\t\tkey: 'toArray',\n\t\tvalue: function toArray(gpu) {\n\t\t\tif (!gpu) throw new Error('You need to pass the GPU object for toArray to work.');\n\t\t\tif (this.kernel) return this.kernel(this);\n\n\t\t\tthis.kernel = gpu.createKernel(function (x) {\n\t\t\t\treturn x[this.thread.z][this.thread.y][this.thread.x];\n\t\t\t}).setOutput(this.output);\n\n\t\t\treturn this.kernel(this);\n\t\t}\n\n\t\t/**\n   * @name delete\n   * @desc Deletes the Texture.\n   * @function\n   * @memberOf Texture#\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'delete',\n\t\tvalue: function _delete() {\n\t\t\treturn this.webGl.deleteTexture(this.texture);\n\t\t}\n\t}]);\n\n\treturn Texture;\n}();","'use strict';\n\n/**\n * \n * @classdesc Various utility functions / snippets of code that GPU.JS uses internally.\\\n * This covers various snippets of code that is not entirely gpu.js specific (ie. may find uses elsewhere)\n *\n * Note that all methods in this class are *static* by nature `Utils.functionName()`\n * \n * @class Utils\n * @extends UtilsCore\n *\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar UtilsCore = require(\"./utils-core\");\nvar Input = require('./input');\nvar Texture = require('./texture');\n// FUNCTION_NAME regex\nvar FUNCTION_NAME = /function ([^(]*)/;\n\n// STRIP COMMENTS regex\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\n// ARGUMENT NAMES regex\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\n\nvar _systemEndianness = function () {\n\tvar b = new ArrayBuffer(4);\n\tvar a = new Uint32Array(b);\n\tvar c = new Uint8Array(b);\n\ta[0] = 0xdeadbeef;\n\tif (c[0] === 0xef) return 'LE';\n\tif (c[0] === 0xde) return 'BE';\n\tthrow new Error('unknown endianness');\n}();\n\nvar _isFloatReadPixelsSupported = null;\nvar _isFloatReadPixelsSupportedWebGL2 = null;\n\nvar _isMixedIdentifiersSupported = function () {\n\ttry {\n\t\tnew Function('let i = 1; const j = 1;')();\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n}();\n\nvar Utils = function (_UtilsCore) {\n\t_inherits(Utils, _UtilsCore);\n\n\tfunction Utils() {\n\t\t_classCallCheck(this, Utils);\n\n\t\treturn _possibleConstructorReturn(this, (Utils.__proto__ || Object.getPrototypeOf(Utils)).apply(this, arguments));\n\t}\n\n\t_createClass(Utils, null, [{\n\t\tkey: 'systemEndianness',\n\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  System values support (currently only endianness)\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @memberOf Utils\n   * @name systemEndianness\n   * @function\n   * @static\n   *\n   * Gets the system endianness, and cache it\n   *\n   * @returns {String} 'LE' or 'BE' depending on system architecture\n   *\n   * Credit: https://gist.github.com/TooTallNate/4750953\n   */\n\t\tvalue: function systemEndianness() {\n\t\t\treturn _systemEndianness;\n\t\t}\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Function and function string validations\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFunction\n   * @function\n   * @static\n   *\n   * Return TRUE, on a JS function\n   *\n   * @param {Function} funcObj - Object to validate if its a function\n   *\n   * @returns\t{Boolean} TRUE if the object is a JS function\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFunction',\n\t\tvalue: function isFunction(funcObj) {\n\t\t\treturn typeof funcObj === 'function';\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFunctionString\n   * @function\n   * @static\n   *\n   * Return TRUE, on a valid JS function string\n   *\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {String} funcStr - String of JS function to validate\n   *\n   * @returns {Boolean} TRUE if the string passes basic validation\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFunctionString',\n\t\tvalue: function isFunctionString(funcStr) {\n\t\t\tif (funcStr !== null) {\n\t\t\t\treturn funcStr.toString().slice(0, 'function'.length).toLowerCase() === 'function';\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getFunctionName_fromString\n   * @function\n   * @static\n   *\n   * Return the function name from a JS function string\n   *\n   * @param {String} funcStr - String of JS function to validate\n   *\n   * @returns {String} Function name string (if found)\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionNameFromString',\n\t\tvalue: function getFunctionNameFromString(funcStr) {\n\t\t\treturn FUNCTION_NAME.exec(funcStr)[1];\n\t\t}\n\t}, {\n\t\tkey: 'getFunctionBodyFromString',\n\t\tvalue: function getFunctionBodyFromString(funcStr) {\n\t\t\treturn funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getParamNames_fromString\n   * @function\n   * @static\n   *\n   * Return list of parameter names extracted from the JS function string\n   *\n   * @param {String} funcStr - String of JS function to validate\n   *\n   * @returns {String[]}  Array representing all the parameter names\n   *\n   */\n\n\t}, {\n\t\tkey: 'getParamNamesFromString',\n\t\tvalue: function getParamNamesFromString(func) {\n\t\t\tvar fnStr = func.toString().replace(STRIP_COMMENTS, '');\n\t\t\tvar result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n\t\t\tif (result === null) result = [];\n\t\t\treturn result;\n\t\t}\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Object / function cloning and manipulation\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @memberOf Utils\n   * @name clone\n   * @function\n   * @static\n   *\n   * Returns a clone\n   *\n   * @param {Object} obj - Object to clone\n   *\n   * @returns {Object}  Cloned object\n   *\n   */\n\n\t}, {\n\t\tkey: 'clone',\n\t\tvalue: function clone(obj) {\n\t\t\tif (obj === null || (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n\t\t\tvar temp = obj.constructor(); // changed\n\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj.isActiveClone = null;\n\t\t\t\t\ttemp[key] = Utils.clone(obj[key]);\n\t\t\t\t\tdelete obj.isActiveClone;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn temp;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name newPromise\n   * @function\n   * @static\n   *\n   * Returns a `new Promise` object based on the underlying implmentation\n   *\n   * @param {Function} executor - Promise builder function\n   *\n   * @returns {Promise}  Promise object\n   *\n   */\n\n\t}, {\n\t\tkey: 'newPromise',\n\t\tvalue: function newPromise(executor) {\n\t\t\tvar simple = Promise || small_promise;\n\t\t\tif (simple === null) {\n\t\t\t\tthrow TypeError('Browser is missing Promise implementation. Consider adding small_promise.js polyfill');\n\t\t\t}\n\t\t\treturn new simple(executor);\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name functionBinder\n   * @function\n   * @static\n   *\n   * Limited implementation of Function.bind, with fallback\n   *\n   * @param {Function} inFunc - to setup bind on\n   * @param {Object} thisObj - The this parameter to assume inside the binded function\n   *\n   * @returns {Function}  The binded function\n   *\n   */\n\n\t}, {\n\t\tkey: 'functionBinder',\n\t\tvalue: function functionBinder(inFunc, thisObj) {\n\t\t\tif (inFunc.bind) {\n\t\t\t\treturn inFunc.bind(thisObj);\n\t\t\t}\n\n\t\t\treturn function () {\n\t\t\t\tvar args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);\n\t\t\t\treturn inFunc.apply(thisObj, args);\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name isArray\n   * @function\n   * @static\n   *\n   * * Checks if is an array or Array-like object\n   *\n   * @param {Object} arg - The argument object to check if is array\n   *\n   * @returns {Boolean}  true if is array or Array-like object\n   *\n   */\n\n\t}, {\n\t\tkey: 'isArray',\n\t\tvalue: function isArray(array) {\n\t\t\tif (isNaN(array.length)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getArgumentType\n   * @function\n   * @static\n   *\n   * Evaluate the argument type, to apply respective logic for it\n   *\n   * @param {Object} arg - The argument object to evaluate type\n   *\n   * @returns {String}  Argument type Array/Number/Float/Texture/Unknown\n   *\n   */\n\n\t}, {\n\t\tkey: 'getArgumentType',\n\t\tvalue: function getArgumentType(arg) {\n\t\t\tif (Utils.isArray(arg)) {\n\t\t\t\tif (arg[0].nodeName === 'IMG') {\n\t\t\t\t\treturn 'HTMLImageArray';\n\t\t\t\t}\n\t\t\t\treturn 'Array';\n\t\t\t} else if (typeof arg === 'number') {\n\t\t\t\tif (Number.isInteger(arg)) {\n\t\t\t\t\treturn 'Integer';\n\t\t\t\t}\n\t\t\t\treturn 'Float';\n\t\t\t} else if (arg instanceof Texture) {\n\t\t\t\treturn 'Texture';\n\t\t\t} else if (arg instanceof Input) {\n\t\t\t\treturn 'Input';\n\t\t\t} else if (arg.nodeName === 'IMG') {\n\t\t\t\treturn 'HTMLImage';\n\t\t\t} else {\n\t\t\t\treturn 'Unknown';\n\t\t\t}\n\t\t}\n\t\t/**\n   * @typedef {Object} gpuJSObject\n   */\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFloatReadPixelsSupported\n   * @function\n   * @static\n   *\n   * Checks if the browser supports readPixels with float type\n   *\n   * @returns {Boolean} true if browser supports\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFloatReadPixelsSupported',\n\t\tvalue: function isFloatReadPixelsSupported() {\n\t\t\tif (_isFloatReadPixelsSupported !== null) {\n\t\t\t\treturn _isFloatReadPixelsSupported;\n\t\t\t}\n\n\t\t\tvar GPU = require('../index');\n\t\t\tvar x = new GPU({\n\t\t\t\tmode: 'webgl-validator'\n\t\t\t}).createKernel(function () {\n\t\t\t\treturn 1;\n\t\t\t}, {\n\t\t\t\toutput: [2],\n\t\t\t\tfloatTextures: true,\n\t\t\t\tfloatOutput: true,\n\t\t\t\tfloatOutputForce: true\n\t\t\t})();\n\n\t\t\t_isFloatReadPixelsSupported = x[0] === 1;\n\n\t\t\treturn _isFloatReadPixelsSupported;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFloatReadPixelsSupportedWebGL2\n   * @function\n   * @static\n   *\n   * Checks if the browser supports readPixels with float type\n   *\n   * @returns {Boolean} true if browser supports\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFloatReadPixelsSupportedWebGL2',\n\t\tvalue: function isFloatReadPixelsSupportedWebGL2() {\n\t\t\tif (_isFloatReadPixelsSupportedWebGL2 !== null) {\n\t\t\t\treturn _isFloatReadPixelsSupportedWebGL2;\n\t\t\t}\n\n\t\t\tvar GPU = require('../index');\n\t\t\tvar x = new GPU({\n\t\t\t\tmode: 'webgl2-validator'\n\t\t\t}).createKernel(function () {\n\t\t\t\treturn 1;\n\t\t\t}, {\n\t\t\t\toutput: [2],\n\t\t\t\tfloatTextures: true,\n\t\t\t\tfloatOutput: true,\n\t\t\t\tfloatOutputForce: true\n\t\t\t})();\n\n\t\t\t_isFloatReadPixelsSupportedWebGL2 = x[0] === 1;\n\n\t\t\treturn _isFloatReadPixelsSupportedWebGL2;\n\t\t}\n\t}, {\n\t\tkey: 'isMixedIdentifiersSupported',\n\t\tvalue: function isMixedIdentifiersSupported() {\n\t\t\treturn _isMixedIdentifiersSupported;\n\t\t}\n\t}, {\n\t\tkey: 'dimToTexSize',\n\t\tvalue: function dimToTexSize(opt, dimensions, output) {\n\t\t\tvar numTexels = dimensions[0];\n\t\t\tfor (var i = 1; i < dimensions.length; i++) {\n\t\t\t\tnumTexels *= dimensions[i];\n\t\t\t}\n\n\t\t\tif (opt.floatTextures && (!output || opt.floatOutput)) {\n\t\t\t\tnumTexels = Math.ceil(numTexels / 4);\n\t\t\t}\n\n\t\t\tvar w = Math.ceil(Math.sqrt(numTexels));\n\t\t\treturn [w, w];\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getDimensions\n   * @function\n   * @static\n   *\n   * Return the dimension of an array.\n   * \n   * @param {Array|String} x - The array\n   * @param {number} [pad] - To include padding in the dimension calculation [Optional]\n   *\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'getDimensions',\n\t\tvalue: function getDimensions(x, pad) {\n\t\t\tvar ret = void 0;\n\t\t\tif (Utils.isArray(x)) {\n\t\t\t\tvar dim = [];\n\t\t\t\tvar temp = x;\n\t\t\t\twhile (Utils.isArray(temp)) {\n\t\t\t\t\tdim.push(temp.length);\n\t\t\t\t\ttemp = temp[0];\n\t\t\t\t}\n\t\t\t\tret = dim.reverse();\n\t\t\t} else if (x instanceof Texture) {\n\t\t\t\tret = x.output;\n\t\t\t} else if (x instanceof Input) {\n\t\t\t\tret = x.size;\n\t\t\t} else {\n\t\t\t\tthrow 'Unknown dimensions of ' + x;\n\t\t\t}\n\n\t\t\tif (pad) {\n\t\t\t\tret = Utils.clone(ret);\n\t\t\t\twhile (ret.length < 3) {\n\t\t\t\t\tret.push(1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name pad\n   * @function\n   * @static\n   *\n   * Pad an array AND its elements with leading and ending zeros\n   *\n   * @param {Array} arr - the array to pad zeros to\n   * @param {number} padding - amount of padding\n   *\n   * @returns {Array} Array with leading and ending zeros, and all the elements padded by zeros.\n   *\n   */\n\n\t}, {\n\t\tkey: 'pad',\n\t\tvalue: function pad(arr, padding) {\n\t\t\tfunction zeros(n) {\n\t\t\t\treturn Array.apply(null, new Array(n)).map(Number.prototype.valueOf, 0);\n\t\t\t}\n\n\t\t\tvar len = arr.length + padding * 2;\n\n\t\t\tvar ret = arr.map(function (x) {\n\t\t\t\treturn [].concat(zeros(padding), x, zeros(padding));\n\t\t\t});\n\n\t\t\tfor (var i = 0; i < padding; i++) {\n\t\t\t\tret = [].concat([zeros(len)], ret, [zeros(len)]);\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name flatten2dArrayTo\n   * @function\n   * @static\n   *\n   * Puts a nested 2d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n\n\t}, {\n\t\tkey: 'flatten2dArrayTo',\n\t\tvalue: function flatten2dArrayTo(array, target) {\n\t\t\tvar offset = 0;\n\t\t\tfor (var y = 0; y < array.length; y++) {\n\t\t\t\ttarget.set(array[y], offset);\n\t\t\t\toffset += array[y].length;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name flatten3dArrayTo\n   * @function\n   * @static\n   *\n   * Puts a nested 3d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n\n\t}, {\n\t\tkey: 'flatten3dArrayTo',\n\t\tvalue: function flatten3dArrayTo(array, target) {\n\t\t\tvar offset = 0;\n\t\t\tfor (var z = 0; z < array.length; z++) {\n\t\t\t\tfor (var y = 0; y < array[z].length; y++) {\n\t\t\t\t\ttarget.set(array[z][y], offset);\n\t\t\t\t\toffset += array[z][y].length;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name flatten3dArrayTo\n   * @function\n   * @static\n   *\n   * Puts a nested 1d, 2d, or 3d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n\n\t}, {\n\t\tkey: 'flattenTo',\n\t\tvalue: function flattenTo(array, target) {\n\t\t\tif (Utils.isArray(array[0])) {\n\t\t\t\tif (Utils.isArray(array[0][0])) {\n\t\t\t\t\tUtils.flatten3dArrayTo(array, target);\n\t\t\t\t} else {\n\t\t\t\t\tUtils.flatten2dArrayTo(array, target);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttarget.set(array);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name splitArray\n   * @function\n   * @static\n   *\n   * Splits an array into smaller arrays.\n   * Number of elements in one small chunk is given by `part`\n   *\n   * @param {Array} array - The array to split into chunks\n   * @param {Array} part - elements in one chunk\n   *\n  \t * @returns {Array} An array of smaller chunks\n   *\n   */\n\n\t}, {\n\t\tkey: 'splitArray',\n\t\tvalue: function splitArray(array, part) {\n\t\t\tvar result = [];\n\t\t\tfor (var i = 0; i < array.length; i += part) {\n\t\t\t\tresult.push(Array.prototype.slice.call(array, i, i + part));\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}, {\n\t\tkey: 'getAstString',\n\t\tvalue: function getAstString(source, ast) {\n\t\t\tvar lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n\t\t\tvar start = ast.loc.start;\n\t\t\tvar end = ast.loc.end;\n\t\t\tvar result = [];\n\t\t\tresult.push(lines[start.line - 1].slice(start.column));\n\t\t\tfor (var i = start.line; i < end.line - 1; i++) {\n\t\t\t\tresult.push(lines[i]);\n\t\t\t}\n\t\t\tresult.push(lines[end.line - 1].slice(0, end.column));\n\t\t\treturn result.join('\\n');\n\t\t}\n\t}, {\n\t\tkey: 'allPropertiesOf',\n\t\tvalue: function allPropertiesOf(obj) {\n\t\t\tvar props = [];\n\n\t\t\tdo {\n\t\t\t\tprops.push.apply(props, Object.getOwnPropertyNames(obj));\n\t\t\t} while (obj = Object.getPrototypeOf(obj));\n\n\t\t\treturn props;\n\t\t}\n\t}]);\n\n\treturn Utils;\n}(UtilsCore);\n\n// This ensure static methods are \"inherited\"\n// See: https://stackoverflow.com/questions/5441508/how-to-inherit-static-methods-from-base-class-in-javascript\n\n\nObject.assign(Utils, UtilsCore);\n\nmodule.exports = Utils;","'use strict';\n\nvar utils = require('../core/utils');\n\nmodule.exports = function kernelRunShortcut(kernel) {\n\tvar shortcut = function shortcut() {\n\t\treturn kernel.run.apply(kernel, arguments);\n\t};\n\n\tutils.allPropertiesOf(kernel).forEach(function (key) {\n\t\tif (key[0] === '_' && key[1] === '_') return;\n\t\tif (typeof kernel[key] === 'function') {\n\t\t\tif (key.substring(0, 3) === 'add' || key.substring(0, 3) === 'set') {\n\t\t\t\tshortcut[key] = function () {\n\t\t\t\t\tkernel[key].apply(kernel, arguments);\n\t\t\t\t\treturn shortcut;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tshortcut[key] = kernel[key].bind(kernel);\n\t\t\t}\n\t\t} else {\n\t\t\tshortcut.__defineGetter__(key, function () {\n\t\t\t\treturn kernel[key];\n\t\t\t});\n\t\t\tshortcut.__defineSetter__(key, function (value) {\n\t\t\t\tkernel[key] = value;\n\t\t\t});\n\t\t}\n\t});\n\n\tshortcut.kernel = kernel;\n\n\treturn shortcut;\n};","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../core/utils');\nvar kernelRunShortcut = require('./kernel-run-shortcut');\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor BaseRunner\n  *\n  * @desc Represents the 'private/protected' namespace of the GPU class\n  *\n  * <p>I know @private makes more sense, but since the documentation engine state is undetirmined.\n  * (See https://github.com/gpujs/gpu.js/issues/19 regarding documentation engine issue)\n  * File isolation is currently the best way to go. </p>\n  *\n  * *base.js* internal functions namespace <br>\n  * *gpu.js* PUBLIC function namespace <br>\n  *\n  * @prop {Object} settings - Settings object used to set Dimensions, etc.\n  * @prop {String} kernel - Current kernel instance\n  * @prop {Object} canvas - Canvas instance attached to the kernel\n  * @prop {Object} webGl - WebGl instance attached to the kernel\n  * @prop {Function} fn - Kernel function to run\n  * @prop {Object} functionBuilder - FunctionBuilder instance\n  * @prop {String} fnString - Kernel function (as a String)\n  * @prop {String} endianness - endian information like Little-endian, Big-endian.\n  *\n  */\n\n\tfunction BaseRunner(functionBuilder, settings) {\n\t\t_classCallCheck(this, BaseRunner);\n\n\t\tsettings = settings || {};\n\t\tthis.kernel = settings.kernel;\n\t\tthis.canvas = settings.canvas;\n\t\tthis.webGl = settings.webGl;\n\t\tthis.fn = null;\n\t\tthis.functionBuilder = functionBuilder;\n\t\tthis.fnString = null;\n\t\tthis.endianness = utils.systemEndianness();\n\t}\n\n\t/**\n  * @memberOf BaseRunner#\n  * @function\n  * @name textureToArray\n  *\n  * @desc Converts the provided Texture instance to a JavaScript Array\n  *\n  * @param {Object} texture - Texture Object\n  *\n  */\n\n\n\t_createClass(BaseRunner, [{\n\t\tkey: 'textureToArray',\n\t\tvalue: function textureToArray(texture) {\n\t\t\tvar copy = this.createKernel(function (x) {\n\t\t\t\treturn x[this.thread.z][this.thread.y][this.thread.x];\n\t\t\t});\n\n\t\t\treturn copy(texture);\n\t\t}\n\n\t\t/**\n   * @memberOf BaseRunner#\n   * @function\n   *\n   * @name deleteTexture\n   *\n   * @desc Deletes the provided Texture instance\n   *\n   * @param {Object} texture - Texture Object\n   */\n\n\t}, {\n\t\tkey: 'deleteTexture',\n\t\tvalue: function deleteTexture(texture) {\n\t\t\tthis.webGl.deleteTexture(texture.texture);\n\t\t}\n\n\t\t/**\n   * @memberOf BaseRunner#\n   * @function\n   * @name buildPromiseKernel\n   *\n   * @desc Get and returns the ASYNCHRONOUS executor, of a class and kernel\n   * This returns a Promise object from an argument set.\n   *\n   * Note that there is no current implementation.\n   *\n   */\n\n\t}, {\n\t\tkey: 'buildPromiseKernel',\n\t\tvalue: function buildPromiseKernel() {\n\t\t\tthrow new Error('not yet implemented');\n\t\t}\n\t}, {\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\tthrow new Error('\"mode\" not implemented on BaseRunner');\n\t\t}\n\n\t\t/**\n   * @memberOf BaseRunner#\n   * @function\n   *\n   * @name buildKernel\n   *\n   * @desc Get and returns the Synchronous executor, of a class and kernel\n   * Which returns the result directly after passing the arguments.\n   *\n   */\n\n\t}, {\n\t\tkey: 'buildKernel',\n\t\tvalue: function buildKernel(fn, settings) {\n\t\t\tsettings = Object.assign({}, settings || {});\n\t\t\tvar fnString = fn.toString();\n\t\t\tif (!settings.functionBuilder) {\n\t\t\t\tsettings.functionBuilder = this.functionBuilder;\n\t\t\t}\n\n\t\t\tif (!settings.canvas) {\n\t\t\t\tsettings.canvas = this.canvas;\n\t\t\t}\n\n\t\t\tif (!settings.webGl) {\n\t\t\t\tsettings.webGl = this.webgl;\n\t\t\t}\n\n\t\t\treturn kernelRunShortcut(new this.Kernel(fnString, settings));\n\t\t}\n\t}]);\n\n\treturn BaseRunner;\n}();","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../core/utils');\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor BaseKernel\n  * \n  * @desc Implements the base class for Kernels, and is used as a \n  * parent class for all Kernel implementations.\n  *\n  * This contains the basic methods needed by all Kernel implementations, \n  * like setDimensions, addSubKernel, etc.\n  * \n  * @prop {Array} paramNames - Name of the parameters of the kernel function\n  * @prop {String} fnString - Kernel function as a String\n  * @prop {Array} dimensions - Dimensions of the kernel function, this.thread.x, etc.\n  * @prop {Boolean} debug - Toggle debug mode\n  * @prop {String} graphical - Toggle graphical mode\n  * @prop {number} loopMaxIterations - Maximum number of loop iterations\n  * @prop {Object} constants - Global constants\n  * @prop {Array} subKernels - Sub kernels bound to this kernel instance\n  * @prop {Object} subKernelProperties - Sub kernels bound to this kernel instance as key/value pairs\n  * @prop {Array} subKernelOutputVariableNames - Names of the variables outputted by the subkerls\n  *\n  */\n\tfunction BaseKernel(fnString, settings) {\n\t\t_classCallCheck(this, BaseKernel);\n\n\t\tthis.paramNames = utils.getParamNamesFromString(fnString);\n\t\tthis.fnString = fnString;\n\t\tthis.output = null;\n\t\tthis.debug = false;\n\t\tthis.graphical = false;\n\t\tthis.loopMaxIterations = 0;\n\t\tthis.constants = null;\n\t\tthis.wraparound = null;\n\t\tthis.hardcodeConstants = null;\n\t\tthis.outputToTexture = null;\n\t\tthis.outputImmutable = null;\n\t\tthis.texSize = null;\n\t\tthis._canvas = null;\n\t\tthis._webGl = null;\n\t\tthis.threadDim = null;\n\t\tthis.floatTextures = null;\n\t\tthis.floatOutput = null;\n\t\tthis.floatOutputForce = null;\n\t\tthis.addFunction = null;\n\t\tthis.functions = null;\n\t\tthis.nativeFunctions = null;\n\t\tthis.subKernels = null;\n\t\tthis.subKernelProperties = null;\n\t\tthis.subKernelNames = null;\n\t\tthis.subKernelOutputVariableNames = null;\n\t\tthis.functionBuilder = null;\n\t\tthis.paramTypes = null;\n\n\t\tfor (var p in settings) {\n\t\t\tif (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n\t\t\tthis[p] = settings[p];\n\t\t}\n\t\tif (settings.hasOwnProperty('canvas')) {\n\t\t\tthis._canvas = settings.canvas;\n\t\t}\n\t\tif (settings.hasOwnProperty('output')) {\n\t\t\tthis.setOutput(settings.output); // Flatten output object\n\t\t}\n\n\t\tif (!this._canvas) this._canvas = utils.initCanvas();\n\t}\n\n\t_createClass(BaseKernel, [{\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\tthrow new Error('\"build\" not defined on Base');\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setupParams\n   *\n   * @desc Setup the parameter types for the parameters\n   * supplied to the Kernel function\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   */\n\n\t}, {\n\t\tkey: 'setupParams',\n\t\tvalue: function setupParams(args) {\n\t\t\tvar paramTypes = this.paramTypes = [];\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tvar param = args[i];\n\t\t\t\tvar paramType = utils.getArgumentType(param);\n\t\t\t\tparamTypes.push(paramType);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setAddFunction',\n\t\tvalue: function setAddFunction(cb) {\n\t\t\tthis.addFunction = cb;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setFunctions',\n\t\tvalue: function setFunctions(functions) {\n\t\t\tthis.functions = functions;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf BaseKernel#\n   * @function\n   * @name setOutput\n   *\n   * @desc Set dimensions of the kernel function\n   *\n   * @param {Array|Object} output - The output array to set the kernel output size to\n   *\n   */\n\n\t}, {\n\t\tkey: 'setOutput',\n\t\tvalue: function setOutput(output) {\n\t\t\tif (output.hasOwnProperty('x')) {\n\t\t\t\tif (output.hasOwnProperty('y')) {\n\t\t\t\t\tif (output.hasOwnProperty('z')) {\n\t\t\t\t\t\tthis.output = [output.x, output.y, output.z];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.output = [output.x, output.y];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.output = [output.x];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.output = output;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf BaseKernel# \n   * @function\n   * @name setDebug\n   *\n   * @desc Toggle debug mode\n   *\n   * @param {Boolean} flag - true to enable debug\n   *\n   */\n\n\t}, {\n\t\tkey: 'setDebug',\n\t\tvalue: function setDebug(flag) {\n\t\t\tthis.debug = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf BaseKernel#\n   * @function\n   * @name setGraphical\n   *\n   * @desc Toggle graphical output mode\n   *\n   * @param {Boolean} flag - true to enable graphical output\n   *\n   */\n\n\t}, {\n\t\tkey: 'setGraphical',\n\t\tvalue: function setGraphical(flag) {\n\t\t\tthis.graphical = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf BaseKernel#\n   * @function\n   * @name setLoopMaxIterations\n   *\n   * @desc Set the maximum number of loop iterations\n   *\n   * @param {number} max - iterations count\n   *\n   */\n\n\t}, {\n\t\tkey: 'setLoopMaxIterations',\n\t\tvalue: function setLoopMaxIterations(max) {\n\t\t\tthis.loopMaxIterations = max;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf BaseKernel#\n   * @function\n   * @name setConstants\n   * @desc Set Constants\n   */\n\n\t}, {\n\t\tkey: 'setConstants',\n\t\tvalue: function setConstants(constants) {\n\t\t\tthis.constants = constants;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setWraparound',\n\t\tvalue: function setWraparound(flag) {\n\t\t\tconsole.warn('Wraparound mode is not supported and undocumented.');\n\t\t\tthis.wraparound = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setHardcodeConstants',\n\t\tvalue: function setHardcodeConstants(flag) {\n\t\t\tthis.hardcodeConstants = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setOutputToTexture',\n\t\tvalue: function setOutputToTexture(flag) {\n\t\t\tthis.outputToTexture = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setOutputImmutable',\n\t\tvalue: function setOutputImmutable(flag) {\n\t\t\tthis.outputImmutable = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf BaseKernel#\n   * @function\n   * @name setFloatTextures\n   *\n   * @desc Toggle texture output mode\n   *\n   * @param {Boolean} flag - true to enable floatTextures\n   *\n   */\n\n\t}, {\n\t\tkey: 'setFloatTextures',\n\t\tvalue: function setFloatTextures(flag) {\n\t\t\tthis.floatTextures = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf BaseKernel#\n   * @function\n   * @name setFloatOutput\n   *\n   * @desc Toggle output mode\n   *\n   * @param {Boolean} flag - true to enable float\n   *\n   */\n\n\t}, {\n\t\tkey: 'setFloatOutput',\n\t\tvalue: function setFloatOutput(flag) {\n\t\t\tthis.floatOutput = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setFloatOutputForce',\n\t\tvalue: function setFloatOutputForce(flag) {\n\t\t\tthis.floatOutputForce = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf BaseKernel#\n   * @function\n   * @name setCanvas\n   *\n   * @desc Bind the canvas to kernel\n   * \n   * @param {Canvas} canvas - Canvas to bind\n   *\n   */\n\n\t}, {\n\t\tkey: 'setCanvas',\n\t\tvalue: function setCanvas(canvas) {\n\t\t\tthis._canvas = canvas;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf BaseKernel#\n   * @function\n   * @name setCanvas\n   *\n   * @desc Bind the webGL instance to kernel\n   * \n   * @param {Canvas} webGL - webGL instance to bind\n   *\n   */\n\n\t}, {\n\t\tkey: 'setWebGl',\n\t\tvalue: function setWebGl(webGl) {\n\t\t\tthis._webGl = webGl;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf BaseKernel#\n   * @function\n   * @name getCanvas()\n   *\n   * @desc Returns the current canvas instance bound to the kernel\n   *\n   */\n\n\t}, {\n\t\tkey: 'getCanvas',\n\t\tvalue: function getCanvas() {\n\t\t\treturn this._canvas;\n\t\t}\n\n\t\t/**\n   * @memberOf BaseKernel#\n   * @function\n   * @name getWebGl()\n   *\n   * @desc Returns the current webGl instance bound to the kernel\n   *\n   */\n\n\t}, {\n\t\tkey: 'getWebGl',\n\t\tvalue: function getWebGl() {\n\t\t\treturn this._webGl;\n\t\t}\n\t}, {\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tthrow new Error('validateOptions not defined');\n\t\t}\n\t}, {\n\t\tkey: 'exec',\n\t\tvalue: function exec() {\n\t\t\treturn this.execute.apply(this, arguments);\n\t\t}\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar _this = this;\n\n\t\t\t//\n\t\t\t// Prepare the required objects\n\t\t\t//\n\t\t\tvar args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);\n\n\t\t\t//\n\t\t\t// Setup and return the promise, and execute the function, in synchronous mode\n\t\t\t//\n\t\t\treturn utils.newPromise(function (accept, reject) {\n\t\t\t\ttry {\n\t\t\t\t\taccept(_this.run.apply(_this, args));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t//\n\t\t\t\t\t// Error : throw rejection\n\t\t\t\t\t//\n\t\t\t\t\treject(e);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/** \n   * @memberOf BaseKernel#\n   * @function\n   * @name addSubKernel\n   *\n   * @desc Add a sub kernel to the root kernel instance.\n   * This is what `createKernelMap` uses.\n   *\n   * @param {String} fnString - function (as a String) of the subKernel to add\n   *\n   */\n\n\t}, {\n\t\tkey: 'addSubKernel',\n\t\tvalue: function addSubKernel(fnString) {\n\t\t\tif (this.subKernels === null) {\n\t\t\t\tthis.subKernels = [];\n\t\t\t\tthis.subKernelNames = [];\n\t\t\t}\n\t\t\tthis.subKernels.push(fnString);\n\t\t\tthis.subKernelNames.push(utils.getFunctionNameFromString(fnString));\n\t\t\treturn this;\n\t\t}\n\n\t\t/** \n   * @memberOf BaseKernel#\n   * @function\n   * @name addSubKernelProperty\n   *\n   * @desc Add a sub kernel to the root kernel instance, indexed by a property name\n   * This is what `createKernelMap` uses.\n   *\n   * @param {String} property - property key for the subKernel\n   * @param {String} fnString - function (as a String) of the subKernel to add\n   *\n   */\n\n\t}, {\n\t\tkey: 'addSubKernelProperty',\n\t\tvalue: function addSubKernelProperty(property, fnString) {\n\t\t\tif (this.subKernelProperties === null) {\n\t\t\t\tthis.subKernelProperties = {};\n\t\t\t\tthis.subKernelNames = [];\n\t\t\t}\n\t\t\tif (this.subKernelProperties.hasOwnProperty(property)) {\n\t\t\t\tthrow new Error('cannot add sub kernel ' + property + ', already defined');\n\t\t\t}\n\t\t\tthis.subKernelProperties[property] = fnString;\n\t\t\tthis.subKernelNames.push(utils.getFunctionNameFromString(fnString));\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(name, source) {\n\t\t\tthis.functionBuilder.addNativeFunction(name, source);\n\t\t}\n\t}]);\n\n\treturn BaseKernel;\n}();","\"use strict\";\n\nmodule.exports = \"__HEADER__;\\nprecision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nconst float LOOP_MAX = __LOOP_MAX__;\\n#define EPSILON 0.0000001;\\n\\n__CONSTANTS__;\\n\\nvarying highp vec2 vTexCoord;\\n\\nvec4 round(vec4 x) {\\n  return floor(x + 0.5);\\n}\\n\\nhighp float round(highp float x) {\\n  return floor(x + 0.5);\\n}\\n\\nvec2 integerMod(vec2 x, float y) {\\n  vec2 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec3 integerMod(vec3 x, float y) {\\n  vec3 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec4 integerMod(vec4 x, vec4 y) {\\n  vec4 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nhighp float integerMod(highp float x, highp float y) {\\n  highp float res = floor(mod(x, y));\\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\\n}\\n\\nhighp int integerMod(highp int x, highp int y) {\\n  return int(integerMod(float(x), float(y)));\\n}\\n\\n// Here be dragons!\\n// DO NOT OPTIMIZE THIS CODE\\n// YOU WILL BREAK SOMETHING ON SOMEBODY'S MACHINE\\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\\nhighp float decode32(highp vec4 rgba) {\\n  __DECODE32_ENDIANNESS__;\\n  rgba *= 255.0;\\n  vec2 gte128;\\n  gte128.x = rgba.b >= 128.0 ? 1.0 : 0.0;\\n  gte128.y = rgba.a >= 128.0 ? 1.0 : 0.0;\\n  float exponent = 2.0 * rgba.a - 127.0 + dot(gte128, MAGIC_VEC);\\n  float res = exp2(round(exponent));\\n  rgba.b = rgba.b - 128.0 * gte128.x;\\n  res = dot(rgba, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\\n  res *= gte128.y * -2.0 + 1.0;\\n  return res;\\n}\\n\\nhighp vec4 encode32(highp float f) {\\n  highp float F = abs(f);\\n  highp float sign = f < 0.0 ? 1.0 : 0.0;\\n  highp float exponent = floor(log2(F));\\n  highp float mantissa = (exp2(-exponent) * F);\\n  // exponent += floor(log2(mantissa));\\n  vec4 rgba = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\\n  rgba.rg = integerMod(rgba.rg, 256.0);\\n  rgba.b = integerMod(rgba.b, 128.0);\\n  rgba.a = exponent*0.5 + 63.5;\\n  rgba.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\\n  rgba = floor(rgba);\\n  rgba *= 0.003921569; // 1/255\\n  __ENCODE32_ENDIANNESS__;\\n  return rgba;\\n}\\n// Dragons end here\\n\\nhighp float index;\\nhighp vec3 threadId;\\n\\nhighp vec3 indexTo3D(highp float idx, highp vec3 texDim) {\\n  highp float z = floor(idx / (texDim.x * texDim.y));\\n  idx -= z * texDim.x * texDim.y;\\n  highp float y = floor(idx / texDim.x);\\n  highp float x = integerMod(idx, texDim.x);\\n  return vec3(x, y, z);\\n}\\n\\nhighp float get(highp sampler2D tex, highp vec2 texSize, highp vec3 texDim, highp float z, highp float y, highp float x) {\\n  highp vec3 xyz = vec3(x, y, z);\\n  xyz = floor(xyz + 0.5);\\n  __GET_WRAPAROUND__;\\n  highp float index = round(xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z));\\n  __GET_TEXTURE_CHANNEL__;\\n  highp float w = round(texSize.x);\\n  vec2 st = vec2(integerMod(index, w), float(int(index) / int(w))) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  highp vec4 texel = texture2D(tex, st / texSize);\\n  __GET_RESULT__;\\n}\\n\\nhighp vec4 getImage2D(highp sampler2D tex, highp vec2 texSize, highp vec3 texDim, highp float z, highp float y, highp float x) {\\n  highp vec3 xyz = vec3(x, y, z);\\n  xyz = floor(xyz + 0.5);\\n  __GET_WRAPAROUND__;\\n  highp float index = round(xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z));\\n  __GET_TEXTURE_CHANNEL__;\\n  highp float w = round(texSize.x);\\n  vec2 st = vec2(integerMod(index, w), float(int(index) / int(w))) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  return texture2D(tex, st / texSize);\\n}\\n\\nhighp float get(highp sampler2D tex, highp vec2 texSize, highp vec3 texDim, highp float y, highp float x) {\\n  return get(tex, texSize, texDim, 0.0, y, x);\\n}\\n\\nhighp vec4 getImage2D(highp sampler2D tex, highp vec2 texSize, highp vec3 texDim, highp float y, highp float x) {\\n  return getImage2D(tex, texSize, texDim, 0.0, y, x);\\n}\\n\\nhighp float get(highp sampler2D tex, highp vec2 texSize, highp vec3 texDim, highp float x) {\\n  return get(tex, texSize, texDim, 0.0, 0.0, x);\\n}\\n\\nhighp vec4 getImage2D(highp sampler2D tex, highp vec2 texSize, highp vec3 texDim, highp float x) {\\n  return getImage2D(tex, texSize, texDim, 0.0, 0.0, x);\\n}\\n\\nhighp vec4 actualColor;\\nvoid color(float r, float g, float b, float a) {\\n  actualColor = vec4(r,g,b,a);\\n}\\n\\nvoid color(float r, float g, float b) {\\n  color(r,g,b,1.0);\\n}\\n\\nvoid color(sampler2D image) {\\n  actualColor = texture2D(image, vTexCoord);\\n}\\n\\n__MAIN_PARAMS__;\\n__MAIN_CONSTANTS__;\\n__KERNEL__;\\n\\nvoid main(void) {\\n  index = floor(vTexCoord.s * float(uTexSize.x)) + floor(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\\n  __MAIN_RESULT__;\\n}\";","\"use strict\";\n\nmodule.exports = \"precision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nattribute highp vec2 aPos;\\nattribute highp vec2 aTexCoord;\\n\\nvarying highp vec2 vTexCoord;\\nuniform vec2 ratio;\\n\\nvoid main(void) {\\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\\n  vTexCoord = aTexCoord;\\n}\";","'use strict';\n\nvar utils = require('../../core/utils');\nvar kernelRunShortcut = require('../kernel-run-shortcut');\n\nfunction removeFnNoise(fn) {\n  if (/^function /.test(fn)) {\n    fn = fn.substring(9);\n  }\n  return fn.replace(/[_]typeof/g, 'typeof');\n}\n\nfunction removeNoise(str) {\n  return str.replace(/[_]typeof/g, 'typeof');\n}\n\nmodule.exports = function (gpuKernel, name) {\n  return '() => {\\n    ' + kernelRunShortcut.toString() + ';\\n    const utils = {\\n      allPropertiesOf: ' + removeNoise(utils.allPropertiesOf.toString()) + ',\\n      clone: ' + removeNoise(utils.clone.toString()) + ',\\n      splitArray: ' + removeNoise(utils.splitArray.toString()) + ',\\n      getArgumentType: ' + removeNoise(utils.getArgumentType.toString()) + ',\\n      getDimensions: ' + removeNoise(utils.getDimensions.toString()) + ',\\n      dimToTexSize: ' + removeNoise(utils.dimToTexSize.toString()) + ',\\n      flattenTo: ' + removeNoise(utils.flattenTo.toString()) + ',\\n      flatten2dArrayTo: ' + removeNoise(utils.flatten2dArrayTo.toString()) + ',\\n      flatten3dArrayTo: ' + removeNoise(utils.flatten3dArrayTo.toString()) + ',\\n      systemEndianness: \\'' + removeNoise(utils.systemEndianness()) + '\\',\\n      initWebGl: ' + removeNoise(utils.initWebGl.toString()) + ',\\n      isArray: ' + removeNoise(utils.isArray.toString()) + '\\n    };\\n    const Utils = utils;\\n    const canvases = [];\\n    const maxTexSizes = {};\\n    class ' + (name || 'Kernel') + ' {\\n      constructor() {\\n        this.maxTexSize = null;\\n        this.argumentsLength = 0;\\n        this._canvas = null;\\n        this._webGl = null;\\n        this.built = false;\\n        this.program = null;\\n        this.paramNames = ' + JSON.stringify(gpuKernel.paramNames) + ';\\n        this.paramTypes = ' + JSON.stringify(gpuKernel.paramTypes) + ';\\n        this.texSize = ' + JSON.stringify(gpuKernel.texSize) + ';\\n        this.output = ' + JSON.stringify(gpuKernel.output) + ';\\n        this.compiledFragShaderString = `' + gpuKernel.compiledFragShaderString + '`;\\n\\t\\t    this.compiledVertShaderString = `' + gpuKernel.compiledVertShaderString + '`;\\n\\t\\t    this.programUniformLocationCache = {};\\n\\t\\t    this.textureCache = {};\\n\\t\\t    this.subKernelOutputTextures = null;\\n\\t\\t    this.subKernelOutputVariableNames = null;\\n\\t\\t    this.uniform1fCache = {};\\n\\t\\t    this.uniform1iCache = {};\\n\\t\\t    this.uniform2fCache = {};\\n\\t\\t    this.uniform2fvCache = {};\\n\\t\\t    this.uniform3fvCache = {};\\n      }\\n      ' + removeFnNoise(gpuKernel._getFragShaderString.toString()) + '\\n      ' + removeFnNoise(gpuKernel._getVertShaderString.toString()) + '\\n      validateOptions() {}\\n      setupParams() {}\\n      setCanvas(canvas) { this._canvas = canvas; return this; }\\n      setWebGl(webGl) { this._webGl = webGl; return this; }\\n      ' + removeFnNoise(gpuKernel.getUniformLocation.toString()) + '\\n      ' + removeFnNoise(gpuKernel.setupParams.toString()) + '\\n      ' + removeFnNoise(gpuKernel.build.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.run.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel._addArgument.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.getArgumentTexture.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.getTextureCache.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.getOutputTexture.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.renderOutput.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.updateMaxTexSize.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel._setupOutputTexture.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.detachTextureCache.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform1f.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform1i.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform2f.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform2fv.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform3fv.toString()) + ' \\n    };\\n    return kernelRunShortcut(new Kernel());\\n  };';\n};","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar KernelBase = require('../kernel-base');\nvar utils = require('../../core/utils');\nvar Texture = require('../../core/texture');\nvar fragShaderString = require('./shader-frag');\nvar vertShaderString = require('./shader-vert');\nvar kernelString = require('./kernel-string');\nvar canvases = [];\nvar maxTexSizes = {};\n\nmodule.exports = function (_KernelBase) {\n\t_inherits(WebGLKernel, _KernelBase);\n\n\t_createClass(WebGLKernel, null, [{\n\t\tkey: 'fragShaderString',\n\t\tget: function get() {\n\t\t\treturn fragShaderString;\n\t\t}\n\t}, {\n\t\tkey: 'vertShaderString',\n\t\tget: function get() {\n\t\t\treturn vertShaderString;\n\t\t}\n\t\t/**\n   * @constructor WebGLKernel\n   *\n   * @desc Kernel Implementation for WebGL.\n   * <p>This builds the shaders and runs them on the GPU,\n   * the outputs the result back as float(enabled by default) and Texture.</p>\n   *\n   * @extends KernelBase\n   *\n   * @prop {Object} textureCache - webGl Texture cache\n   * @prop {Object} threadDim - The thread dimensions, x, y and z\n   * @prop {Object} programUniformLocationCache - Location of program variables in memory\n   * @prop {Object} framebuffer - Webgl frameBuffer\n   * @prop {Object} buffer - WebGL buffer\n   * @prop {Object} program - The webGl Program\n   * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\n   * @prop {Boolean} outputToTexture - Set output type to Texture, instead of float\n   * @prop {String} endianness - Endian information like Little-endian, Big-endian.\n   * @prop {Array} paramTypes - Types of parameters sent to the Kernel\n   * @prop {number} argumentsLength - Number of parameters sent to the Kernel\n   * @prop {String} compiledFragShaderString - Compiled fragment shader string\n   * @prop {String} compiledVertShaderString - Compiled Vertical shader string\n   */\n\n\t}]);\n\n\tfunction WebGLKernel(fnString, settings) {\n\t\t_classCallCheck(this, WebGLKernel);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGLKernel.__proto__ || Object.getPrototypeOf(WebGLKernel)).call(this, fnString, settings));\n\n\t\t_this.textureCache = {};\n\t\t_this.threadDim = {};\n\t\t_this.programUniformLocationCache = {};\n\t\t_this.framebuffer = null;\n\n\t\t_this.buffer = null;\n\t\t_this.program = null;\n\t\t_this.outputToTexture = settings.outputToTexture;\n\t\t_this.endianness = utils.systemEndianness();\n\t\t_this.subKernelOutputTextures = null;\n\t\t_this.subKernelOutputVariableNames = null;\n\t\t_this.argumentsLength = 0;\n\t\t_this.compiledFragShaderString = null;\n\t\t_this.compiledVertShaderString = null;\n\t\t_this.drawBuffersMap = null;\n\t\t_this.outputTexture = null;\n\t\t_this.maxTexSize = null;\n\t\t_this.uniform1fCache = {};\n\t\t_this.uniform1iCache = {};\n\t\t_this.uniform2fCache = {};\n\t\t_this.uniform2fvCache = {};\n\t\t_this.uniform3fvCache = {};\n\t\tif (!_this._webGl) _this._webGl = _this.initWebGl();\n\t\treturn _this;\n\t}\n\n\t_createClass(WebGLKernel, [{\n\t\tkey: 'initWebGl',\n\t\tvalue: function initWebGl() {\n\t\t\treturn utils.initWebGl(this.getCanvas());\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name validateOptions\n   *\n   * @desc Validate options related to Kernel, such as\n   * floatOutputs and Textures, texSize, output,\n   * graphical output.\n   *\n   */\n\n\t}, {\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tvar isFloatReadPixel = utils.isFloatReadPixelsSupported();\n\t\t\tif (this.floatTextures === true && !utils.OES_texture_float) {\n\t\t\t\tthrow new Error('Float textures are not supported on this browser');\n\t\t\t} else if (this.floatOutput === true && this.floatOutputForce !== true && !isFloatReadPixel) {\n\t\t\t\tthrow new Error('Float texture outputs are not supported on this browser');\n\t\t\t} else if (this.floatTextures === undefined && utils.OES_texture_float) {\n\t\t\t\tthis.floatTextures = true;\n\t\t\t\tthis.floatOutput = isFloatReadPixel;\n\t\t\t}\n\n\t\t\tif (!this.output || this.output.length === 0) {\n\t\t\t\tif (arguments.length !== 1) {\n\t\t\t\t\tthrow new Error('Auto output only supported for kernels with only one input');\n\t\t\t\t}\n\n\t\t\t\tvar argType = utils.getArgumentType(arguments[0]);\n\t\t\t\tif (argType === 'Array') {\n\t\t\t\t\tthis.output = utils.getDimensions(argType);\n\t\t\t\t} else if (argType === 'Texture') {\n\t\t\t\t\tthis.output = arguments[0].output;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Auto output not supported for input type: ' + argType);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\n\t\t\tif (this.graphical) {\n\t\t\t\tif (this.output.length !== 2) {\n\t\t\t\t\tthrow new Error('Output must have 2 dimensions on graphical mode');\n\t\t\t\t}\n\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tthis.floatOutput = false;\n\t\t\t\t\tconsole.warn('Cannot use graphical mode and float output at the same time');\n\t\t\t\t}\n\n\t\t\t\tthis.texSize = utils.clone(this.output);\n\t\t\t} else if (this.floatOutput === undefined && utils.OES_texture_float) {\n\t\t\t\tthis.floatOutput = true;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'updateMaxTexSize',\n\t\tvalue: function updateMaxTexSize() {\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar canvas = this._canvas;\n\t\t\tif (this.maxTexSize === null) {\n\t\t\t\tvar canvasIndex = canvases.indexOf(canvas);\n\t\t\t\tif (canvasIndex === -1) {\n\t\t\t\t\tcanvasIndex = canvases.length;\n\t\t\t\t\tcanvases.push(canvas);\n\t\t\t\t\tmaxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n\t\t\t\t}\n\t\t\t\tthis.maxTexSize = maxTexSizes[canvasIndex];\n\t\t\t}\n\t\t\tif (this.maxTexSize[0] < texSize[0]) {\n\t\t\t\tthis.maxTexSize[0] = texSize[0];\n\t\t\t}\n\t\t\tif (this.maxTexSize[1] < texSize[1]) {\n\t\t\t\tthis.maxTexSize[1] = texSize[1];\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name build\n   *\n   * @desc Builds the Kernel, by compiling Fragment and Vertical Shaders,\n   * and instantiates the program.\n   *\n   */\n\n\t}, {\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\tthis.validateOptions();\n\t\t\tthis.setupParams(arguments);\n\t\t\tthis.updateMaxTexSize();\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\t\t\tvar canvas = this._canvas;\n\t\t\tgl.enable(gl.SCISSOR_TEST);\n\t\t\tgl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n\t\t\tcanvas.width = this.maxTexSize[0];\n\t\t\tcanvas.height = this.maxTexSize[1];\n\t\t\tvar threadDim = this.threadDim = utils.clone(this.output);\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tif (this.functionBuilder) this._addKernels();\n\n\t\t\tvar compiledVertShaderString = this._getVertShaderString(arguments);\n\t\t\tvar vertShader = gl.createShader(gl.VERTEX_SHADER);\n\t\t\tgl.shaderSource(vertShader, compiledVertShaderString);\n\t\t\tgl.compileShader(vertShader);\n\n\t\t\tvar compiledFragShaderString = this._getFragShaderString(arguments);\n\t\t\tvar fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\t\t\tgl.shaderSource(fragShader, compiledFragShaderString);\n\t\t\tgl.compileShader(fragShader);\n\n\t\t\tif (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n\t\t\t\tconsole.log(compiledVertShaderString);\n\t\t\t\tconsole.error('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(vertShader));\n\t\t\t\tthrow new Error('Error compiling vertex shader');\n\t\t\t}\n\t\t\tif (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n\t\t\t\tconsole.log(compiledFragShaderString);\n\t\t\t\tconsole.error('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(fragShader));\n\t\t\t\tthrow new Error('Error compiling fragment shader');\n\t\t\t}\n\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log('Options:');\n\t\t\t\tconsole.dir(this);\n\t\t\t\tconsole.log('GLSL Shader Output:');\n\t\t\t\tconsole.log(compiledFragShaderString);\n\t\t\t}\n\n\t\t\tvar program = this.program = gl.createProgram();\n\t\t\tgl.attachShader(program, vertShader);\n\t\t\tgl.attachShader(program, fragShader);\n\t\t\tgl.linkProgram(program);\n\t\t\tthis.framebuffer = gl.createFramebuffer();\n\t\t\tthis.framebuffer.width = texSize[0];\n\t\t\tthis.framebuffer.height = texSize[1];\n\n\t\t\tvar vertices = new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]);\n\t\t\tvar texCoords = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n\n\t\t\tvar texCoordOffset = vertices.byteLength;\n\n\t\t\tvar buffer = this.buffer;\n\t\t\tif (!buffer) {\n\t\t\t\tbuffer = this.buffer = gl.createBuffer();\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n\t\t\t} else {\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t}\n\n\t\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n\t\t\tgl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n\t\t\tvar aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n\t\t\tgl.enableVertexAttribArray(aPosLoc);\n\t\t\tgl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, gl.FALSE, 0, 0);\n\t\t\tvar aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n\t\t\tgl.enableVertexAttribArray(aTexCoordLoc);\n\t\t\tgl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, gl.FALSE, 0, texCoordOffset);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n\t\t\tif (!this.outputImmutable) {\n\t\t\t\tthis._setupOutputTexture();\n\t\t\t\tif (this.subKernelOutputVariableNames !== null && this.subKernelOutputVariableNames.length > 0) {\n\t\t\t\t\tthis._setupSubOutputTextures(this.subKernelOutputVariableNames.length);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name run\n   *\n   * @desc Run the kernel program, and send the output to renderOutput\n   *\n   * <p> This method calls a helper method *renderOutput* to return the result. </p>\n   *\n   * @returns {Object|Undefined} Result The final output of the program, as float, and as Textures for reuse.\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'run',\n\t\tvalue: function run() {\n\t\t\tif (this.program === null) {\n\t\t\t\tthis.build.apply(this, arguments);\n\t\t\t}\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tgl.useProgram(this.program);\n\t\t\tgl.scissor(0, 0, texSize[0], texSize[1]);\n\n\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\tthis.setUniform3fv('uOutputDim', this.threadDim);\n\t\t\t\tthis.setUniform2fv('uTexSize', texSize);\n\t\t\t}\n\n\t\t\tthis.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n\t\t\tthis.argumentsLength = 0;\n\t\t\tfor (var texIndex = 0; texIndex < paramNames.length; texIndex++) {\n\t\t\t\tthis._addArgument(arguments[texIndex], paramTypes[texIndex], paramNames[texIndex]);\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\t\t\tif (this.outputImmutable) {\n\t\t\t\tthis._setupOutputTexture();\n\t\t\t}\n\t\t\tvar outputTexture = this.outputTexture;\n\n\t\t\tif (this.subKernelOutputVariableNames !== null) {\n\t\t\t\tif (this.outputImmutable) {\n\t\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\t\tthis._setupSubOutputTextures(this.subKernelOutputVariableNames.length);\n\t\t\t\t}\n\t\t\t\tthis.drawBuffers.drawBuffersWEBGL(this.drawBuffersMap);\n\t\t\t}\n\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n\t\t\tif (this.subKernelOutputTextures !== null) {\n\t\t\t\tif (this.subKernels !== null) {\n\t\t\t\t\tvar output = [];\n\t\t\t\t\toutput.result = this.renderOutput(outputTexture);\n\t\t\t\t\tfor (var i = 0; i < this.subKernels.length; i++) {\n\t\t\t\t\t\toutput.push(new Texture(this.subKernelOutputTextures[i], texSize, this.threadDim, this.output, this._webGl));\n\t\t\t\t\t}\n\t\t\t\t\treturn output;\n\t\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\t\tvar _output = {\n\t\t\t\t\t\tresult: this.renderOutput(outputTexture)\n\t\t\t\t\t};\n\t\t\t\t\tvar _i = 0;\n\t\t\t\t\tfor (var p in this.subKernelProperties) {\n\t\t\t\t\t\tif (!this.subKernelProperties.hasOwnProperty(p)) continue;\n\t\t\t\t\t\t_output[p] = new Texture(this.subKernelOutputTextures[_i], texSize, this.threadDim, this.output, this._webGl);\n\t\t\t\t\t\t_i++;\n\t\t\t\t\t}\n\t\t\t\t\treturn _output;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.renderOutput(outputTexture);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name renderOutput\n   *\n   *\n   * @desc Helper function to return webGl function's output.\n   * Since the program runs on GPU, we need to get the\n   * output of the program back to CPU and then return them.\n   *\n   * *Note*: This should not be called directly.\n   *\n   * @param {Object} outputTexture - Output Texture returned by webGl program\n   *\n   * @returns {Object|Array} result\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'renderOutput',\n\t\tvalue: function renderOutput(outputTexture) {\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\t\t\tvar threadDim = this.threadDim;\n\t\t\tvar output = this.output;\n\t\t\tif (this.outputToTexture) {\n\t\t\t\treturn new Texture(outputTexture, texSize, this.threadDim, output, this._webGl);\n\t\t\t} else {\n\t\t\t\tvar result = void 0;\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tresult = new Float32Array(texSize[0] * texSize[1] * 4);\n\t\t\t\t\tgl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.FLOAT, result);\n\t\t\t\t} else {\n\t\t\t\t\tvar bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n\t\t\t\t\tgl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, bytes);\n\t\t\t\t\tresult = new Float32Array(bytes.buffer);\n\t\t\t\t}\n\n\t\t\t\tresult = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n\t\t\t\tif (output.length === 1) {\n\t\t\t\t\treturn result;\n\t\t\t\t} else if (output.length === 2) {\n\t\t\t\t\treturn utils.splitArray(result, output[0]);\n\t\t\t\t} else if (output.length === 3) {\n\t\t\t\t\tvar cube = utils.splitArray(result, output[0] * output[1]);\n\t\t\t\t\treturn cube.map(function (x) {\n\t\t\t\t\t\treturn utils.splitArray(x, output[0]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name getOutputTexture\n   *\n   * @desc This return defined outputTexture, which is setup in .build(), or if immutable, is defined in .run()\n   *\n   * @returns {Object} Output Texture Cache\n   *\n   */\n\n\t}, {\n\t\tkey: 'getOutputTexture',\n\t\tvalue: function getOutputTexture() {\n\t\t\treturn this.outputTexture;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _setupOutputTexture\n   * @private\n   *\n   * @desc Setup and replace output texture\n   */\n\n\t}, {\n\t\tkey: '_setupOutputTexture',\n\t\tvalue: function _setupOutputTexture() {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar texture = this.outputTexture = this._webGl.createTexture();\n\t\t\tgl.activeTexture(gl.TEXTURE0 + this.paramNames.length);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tif (this.floatOutput) {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t} else {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t}\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @param length\n   * @private\n   *\n   * @desc Setup and replace sub-output textures\n   */\n\n\t}, {\n\t\tkey: '_setupSubOutputTextures',\n\t\tvalue: function _setupSubOutputTextures(length) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar drawBuffersMap = this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n\t\t\tvar textures = this.subKernelOutputTextures = [];\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar texture = this._webGl.createTexture();\n\t\t\t\ttextures.push(texture);\n\t\t\t\tdrawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.paramNames.length + i);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t\t} else {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t\t}\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name getArgumentTexture\n   *\n   * @desc This uses *getTextureCache** to get the Texture Cache of the argument supplied\n   *\n   * @param {String} name - Name of the argument\n   *\n   * \tTexture cache for the supplied argument\n   *\n   */\n\n\t}, {\n\t\tkey: 'getArgumentTexture',\n\t\tvalue: function getArgumentTexture(name) {\n\t\t\treturn this.getTextureCache('ARGUMENT_' + name);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @name getTextureCache\n   * @function\n   *\n   * @desc Returns the Texture Cache of the supplied parameter (can be kernel, sub-kernel or argument)\n   *\n   * @param {String} name - Name of the subkernel, argument, or kernel.\n   *\n   * @returns {Object} Texture cache\n   *\n   */\n\n\t}, {\n\t\tkey: 'getTextureCache',\n\t\tvalue: function getTextureCache(name) {\n\t\t\tif (this.textureCache.hasOwnProperty(name)) {\n\t\t\t\treturn this.textureCache[name];\n\t\t\t}\n\t\t\treturn this.textureCache[name] = this._webGl.createTexture();\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @name detachTextureCache\n   * @function\n   * @desc removes a texture from the kernel's cache\n   * @param {String} name - Name of texture\n   */\n\n\t}, {\n\t\tkey: 'detachTextureCache',\n\t\tvalue: function detachTextureCache(name) {\n\t\t\tdelete this.textureCache[name];\n\t\t}\n\t}, {\n\t\tkey: 'setUniform1f',\n\t\tvalue: function setUniform1f(name, value) {\n\t\t\tif (this.uniform1fCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform1fCache[name];\n\t\t\t\tif (value === cache) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform1fCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform1f(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform1i',\n\t\tvalue: function setUniform1i(name, value) {\n\t\t\tif (this.uniform1iCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform1iCache[name];\n\t\t\t\tif (value === cache) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform1iCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform1i(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform2f',\n\t\tvalue: function setUniform2f(name, value1, value2) {\n\t\t\tif (this.uniform2fCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform2fCache[name];\n\t\t\t\tif (value1 === cache[0] && value2 === cache[1]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform2fCache[name] = [value1, value2];\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform2f(loc, value1, value2);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform2fv',\n\t\tvalue: function setUniform2fv(name, value) {\n\t\t\tif (this.uniform2fvCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform2fvCache[name];\n\t\t\t\tif (value[0] === cache[0] && value[1] === cache[1]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform2fvCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform2fv(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform3fv',\n\t\tvalue: function setUniform3fv(name, value) {\n\t\t\tif (this.uniform3fvCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform3fvCache[name];\n\t\t\t\tif (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform3fvCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform3fv(loc, value);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name getUniformLocation\n   *\n   * @desc Return WebGlUniformLocation for various variables\n   * related to webGl program, such as user-defiend variables,\n   * as well as, dimension sizes, etc.\n   *\n   */\n\n\t}, {\n\t\tkey: 'getUniformLocation',\n\t\tvalue: function getUniformLocation(name) {\n\t\t\tif (this.programUniformLocationCache.hasOwnProperty(name)) {\n\t\t\t\treturn this.programUniformLocationCache[name];\n\t\t\t}\n\t\t\treturn this.programUniformLocationCache[name] = this._webGl.getUniformLocation(this.program, name);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getFragShaderArtifactMap\n   *\n   * @desc Generate Shader artifacts for the kernel program.\n   * The final object contains HEADER, KERNEL, MAIN_RESULT, and others.\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {Object} An object containing the Shader Artifacts(CONSTANTS, HEADER, KERNEL, etc.)\n   *\n   */\n\n\t}, {\n\t\tkey: '_getFragShaderArtifactMap',\n\t\tvalue: function _getFragShaderArtifactMap(args) {\n\t\t\treturn {\n\t\t\t\tHEADER: this._getHeaderString(),\n\t\t\t\tLOOP_MAX: this._getLoopMaxString(),\n\t\t\t\tCONSTANTS: this._getConstantsString(),\n\t\t\t\tDECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n\t\t\t\tENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n\t\t\t\tGET_WRAPAROUND: this._getGetWraparoundString(),\n\t\t\t\tGET_TEXTURE_CHANNEL: this._getGetTextureChannelString(),\n\t\t\t\tGET_TEXTURE_INDEX: this._getGetTextureIndexString(),\n\t\t\t\tGET_RESULT: this._getGetResultString(),\n\t\t\t\tMAIN_PARAMS: this._getMainParamsString(args),\n\t\t\t\tMAIN_CONSTANTS: this._getMainConstantsString(),\n\t\t\t\tKERNEL: this._getKernelString(),\n\t\t\t\tMAIN_RESULT: this._getMainResultString()\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _addArgument\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array|Texture|Number} value - The actual argument supplied to the kernel\n   * @param {String} type - Type of the argument\n   * @param {String} name - Name of the argument\n   *\n   */\n\n\t}, {\n\t\tkey: '_addArgument',\n\t\tvalue: function _addArgument(value, type, name) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar argumentTexture = this.getArgumentTexture(name);\n\t\t\tif (value instanceof Texture) {\n\t\t\t\ttype = 'Texture';\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Array':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar dim = utils.getDimensions(value, true);\n\t\t\t\t\t\tvar size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar length = size[0] * size[1];\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tlength *= 4;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar valuesFlat = new Float32Array(length);\n\t\t\t\t\t\tutils.flattenTo(value, valuesFlat);\n\n\t\t\t\t\t\tvar buffer = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0], size[1], 0, gl.RGBA, gl.FLOAT, valuesFlat);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0], size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3fv('user_' + name + 'Dim', dim);\n\t\t\t\t\t\t\tthis.setUniform2fv('user_' + name + 'Size', size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Integer':\n\t\t\t\tcase 'Float':\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setUniform1f('user_' + name, value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Input':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar input = value;\n\t\t\t\t\t\tvar _dim = input.size;\n\t\t\t\t\t\tvar _size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, _dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar _length = _size[0] * _size[1];\n\t\t\t\t\t\tvar inputArray = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\t_length *= 4;\n\t\t\t\t\t\t\tinputArray = new Float32Array(_length);\n\t\t\t\t\t\t\tinputArray.set(input.value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinputArray = input.value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size[0], _size[1], 0, gl.RGBA, gl.FLOAT, inputArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _buffer = new Uint8Array(inputArray.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size[0], _size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3fv('user_' + name + 'Dim', _dim);\n\t\t\t\t\t\t\tthis.setUniform2fv('user_' + name + 'Size', _size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImage = value;\n\t\t\t\t\t\tvar _dim2 = [inputImage.width, inputImage.height, 1];\n\t\t\t\t\t\tvar _size2 = [inputImage.width, inputImage.height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the image into the texture.\n\t\t\t\t\t\tvar mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, inputImage);\n\t\t\t\t\t\tthis.setUniform3fv('user_' + name + 'Dim', _dim2);\n\t\t\t\t\t\tthis.setUniform2fv('user_' + name + 'Size', _size2);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Texture':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputTexture = value;\n\t\t\t\t\t\tvar _dim3 = inputTexture.dimensions;\n\t\t\t\t\t\tvar _size3 = inputTexture.size;\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t\t\t\t\t\tthis.setUniform3fv('user_' + name + 'Dim', _dim3);\n\t\t\t\t\t\tthis.setUniform2fv('user_' + name + 'Size', _size3);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Input type not supported (WebGL): ' + value);\n\t\t\t}\n\t\t\tthis.argumentsLength++;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getHeaderString\n   *\n   * @desc Get the header string for the program.\n   * This returns an empty string if no sub-kernels are defined.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getHeaderString',\n\t\tvalue: function _getHeaderString() {\n\t\t\treturn this.subKernels !== null || this.subKernelProperties !== null ?\n\t\t\t//webgl2 '#version 300 es\\n' :\n\t\t\t'#extension GL_EXT_draw_buffers : require\\n' : '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getLoopMaxString\n   *\n   * @desc Get the maximum loop size String.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getLoopMaxString',\n\t\tvalue: function _getLoopMaxString() {\n\t\t\treturn this.loopMaxIterations ? ' ' + parseInt(this.loopMaxIterations) + '.0;\\n' : ' 1000.0;\\n';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getConstantsString\n   *\n   * @desc Generate transpiled glsl Strings for constant parameters sent to a kernel\n   *\n   * They can be defined by *hardcodeConstants*\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getConstantsString',\n\t\tvalue: function _getConstantsString() {\n\t\t\tvar result = [];\n\t\t\tvar threadDim = this.threadDim;\n\t\t\tvar texSize = this.texSize;\n\t\t\tif (this.hardcodeConstants) {\n\t\t\t\tresult.push('highp vec3 uOutputDim = vec3(' + threadDim[0] + ',' + threadDim[1] + ', ' + threadDim[2] + ')', 'highp vec2 uTexSize = vec2(' + texSize[0] + ', ' + texSize[1] + ')');\n\t\t\t} else {\n\t\t\t\tresult.push('uniform highp vec3 uOutputDim', 'uniform highp vec2 uTexSize');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getTextureCoordinate\n   *\n   * @desc Get texture coordinate string for the program\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getTextureCoordinate',\n\t\tvalue: function _getTextureCoordinate() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names === null || names.length < 1) {\n\t\t\t\treturn 'varying highp vec2 vTexCoord;\\n';\n\t\t\t} else {\n\t\t\t\treturn 'out highp vec2 vTexCoord;\\n';\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getDecode32EndiannessString\n   *\n   * @desc Get Decode32 endianness string for little-endian and big-endian\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getDecode32EndiannessString',\n\t\tvalue: function _getDecode32EndiannessString() {\n\t\t\treturn this.endianness === 'LE' ? '' : '  rgba.rgba = rgba.abgr;\\n';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getEncode32EndiannessString\n   *\n   * @desc Get Encode32 endianness string for little-endian and big-endian\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getEncode32EndiannessString',\n\t\tvalue: function _getEncode32EndiannessString() {\n\t\t\treturn this.endianness === 'LE' ? '' : '  rgba.rgba = rgba.abgr;\\n';\n\t\t}\n\n\t\t/**\n   * @function\n   * @memberOf WebGLKernel#\n   * @name _getGetWraparoundString\n   *\n   * @returns {String} wraparound string\n   */\n\n\t}, {\n\t\tkey: '_getGetWraparoundString',\n\t\tvalue: function _getGetWraparoundString() {\n\t\t\treturn this.wraparound ? '  xyz = mod(xyz, texDim);\\n' : '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getGetTextureChannelString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetTextureChannelString',\n\t\tvalue: function _getGetTextureChannelString() {\n\t\t\tif (!this.floatTextures) return '';\n\n\t\t\treturn this._linesToString(['  int channel = int(integerMod(index, 4.0))', '  index = float(int(index) / 4)']);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getGetTextureIndexString\n   *\n   * @desc Get generic texture index string, if floatTextures flag is true.\n   *\n   * @example\n   * '  index = float(int(index)/4);\\n'\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetTextureIndexString',\n\t\tvalue: function _getGetTextureIndexString() {\n\t\t\treturn this.floatTextures ? '  index = float(int(index)/4);\\n' : '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getGetResultString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetResultString',\n\t\tvalue: function _getGetResultString() {\n\t\t\tif (!this.floatTextures) return '  return decode32(texel);\\n';\n\t\t\treturn this._linesToString(['  if (channel == 0) return texel.r', '  if (channel == 1) return texel.g', '  if (channel == 2) return texel.b', '  if (channel == 3) return texel.a']);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainParamsString\n   *\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainParamsString',\n\t\tvalue: function _getMainParamsString(args) {\n\t\t\tvar result = [];\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tfor (var i = 0; i < paramNames.length; i++) {\n\t\t\t\tvar param = args[i];\n\t\t\t\tvar paramName = paramNames[i];\n\t\t\t\tvar paramType = paramTypes[i];\n\t\t\t\tif (this.hardcodeConstants) {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'Texture') {\n\t\t\t\t\t\tvar paramDim = utils.getDimensions(param, true);\n\t\t\t\t\t\tvar paramSize = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, paramDim);\n\n\t\t\t\t\t\tresult.push('uniform highp sampler2D user_' + paramName, 'highp vec2 user_' + paramName + 'Size = vec2(' + paramSize[0] + '.0, ' + paramSize[1] + '.0)', 'highp vec3 user_' + paramName + 'Dim = vec3(' + paramDim[0] + '.0, ' + paramDim[1] + '.0, ' + paramDim[2] + '.0)');\n\t\t\t\t\t} else if (paramType === 'Integer') {\n\t\t\t\t\t\tresult.push('highp float user_' + paramName + ' = ' + param + '.0');\n\t\t\t\t\t} else if (paramType === 'Float') {\n\t\t\t\t\t\tresult.push('highp float user_' + paramName + ' = ' + param);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'Texture' || paramType === 'Input' || paramType === 'HTMLImage') {\n\t\t\t\t\t\tresult.push('uniform highp sampler2D user_' + paramName, 'uniform highp vec2 user_' + paramName + 'Size', 'uniform highp vec3 user_' + paramName + 'Dim');\n\t\t\t\t\t} else if (paramType === 'Integer' || paramType === 'Float') {\n\t\t\t\t\t\tresult.push('uniform highp float user_' + paramName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Param type ' + paramType + ' not supported in WebGL, only WebGL2');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainConstantsString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainConstantsString',\n\t\tvalue: function _getMainConstantsString() {\n\t\t\tvar result = [];\n\t\t\tif (this.constants) {\n\t\t\t\tfor (var name in this.constants) {\n\t\t\t\t\tif (!this.constants.hasOwnProperty(name)) continue;\n\t\t\t\t\tvar value = this.constants[name];\n\t\t\t\t\tvar type = utils.getArgumentType(value);\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase 'Integer':\n\t\t\t\t\t\t\tresult.push('const float constants_' + name + ' = ' + parseInt(value) + '.0');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Float':\n\t\t\t\t\t\t\tresult.push('const float constants_' + name + ' = ' + parseFloat(value));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Unsupported constant ' + name + ' type ' + type);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getKernelString\n   *\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getKernelString',\n\t\tvalue: function _getKernelString() {\n\t\t\tvar result = [];\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names !== null) {\n\t\t\t\tresult.push('highp float kernelResult = 0.0');\n\t\t\t\tfor (var i = 0; i < names.length; i++) {\n\t\t\t\t\tresult.push('highp float ' + names[i] + ' = 0.0');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('highp float kernelResult = 0.0');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result) + this.functionBuilder.getPrototypeString('kernel');\n\t\t}\n\n\t\t/**\n   *\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainResultString\n   *\n   * @desc Get main result string with checks for floatOutput, graphical, subKernelsOutputs, etc.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainResultString',\n\t\tvalue: function _getMainResultString() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tvar result = [];\n\n\t\t\tif (this.floatOutput) {\n\t\t\t\tresult.push('  index *= 4.0');\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragColor = actualColor');\n\t\t\t} else if (this.floatOutput) {\n\t\t\t\tvar channels = ['r', 'g', 'b', 'a'];\n\n\t\t\t\tfor (var i = 0; i < channels.length; ++i) {\n\t\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\t\tresult.push('  kernel()');\n\n\t\t\t\t\tif (names) {\n\t\t\t\t\t\tresult.push('  gl_FragData[0].' + channels[i] + ' = kernelResult');\n\n\t\t\t\t\t\tfor (var j = 0; j < names.length; ++j) {\n\t\t\t\t\t\t\tresult.push('  gl_FragData[' + (j + 1) + '].' + channels[i] + ' = ' + names[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push('  gl_FragColor.' + channels[i] + ' = kernelResult');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < channels.length - 1) {\n\t\t\t\t\t\tresult.push('  index += 1.0');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (names !== null) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\tresult.push('  kernel()');\n\t\t\t\tresult.push('  gl_FragData[0] = encode32(kernelResult)');\n\t\t\t\tfor (var _i2 = 0; _i2 < names.length; _i2++) {\n\t\t\t\t\tresult.push('  gl_FragData[' + (_i2 + 1) + '] = encode32(' + names[_i2] + ')');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragColor = encode32(kernelResult)');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _linesToString\n   *\n   * @param {Array} lines - An Array of strings\n   *\n   * @returns {String} Single combined String, seperated by *\\n*\n   *\n   */\n\n\t}, {\n\t\tkey: '_linesToString',\n\t\tvalue: function _linesToString(lines) {\n\t\t\tif (lines.length > 0) {\n\t\t\t\treturn lines.join(';\\n') + ';\\n';\n\t\t\t} else {\n\t\t\t\treturn '\\n';\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _replaceArtifacts\n   *\n   * @param {String} src - Shader string\n   * @param {Array} map - Variables/Constants associated with shader\n   *\n   */\n\n\t}, {\n\t\tkey: '_replaceArtifacts',\n\t\tvalue: function _replaceArtifacts(src, map) {\n\t\t\treturn src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z])*)__;\\n/g, function (match, artifact) {\n\t\t\t\tif (map.hasOwnProperty(artifact)) {\n\t\t\t\t\treturn map[artifact];\n\t\t\t\t}\n\t\t\t\tthrow 'unhandled artifact ' + artifact;\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _addKernels\n   *\n   * @desc Adds all the sub-kernels supplied with this Kernel instance.\n   *\n   */\n\n\t}, {\n\t\tkey: '_addKernels',\n\t\tvalue: function _addKernels() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar builder = this.functionBuilder;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tbuilder.addFunctions(this.functions, {\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output\n\t\t\t});\n\t\t\tbuilder.addNativeFunctions(this.nativeFunctions);\n\n\t\t\tbuilder.addKernel(this.fnString, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations\n\t\t\t}, this.paramNames, this.paramTypes);\n\n\t\t\tif (this.subKernels !== null) {\n\t\t\t\tvar drawBuffers = this.drawBuffers = gl.getExtension('WEBGL_draw_buffers');\n\t\t\t\tif (!drawBuffers) throw new Error('could not instantiate draw buffers extension');\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tthis.subKernels.forEach(function (subKernel) {\n\t\t\t\t\treturn _this2._addSubKernel(subKernel);\n\t\t\t\t});\n\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\tvar _drawBuffers = this.drawBuffers = gl.getExtension('WEBGL_draw_buffers');\n\t\t\t\tif (!_drawBuffers) throw new Error('could not instantiate draw buffers extension');\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tObject.keys(this.subKernelProperties).forEach(function (property) {\n\t\t\t\t\treturn _this2._addSubKernel(_this2.subKernelProperties[property]);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: '_addSubKernel',\n\t\tvalue: function _addSubKernel(subKernel) {\n\t\t\tthis.functionBuilder.addSubKernel(subKernel, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations\n\t\t\t});\n\t\t\tthis.subKernelOutputVariableNames.push(subKernel.name + 'Result');\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getFragShaderString\n   *\n   * @desc Get the fragment shader String.\n   * If the String hasn't been compiled yet,\n   * then this method compiles it as well\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Fragment Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getFragShaderString',\n\t\tvalue: function _getFragShaderString(args) {\n\t\t\tif (this.compiledFragShaderString !== null) {\n\t\t\t\treturn this.compiledFragShaderString;\n\t\t\t}\n\t\t\treturn this.compiledFragShaderString = this._replaceArtifacts(this.constructor.fragShaderString, this._getFragShaderArtifactMap(args));\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getVertShaderString\n   *\n   * @desc Get the vertical shader String\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Vertical Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getVertShaderString',\n\t\tvalue: function _getVertShaderString(args) {\n\t\t\tif (this.compiledVertShaderString !== null) {\n\t\t\t\treturn this.compiledVertShaderString;\n\t\t\t}\n\t\t\treturn this.compiledVertShaderString = this.constructor.vertShaderString;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name toString\n   *\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   *\n   */\n\n\t}, {\n\t\tkey: 'toString',\n\t\tvalue: function toString() {\n\t\t\treturn kernelString(this);\n\t\t}\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(fn) {\n\t\t\tthis.functionBuilder.addFunction(null, fn);\n\t\t}\n\t}]);\n\n\treturn WebGLKernel;\n}(KernelBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor FunctionBuilderBase\n  *\n  * @desc This handles all the raw state, converted state, etc. of a single function.\n  * [INTERNAL] A collection of functionNodes.\n  * \n  * @prop {Object} nodeMap - Object map, where nodeMap[function] = new FunctionNode;\n  * @prop {Object} gpu - The current gpu instance bound to this builder\n  * @prop {Object} rootKernel - The root kernel object, contains the paramNames, dimensions etc.\n  * \n  */\n\tfunction FunctionBuilderBase(gpu) {\n\t\t_classCallCheck(this, FunctionBuilderBase);\n\n\t\tthis.nodeMap = {};\n\t\tthis.nativeFunctions = {};\n\t\tthis.gpu = gpu;\n\t\tthis.rootKernel = null;\n\t\tthis.Node = null;\n\t}\n\n\t_createClass(FunctionBuilderBase, [{\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(functionName, glslFunctionString) {\n\t\t\tthis.nativeFunctions[functionName] = glslFunctionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addFunction\n   *\n   * @desc Instantiates a FunctionNode, and add it to the nodeMap\n   *\n   * @param {String} functionName - Function name to assume, if its null, it attempts to extract from the function\n   * @param {Function} jsFunction - JS Function to do conversion\n   * @param {Object} [options]\n   * @param {String[]|Object} [paramTypes] - Parameter type array, assumes all parameters are 'float' if falsey\n   * @param {String} [returnType] - The return type, assumes 'float' if falsey\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(functionName, jsFunction, options, paramTypes, returnType) {\n\t\t\tthis.addFunctionNode(new this.Node(functionName, jsFunction, options, paramTypes, returnType).setAddFunction(this.addFunction.bind(this)));\n\t\t}\n\t}, {\n\t\tkey: 'addFunctions',\n\t\tvalue: function addFunctions(functions, options) {\n\t\t\tif (functions) {\n\t\t\t\tif (Array.isArray(functions)) {\n\t\t\t\t\tfor (var i = 0; i < functions.length; i++) {\n\t\t\t\t\t\tthis.addFunction(null, functions[i], options);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var p in functions) {\n\t\t\t\t\t\tthis.addFunction(p, functions[p], options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'addNativeFunctions',\n\t\tvalue: function addNativeFunctions(nativeFunctions) {\n\t\t\tfor (var functionName in nativeFunctions) {\n\t\t\t\tif (!nativeFunctions.hasOwnProperty(functionName)) continue;\n\t\t\t\tthis.addNativeFunction(functionName, nativeFunctions[functionName]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addFunctionNode\n   *\n   * @desc Add the function node directly\n   *\n   * @param {functionNode} inNode - functionNode to add\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunctionNode',\n\t\tvalue: function addFunctionNode(inNode) {\n\t\t\tthis.nodeMap[inNode.functionName] = inNode;\n\t\t\tif (inNode.isRootKernel) {\n\t\t\t\tthis.rootKernel = inNode;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name traceFunctionCalls\n   *\n   * @desc Trace all the depending functions being called, from a single function\n   *\n   * This allow for 'unneeded' functions to be automatically optimized out.\n   * Note that the 0-index, is the starting function trace.\n   *\n   * @param {String} functionName - Function name to trace from, default to 'kernel'\n   * @param {String[]} retList - Returning list of function names that is traced. Including itself.\n   * @param {Object} [parent] - Parent node\n   *\n   * @returns {String[]}  Returning list of function names that is traced. Including itself.\n   */\n\n\t}, {\n\t\tkey: 'traceFunctionCalls',\n\t\tvalue: function traceFunctionCalls(functionName, retList, parent) {\n\t\t\tfunctionName = functionName || 'kernel';\n\t\t\tretList = retList || [];\n\n\t\t\tvar fNode = this.nodeMap[functionName];\n\t\t\tif (fNode) {\n\t\t\t\t// Check if function already exists\n\t\t\t\tvar functionIndex = retList.indexOf(functionName);\n\t\t\t\tif (functionIndex === -1) {\n\t\t\t\t\tretList.push(functionName);\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tfNode.parent = parent;\n\t\t\t\t\t}\n\t\t\t\t\tfNode.getFunctionString(); //ensure JS trace is done\n\t\t\t\t\tfor (var i = 0; i < fNode.calledFunctions.length; ++i) {\n\t\t\t\t\t\tthis.traceFunctionCalls(fNode.calledFunctions[i], retList, fNode);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/**\n      * https://github.com/gpujs/gpu.js/issues/207\n      * if dependent function is already in the list, because a function depends on it, and because it has\n      * already been traced, we know that we must move the dependent function to the end of the the retList.\n      * */\n\t\t\t\t\tvar dependantFunctionName = retList.splice(functionIndex, 1)[0];\n\t\t\t\t\tretList.push(dependantFunctionName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.nativeFunctions[functionName]) {\n\t\t\t\tif (retList.indexOf(functionName) >= 0) {\n\t\t\t\t\t// Does nothing if already traced\n\t\t\t\t} else {\n\t\t\t\t\tretList.push(functionName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retList;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addKernel\n   *\n   * @desc Add a new kernel to this instance\n   *\n   * @param {String} fnString - Kernel function as a String\n   * @param {Object} options - Settings object to set constants, debug mode, etc.\n   * @param {Array} paramNames - Parameters of the kernel\n   * @param {Array} paramTypes - Types of the parameters\n   *\n   *\n   * @returns {Object} The inserted kernel as a Kernel Node\n   *\n   */\n\n\t}, {\n\t\tkey: 'addKernel',\n\t\tvalue: function addKernel(fnString, options, paramNames, paramTypes) {\n\t\t\tvar kernelNode = new this.Node('kernel', fnString, options, paramTypes);\n\t\t\tkernelNode.setAddFunction(this.addFunction.bind(this));\n\t\t\tkernelNode.paramNames = paramNames;\n\t\t\tkernelNode.paramTypes = paramTypes;\n\t\t\tkernelNode.isRootKernel = true;\n\t\t\tthis.addFunctionNode(kernelNode);\n\t\t\treturn kernelNode;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addSubKernel\n   *\n   * @desc Add a new sub-kernel to the current kernel instance\n   *\n   * @param {Function} jsFunction - Sub-kernel function (JavaScript)\n   * @param {Object} options - Settings object to set constants, debug mode, etc.\n   * @param {Array} paramNames - Parameters of the sub-kernel\n   * @param {Array} returnType - Return type of the subKernel\n   *\n   * @returns {Object} The inserted sub-kernel as a Kernel Node\n   *\n   */\n\n\t}, {\n\t\tkey: 'addSubKernel',\n\t\tvalue: function addSubKernel(jsFunction, options, paramTypes, returnType) {\n\t\t\tvar kernelNode = new this.Node(null, jsFunction, options, paramTypes, returnType);\n\t\t\tkernelNode.setAddFunction(this.addFunction.bind(this));\n\t\t\tkernelNode.isSubKernel = true;\n\t\t\tthis.addFunctionNode(kernelNode);\n\t\t\treturn kernelNode;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionBuilder#\n   * @name getPrototypeString\n   * @function\n   *\n   * @desc Return the string for a function\n   *\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {String} The full string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypeString',\n\t\tvalue: function getPrototypeString(functionName) {\n\t\t\treturn this.getPrototypes(functionName).join('\\n');\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionBuilder#\n   * @name getPrototypeString\n   * @function\n   *\n   * @desc Return the string for a function\n   *\n   * @param {String} [functionName] - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {Array} The full string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypes',\n\t\tvalue: function getPrototypes(functionName) {\n\t\t\tthis.rootKernel.generate();\n\t\t\tif (functionName) {\n\t\t\t\treturn this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n\t\t\t}\n\t\t\treturn this.getPrototypesFromFunctionNames(Object.keys(this.nodeMap));\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getStringFromFunctionNames\n   *\n   * @desc Get string from function names\n   *\n   * @param {String[]} functionList - List of function to build string\n   *\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getStringFromFunctionNames',\n\t\tvalue: function getStringFromFunctionNames(functionList) {\n\t\t\tvar ret = [];\n\t\t\tfor (var i = 0; i < functionList.length; ++i) {\n\t\t\t\tvar node = this.nodeMap[functionList[i]];\n\t\t\t\tif (node) {\n\t\t\t\t\tret.push(this.nodeMap[functionList[i]].getFunctionString());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret.join('\\n');\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getPrototypeStringFromFunctionNames\n   *\n   * @desc Return string of all functions converted\n   *\n   * @param {String[]} functionList - List of function names to build the string.\n   * @param {Object} [opt - Settings object passed to functionNode. See functionNode for more details.\n   *\n   * @returns {Array} Prototypes of all functions converted\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypesFromFunctionNames',\n\t\tvalue: function getPrototypesFromFunctionNames(functionList, opt) {\n\t\t\tvar ret = [];\n\t\t\tfor (var i = 0; i < functionList.length; ++i) {\n\t\t\t\tvar functionName = functionList[i];\n\t\t\t\tvar node = this.nodeMap[functionName];\n\t\t\t\tif (node) {\n\t\t\t\t\tret.push(node.getFunctionPrototypeString(opt));\n\t\t\t\t} else if (this.nativeFunctions[functionName]) {\n\t\t\t\t\tret.push(this.nativeFunctions[functionName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getPrototypeStringFromFunctionNames\n   *\n   * @desc Return string of all functions converted\n   *\n   * @param {String[]} functionList - List of function names to build the string.\n   * @param {Object} opt - Settings object passed to functionNode. See functionNode for more details.\n   *\n   * @returns {String} Prototype string of all functions converted\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypeStringFromFunctionNames',\n\t\tvalue: function getPrototypeStringFromFunctionNames(functionList, opt) {\n\t\t\treturn this.getPrototypesFromFunctionNames(functionList, opt).toString();\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getString\n   *\n   * Get string for a particular function name\n   *\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getString',\n\t\tvalue: function getString(functionName, opt) {\n\t\t\tif (opt === undefined) {\n\t\t\t\topt = {};\n\t\t\t}\n\n\t\t\tif (functionName) {\n\t\t\t\treturn this.getStringFromFunctionNames(this.traceFunctionCalls(functionName, [], opt).reverse(), opt);\n\t\t\t}\n\t\t\treturn this.getStringFromFunctionNames(Object.keys(this.nodeMap), opt);\n\t\t}\n\t}]);\n\n\treturn FunctionBuilderBase;\n}();","// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,190,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,26,230,43,117,63,32,0,257,0,11,39,8,0,22,0,12,39,3,3,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,68,12,0,67,12,65,1,31,6129,15,754,9486,286,82,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,280,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features. The default is 7.\n  ecmaVersion: 7,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Registered plugins\nvar plugins = {};\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = keywordRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = keywordRegexp(reservedStrict);\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Load plugins\n  this.loadPlugins(options.plugins);\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Flags to track whether we are in a function, a generator, an async function.\n  this.inFunction = this.inGenerator = this.inAsync = false;\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = 0;\n  // Labels in scope.\n  this.labels = [];\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterFunctionScope();\n\n  // For RegExp validation\n  this.regexpState = null;\n};\n\n// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\nParser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };\nParser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };\n\nParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name]);\n};\n\nParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name];\n    if (!plugin) { throw new Error(\"Plugin '\" + name + \"' not found\") }\n    plugin(this$1, pluginConfigs[name]);\n  }\n};\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\"|;)/;\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") { return true }\n    start += match[0].length;\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(true, true, exports);\n    node.body.push(stmt);\n  }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function() {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  if (nextCh === 91 || nextCh === 123) { return true } // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(declaration, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet()) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    if (!declaration && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false)\n  case types._class:\n    if (!declaration) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (!declaration && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock()\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (!declaration) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && this.inAsync && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterLexicalScope();\n  this.expect(types.parenL);\n  if (this.type === types.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init)) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync) {\n  this.next();\n  return this.parseFunction(node, true, false, isAsync)\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(!this.strict && this.type === types._function);\n  node.alternate = this.eat(types._else) ? this.parseStatement(!this.strict && this.type === types._function) : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterLexicalScope();\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n      if (cur) { this$1.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) { this$1.unexpected(); }\n      cur.consequent.push(this$1.parseStatement(true));\n    }\n  }\n  this.exitLexicalScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      this.enterLexicalScope();\n      this.checkLVal(clause.param, \"let\");\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterLexicalScope();\n    }\n    clause.body = this.parseBlock(false);\n    this.exitLexicalScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(true);\n  if (node.body.type === \"ClassDeclaration\" ||\n      node.body.type === \"VariableDeclaration\" && node.body.kind !== \"var\" ||\n      node.body.type === \"FunctionDeclaration\" && (this.strict || node.body.generator))\n    { this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\"); }\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n\n  var node = this.startNode();\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) {\n    this.enterLexicalScope();\n  }\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(true);\n    node.body.push(stmt);\n  }\n  if (createNewLexicalScope) {\n    this.exitLexicalScope();\n  }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  if (type === \"ForInStatement\") {\n    if (init.type === \"AssignmentPattern\" ||\n      (init.type === \"VariableDeclaration\" && init.declarations[0].init != null &&\n       (this.strict || init.declarations[0].id.type !== \"Identifier\")))\n      { this.raise(init.start, \"Invalid assignment in for-in loop head\"); }\n  }\n  node.left = init;\n  node.right = type === \"ForInStatement\" ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type)\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n    if (!this$1.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom(kind);\n  this.checkLVal(decl.id, kind, false);\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync)\n    { node.generator = this.eat(types.star); }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (isStatement) {\n    node.id = isStatement === \"nullableID\" && this.type !== types.name ? null : this.parseIdent();\n    if (node.id) {\n      this.checkLVal(node.id, \"var\");\n    }\n  }\n\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  if (!isStatement)\n    { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next();\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    var member = this$1.parseClassMember(classBody);\n    if (member && member.type === \"MethodDefinition\" && member.kind === \"constructor\") {\n      if (hadConstructor) { this$1.raise(member.start, \"Duplicate constructor in the same class\"); }\n      hadConstructor = true;\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassMember = function(classBody) {\n  var this$1 = this;\n\n  if (this.eat(types.semi)) { return null }\n\n  var method = this.startNode();\n  var tryContextual = function (k, noLineBreak) {\n    if ( noLineBreak === void 0 ) noLineBreak = false;\n\n    var start = this$1.start, startLoc = this$1.startLoc;\n    if (!this$1.eatContextual(k)) { return false }\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n    if (method.key) { this$1.unexpected(); }\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, \"Identifier\");\n    return false\n  };\n\n  method.kind = \"method\";\n  method.static = tryContextual(\"static\");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual(\"get\")) {\n      method.kind = \"get\";\n    } else if (tryContextual(\"set\")) {\n      method.kind = \"set\";\n    }\n  }\n  if (!method.key) { this.parsePropertyName(method); }\n  var key = method.key;\n  if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n      key.type === \"Literal\" && key.value === \"constructor\")) {\n    if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    method.kind = \"constructor\";\n  } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n  this.parseClassMethod(classBody, method, isGenerator, isAsync);\n  if (method.kind === \"get\" && method.value.params.length !== 0)\n    { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && method.value.params.length !== 1)\n    { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n  return method\n};\n\npp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n    if (this.type !== types.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, \"nullableID\", false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        var spec = list[i];\n\n        this$1.checkUnreserved(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this$1.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this$1.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, \"let\");\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, \"let\");\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this$1.checkLVal(node$2.local, \"let\");\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Can not use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this$1.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this$1.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding);\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this$1.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this$1.expect(types.comma); }\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n      this$1.expect(close);\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType && bindingType !== \"none\") {\n      if (\n        bindingType === \"var\" && !this.canDeclareVarName(expr.name) ||\n        bindingType !== \"var\" && !this.canDeclareLexicalName(expr.name)\n      ) {\n        this.raiseRecoverable(expr.start, (\"Identifier '\" + (expr.name) + \"' has already been declared\"));\n      }\n      if (bindingType === \"var\") {\n        this.declareVarName(expr.name);\n      } else {\n        this.declareLexicalName(expr.name);\n      }\n    }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this$1.checkLVal(prop, bindingType, checkClashes);\n  }\n    break\n\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLVal(expr.value, bindingType, checkClashes);\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) { refDestructuringErrors.doubleProto = key.start; }\n        // Backwards-compat kludge. Can be removed in version 6.0\n        else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) { return this.parseYield() }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types.parenL || this.type === types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n  for (var computed = (void 0);;) {\n    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);\n      node.computed = !!computed;\n      if (computed) { this$1.expect(types.bracketR); }\n      base = this$1.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this$1.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos;\n      this$1.yieldPos = 0;\n      this$1.awaitPos = 0;\n      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false);\n        this$1.checkYieldAwaitInDefaultParams();\n        this$1.yieldPos = oldYieldPos;\n        this$1.awaitPos = oldAwaitPos;\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this$1.checkExpressionErrors(refDestructuringErrors, true);\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos;\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this$1.finishNode(node$1, \"CallExpression\");\n    } else if (this$1.type === types.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this$1.parseTemplate({isTagged: true});\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\");\n    } else {\n      return base\n    }\n  }\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.inFunction)\n      { this.raise(this.start, \"'super' outside of function or class\"); }\n    node = this.startNode();\n    this.next();\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super Arguments\n    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(this.type !== types.name);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n        id = this.parseIdent();\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, false)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n        if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\" || containsEsc)\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n    if (!this.inFunction)\n      { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  var this$1 = this;\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this$1.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // To disallow parenthesized identifier via `this.toAssignable()`.\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types.comma && this.type !== types.braceR)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    this.checkUnreserved(prop.key);\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.enterFunctionScope();\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = false;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitFunctionScope();\n\n  if (this.strict && node.id) {\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    this.checkLVal(node.id, \"none\");\n  }\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this$1.checkLVal(param, \"var\", allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this$1.type === types.comma)\n      { elt = null; }\n    else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this$1.start; }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Can not use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Can not use 'await' as identifier inside an async function\"); }\n  if (this.isKeyword(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Can not use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved === \"never\") { liberal = false; }\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) { this.checkUnreserved(node); }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function() {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\n// Object.assign polyfill\nvar assign = Object.assign || function(target) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  for (var i = 0, list = sources; i < list.length; i += 1) {\n    var source = list[i];\n\n    for (var key in source) {\n      if (has(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterFunctionScope = function() {\n  // var: a hash of var-declared names in the current lexical scope\n  // lexical: a hash of lexically-declared names in the current lexical scope\n  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)\n  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)\n  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}});\n};\n\npp$5.exitFunctionScope = function() {\n  this.scopeStack.pop();\n};\n\npp$5.enterLexicalScope = function() {\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}};\n\n  this.scopeStack.push(childScope);\n  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical);\n};\n\npp$5.exitLexicalScope = function() {\n  var childScope = this.scopeStack.pop();\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  assign(parentScope.childVar, childScope.var, childScope.childVar);\n};\n\n/**\n * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`\n * in the current lexical scope or any of the parent lexical scopes in this function.\n */\npp$5.canDeclareVarName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)\n};\n\n/**\n * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`\n * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in\n * any child lexical scopes in this function.\n */\npp$5.canDeclareLexicalName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)\n};\n\npp$5.declareVarName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].var[name] = true;\n};\n\npp$5.declareLexicalName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType === types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n    { return true }\n  if (prevType === types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType === types._var || prevType === types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\nvar data = {\n  \"$LONE\": [\n    \"ASCII\",\n    \"ASCII_Hex_Digit\",\n    \"AHex\",\n    \"Alphabetic\",\n    \"Alpha\",\n    \"Any\",\n    \"Assigned\",\n    \"Bidi_Control\",\n    \"Bidi_C\",\n    \"Bidi_Mirrored\",\n    \"Bidi_M\",\n    \"Case_Ignorable\",\n    \"CI\",\n    \"Cased\",\n    \"Changes_When_Casefolded\",\n    \"CWCF\",\n    \"Changes_When_Casemapped\",\n    \"CWCM\",\n    \"Changes_When_Lowercased\",\n    \"CWL\",\n    \"Changes_When_NFKC_Casefolded\",\n    \"CWKCF\",\n    \"Changes_When_Titlecased\",\n    \"CWT\",\n    \"Changes_When_Uppercased\",\n    \"CWU\",\n    \"Dash\",\n    \"Default_Ignorable_Code_Point\",\n    \"DI\",\n    \"Deprecated\",\n    \"Dep\",\n    \"Diacritic\",\n    \"Dia\",\n    \"Emoji\",\n    \"Emoji_Component\",\n    \"Emoji_Modifier\",\n    \"Emoji_Modifier_Base\",\n    \"Emoji_Presentation\",\n    \"Extender\",\n    \"Ext\",\n    \"Grapheme_Base\",\n    \"Gr_Base\",\n    \"Grapheme_Extend\",\n    \"Gr_Ext\",\n    \"Hex_Digit\",\n    \"Hex\",\n    \"IDS_Binary_Operator\",\n    \"IDSB\",\n    \"IDS_Trinary_Operator\",\n    \"IDST\",\n    \"ID_Continue\",\n    \"IDC\",\n    \"ID_Start\",\n    \"IDS\",\n    \"Ideographic\",\n    \"Ideo\",\n    \"Join_Control\",\n    \"Join_C\",\n    \"Logical_Order_Exception\",\n    \"LOE\",\n    \"Lowercase\",\n    \"Lower\",\n    \"Math\",\n    \"Noncharacter_Code_Point\",\n    \"NChar\",\n    \"Pattern_Syntax\",\n    \"Pat_Syn\",\n    \"Pattern_White_Space\",\n    \"Pat_WS\",\n    \"Quotation_Mark\",\n    \"QMark\",\n    \"Radical\",\n    \"Regional_Indicator\",\n    \"RI\",\n    \"Sentence_Terminal\",\n    \"STerm\",\n    \"Soft_Dotted\",\n    \"SD\",\n    \"Terminal_Punctuation\",\n    \"Term\",\n    \"Unified_Ideograph\",\n    \"UIdeo\",\n    \"Uppercase\",\n    \"Upper\",\n    \"Variation_Selector\",\n    \"VS\",\n    \"White_Space\",\n    \"space\",\n    \"XID_Continue\",\n    \"XIDC\",\n    \"XID_Start\",\n    \"XIDS\"\n  ],\n  \"General_Category\": [\n    \"Cased_Letter\",\n    \"LC\",\n    \"Close_Punctuation\",\n    \"Pe\",\n    \"Connector_Punctuation\",\n    \"Pc\",\n    \"Control\",\n    \"Cc\",\n    \"cntrl\",\n    \"Currency_Symbol\",\n    \"Sc\",\n    \"Dash_Punctuation\",\n    \"Pd\",\n    \"Decimal_Number\",\n    \"Nd\",\n    \"digit\",\n    \"Enclosing_Mark\",\n    \"Me\",\n    \"Final_Punctuation\",\n    \"Pf\",\n    \"Format\",\n    \"Cf\",\n    \"Initial_Punctuation\",\n    \"Pi\",\n    \"Letter\",\n    \"L\",\n    \"Letter_Number\",\n    \"Nl\",\n    \"Line_Separator\",\n    \"Zl\",\n    \"Lowercase_Letter\",\n    \"Ll\",\n    \"Mark\",\n    \"M\",\n    \"Combining_Mark\",\n    \"Math_Symbol\",\n    \"Sm\",\n    \"Modifier_Letter\",\n    \"Lm\",\n    \"Modifier_Symbol\",\n    \"Sk\",\n    \"Nonspacing_Mark\",\n    \"Mn\",\n    \"Number\",\n    \"N\",\n    \"Open_Punctuation\",\n    \"Ps\",\n    \"Other\",\n    \"C\",\n    \"Other_Letter\",\n    \"Lo\",\n    \"Other_Number\",\n    \"No\",\n    \"Other_Punctuation\",\n    \"Po\",\n    \"Other_Symbol\",\n    \"So\",\n    \"Paragraph_Separator\",\n    \"Zp\",\n    \"Private_Use\",\n    \"Co\",\n    \"Punctuation\",\n    \"P\",\n    \"punct\",\n    \"Separator\",\n    \"Z\",\n    \"Space_Separator\",\n    \"Zs\",\n    \"Spacing_Mark\",\n    \"Mc\",\n    \"Surrogate\",\n    \"Cs\",\n    \"Symbol\",\n    \"S\",\n    \"Titlecase_Letter\",\n    \"Lt\",\n    \"Unassigned\",\n    \"Cn\",\n    \"Uppercase_Letter\",\n    \"Lu\"\n  ],\n  \"Script\": [\n    \"Adlam\",\n    \"Adlm\",\n    \"Ahom\",\n    \"Anatolian_Hieroglyphs\",\n    \"Hluw\",\n    \"Arabic\",\n    \"Arab\",\n    \"Armenian\",\n    \"Armn\",\n    \"Avestan\",\n    \"Avst\",\n    \"Balinese\",\n    \"Bali\",\n    \"Bamum\",\n    \"Bamu\",\n    \"Bassa_Vah\",\n    \"Bass\",\n    \"Batak\",\n    \"Batk\",\n    \"Bengali\",\n    \"Beng\",\n    \"Bhaiksuki\",\n    \"Bhks\",\n    \"Bopomofo\",\n    \"Bopo\",\n    \"Brahmi\",\n    \"Brah\",\n    \"Braille\",\n    \"Brai\",\n    \"Buginese\",\n    \"Bugi\",\n    \"Buhid\",\n    \"Buhd\",\n    \"Canadian_Aboriginal\",\n    \"Cans\",\n    \"Carian\",\n    \"Cari\",\n    \"Caucasian_Albanian\",\n    \"Aghb\",\n    \"Chakma\",\n    \"Cakm\",\n    \"Cham\",\n    \"Cherokee\",\n    \"Cher\",\n    \"Common\",\n    \"Zyyy\",\n    \"Coptic\",\n    \"Copt\",\n    \"Qaac\",\n    \"Cuneiform\",\n    \"Xsux\",\n    \"Cypriot\",\n    \"Cprt\",\n    \"Cyrillic\",\n    \"Cyrl\",\n    \"Deseret\",\n    \"Dsrt\",\n    \"Devanagari\",\n    \"Deva\",\n    \"Duployan\",\n    \"Dupl\",\n    \"Egyptian_Hieroglyphs\",\n    \"Egyp\",\n    \"Elbasan\",\n    \"Elba\",\n    \"Ethiopic\",\n    \"Ethi\",\n    \"Georgian\",\n    \"Geor\",\n    \"Glagolitic\",\n    \"Glag\",\n    \"Gothic\",\n    \"Goth\",\n    \"Grantha\",\n    \"Gran\",\n    \"Greek\",\n    \"Grek\",\n    \"Gujarati\",\n    \"Gujr\",\n    \"Gurmukhi\",\n    \"Guru\",\n    \"Han\",\n    \"Hani\",\n    \"Hangul\",\n    \"Hang\",\n    \"Hanunoo\",\n    \"Hano\",\n    \"Hatran\",\n    \"Hatr\",\n    \"Hebrew\",\n    \"Hebr\",\n    \"Hiragana\",\n    \"Hira\",\n    \"Imperial_Aramaic\",\n    \"Armi\",\n    \"Inherited\",\n    \"Zinh\",\n    \"Qaai\",\n    \"Inscriptional_Pahlavi\",\n    \"Phli\",\n    \"Inscriptional_Parthian\",\n    \"Prti\",\n    \"Javanese\",\n    \"Java\",\n    \"Kaithi\",\n    \"Kthi\",\n    \"Kannada\",\n    \"Knda\",\n    \"Katakana\",\n    \"Kana\",\n    \"Kayah_Li\",\n    \"Kali\",\n    \"Kharoshthi\",\n    \"Khar\",\n    \"Khmer\",\n    \"Khmr\",\n    \"Khojki\",\n    \"Khoj\",\n    \"Khudawadi\",\n    \"Sind\",\n    \"Lao\",\n    \"Laoo\",\n    \"Latin\",\n    \"Latn\",\n    \"Lepcha\",\n    \"Lepc\",\n    \"Limbu\",\n    \"Limb\",\n    \"Linear_A\",\n    \"Lina\",\n    \"Linear_B\",\n    \"Linb\",\n    \"Lisu\",\n    \"Lycian\",\n    \"Lyci\",\n    \"Lydian\",\n    \"Lydi\",\n    \"Mahajani\",\n    \"Mahj\",\n    \"Malayalam\",\n    \"Mlym\",\n    \"Mandaic\",\n    \"Mand\",\n    \"Manichaean\",\n    \"Mani\",\n    \"Marchen\",\n    \"Marc\",\n    \"Masaram_Gondi\",\n    \"Gonm\",\n    \"Meetei_Mayek\",\n    \"Mtei\",\n    \"Mende_Kikakui\",\n    \"Mend\",\n    \"Meroitic_Cursive\",\n    \"Merc\",\n    \"Meroitic_Hieroglyphs\",\n    \"Mero\",\n    \"Miao\",\n    \"Plrd\",\n    \"Modi\",\n    \"Mongolian\",\n    \"Mong\",\n    \"Mro\",\n    \"Mroo\",\n    \"Multani\",\n    \"Mult\",\n    \"Myanmar\",\n    \"Mymr\",\n    \"Nabataean\",\n    \"Nbat\",\n    \"New_Tai_Lue\",\n    \"Talu\",\n    \"Newa\",\n    \"Nko\",\n    \"Nkoo\",\n    \"Nushu\",\n    \"Nshu\",\n    \"Ogham\",\n    \"Ogam\",\n    \"Ol_Chiki\",\n    \"Olck\",\n    \"Old_Hungarian\",\n    \"Hung\",\n    \"Old_Italic\",\n    \"Ital\",\n    \"Old_North_Arabian\",\n    \"Narb\",\n    \"Old_Permic\",\n    \"Perm\",\n    \"Old_Persian\",\n    \"Xpeo\",\n    \"Old_South_Arabian\",\n    \"Sarb\",\n    \"Old_Turkic\",\n    \"Orkh\",\n    \"Oriya\",\n    \"Orya\",\n    \"Osage\",\n    \"Osge\",\n    \"Osmanya\",\n    \"Osma\",\n    \"Pahawh_Hmong\",\n    \"Hmng\",\n    \"Palmyrene\",\n    \"Palm\",\n    \"Pau_Cin_Hau\",\n    \"Pauc\",\n    \"Phags_Pa\",\n    \"Phag\",\n    \"Phoenician\",\n    \"Phnx\",\n    \"Psalter_Pahlavi\",\n    \"Phlp\",\n    \"Rejang\",\n    \"Rjng\",\n    \"Runic\",\n    \"Runr\",\n    \"Samaritan\",\n    \"Samr\",\n    \"Saurashtra\",\n    \"Saur\",\n    \"Sharada\",\n    \"Shrd\",\n    \"Shavian\",\n    \"Shaw\",\n    \"Siddham\",\n    \"Sidd\",\n    \"SignWriting\",\n    \"Sgnw\",\n    \"Sinhala\",\n    \"Sinh\",\n    \"Sora_Sompeng\",\n    \"Sora\",\n    \"Soyombo\",\n    \"Soyo\",\n    \"Sundanese\",\n    \"Sund\",\n    \"Syloti_Nagri\",\n    \"Sylo\",\n    \"Syriac\",\n    \"Syrc\",\n    \"Tagalog\",\n    \"Tglg\",\n    \"Tagbanwa\",\n    \"Tagb\",\n    \"Tai_Le\",\n    \"Tale\",\n    \"Tai_Tham\",\n    \"Lana\",\n    \"Tai_Viet\",\n    \"Tavt\",\n    \"Takri\",\n    \"Takr\",\n    \"Tamil\",\n    \"Taml\",\n    \"Tangut\",\n    \"Tang\",\n    \"Telugu\",\n    \"Telu\",\n    \"Thaana\",\n    \"Thaa\",\n    \"Thai\",\n    \"Tibetan\",\n    \"Tibt\",\n    \"Tifinagh\",\n    \"Tfng\",\n    \"Tirhuta\",\n    \"Tirh\",\n    \"Ugaritic\",\n    \"Ugar\",\n    \"Vai\",\n    \"Vaii\",\n    \"Warang_Citi\",\n    \"Wara\",\n    \"Yi\",\n    \"Yiii\",\n    \"Zanabazar_Square\",\n    \"Zanb\"\n  ]\n};\nArray.prototype.push.apply(data.$LONE, data.General_Category);\ndata.gc = data.General_Category;\ndata.sc = data.Script_Extensions = data.scx = data.Script;\n\nvar pp$9 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current () {\n  return this.at(this.pos)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead () {\n  return this.at(this.nextIndex(this.pos))\n};\n\nRegExpValidationState.prototype.advance = function advance () {\n  this.pos = this.nextIndex(this.pos);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch) {\n  if (this.current() === ch) {\n    this.advance();\n    return true\n  }\n  return false\n};\n\nfunction codePointToString$1(ch) {\n  if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n}\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpFlags = function(state) {\n  var this$1 = this;\n\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this$1.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this$1.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$9.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* [ */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$9.regexp_disjunction = function(state) {\n  var this$1 = this;\n\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this$1.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$9.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    {  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$9.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$9.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$9.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$9.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$9.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$9.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$9.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$9.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$9.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$9.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$9.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$9.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier[U] ::\n//   [empty]\n//   `?` GroupName[?U]\npp$9.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName[U] ::\n//   `<` RegExpIdentifierName[?U] `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName[U] ::\n//   RegExpIdentifierStart[?U]\n//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString$1(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString$1(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart[U] ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\npp$9.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart[U] ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n//   <ZWNJ>\n//   <ZWJ>\npp$9.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$9.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$9.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$9.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$9.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$9.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$9.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$9.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      state.switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$9.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$9.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$9.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$9.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$9.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!data.hasOwnProperty(name) || data[name].indexOf(value) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\npp$9.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (data.$LONE.indexOf(nameOrValue) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$9.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$9.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* [ */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$9.regexp_classRanges = function(state) {\n  var this$1 = this;\n\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this$1.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$9.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* [ */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$9.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$9.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$9.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$9.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$9.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$9.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype;\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$8.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos;\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos;\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment();\n        break\n      case 47:\n        this$1.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n  case 63: ++this.pos; return this.finishToken(types.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(start, \"Unterminated regular expression\"); }\n    var ch = this$1.input.charAt(this$1.pos);\n    if (lineBreak.test(ch)) { this$1.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this$1.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var str = this.input.slice(start, this.pos);\n  var val = octal ? parseInt(str, 8) : parseFloat(str);\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n      ++this$1.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$8.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$8.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated template\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL)\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$8.readInvalidTemplateToken = function() {\n  var this$1 = this;\n\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n    case \"\\\\\":\n      ++this$1.pos;\n      break\n\n    case \"$\":\n      if (this$1.input[this$1.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n      if (this$1.input.charCodeAt(++this$1.pos) !== 117) // \"u\"\n        { this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this$1.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\nvar version = \"5.7.1\";\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input)\n}\n\n// This is a terrible kludge to support the existing, pre-ES6\n// interface where the loose parser module retroactively adds exports\n// to this module.\nvar parse_dammit;\nvar LooseParser;\nvar pluginsLoose; // eslint-disable-line camelcase\nfunction addLooseExports(parse, Parser$$1, plugins$$1) {\n  parse_dammit = parse; // eslint-disable-line camelcase\n  LooseParser = Parser$$1;\n  pluginsLoose = plugins$$1;\n}\n\nexport { version, parse, parseExpressionAt, tokenizer, parse_dammit, LooseParser, pluginsLoose, addLooseExports, Parser, plugins, defaultOptions, Position, SourceLocation, getLineInfo, Node, TokenType, types as tokTypes, keywords$1 as keywordTypes, TokContext, types$1 as tokContexts, isIdentifierChar, isIdentifierStart, Token, isNewLine, lineBreak, lineBreakG, nonASCIIwhitespace };\n","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../core/utils');\nvar acorn = require('acorn');\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor FunctionNodeBase\n  * \n  * @desc Represents a single function, inside JS, webGL, or openGL.\n  * \n  * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n  * \n  * @prop {String} functionName - Name of the function\n  * @prop {Function} jsFunction - The JS Function the node represents\n  * @prop {String} jsFunctionString - jsFunction.toString()\n  * @prop {String[]} paramNames - Parameter names of the function\n  * @prop {String[]} paramTypes - Shader land parameters type assumption\n  * @prop {Boolean} isRootKernel - Special indicator, for kernel function\n  * @prop {String} webglFunctionString - webgl converted function string\n  * @prop {String} openglFunctionString - opengl converted function string\n  * @prop {String[]} calledFunctions - List of all the functions called\n  * @param {String} functionName - Function name to assume, if its null, it attempts to extract from the function\n  * @param {Function|String} jsFunction - JS Function to do conversion\n  * @param {String[]|Object} paramTypes - Parameter type array, assumes all parameters are 'float' if null\n  * @param {String} returnType - The return type, assumes 'float' if null\n  *\n  */\n\tfunction BaseFunctionNode(functionName, jsFunction, options, paramTypes, returnType) {\n\t\t_classCallCheck(this, BaseFunctionNode);\n\n\t\t//\n\t\t// Internal vars setup\n\t\t//\n\t\tthis.calledFunctions = [];\n\t\tthis.calledFunctionsArguments = {};\n\t\tthis.addFunction = null;\n\t\tthis.isRootKernel = false;\n\t\tthis.isSubKernel = false;\n\t\tthis.parent = null;\n\t\tthis.debug = null;\n\t\tthis.prototypeOnly = null;\n\t\tthis.constants = null;\n\t\tthis.output = null;\n\t\tthis.declarations = {};\n\t\tthis.states = [];\n\n\t\tif (options) {\n\t\t\tif (options.hasOwnProperty('debug')) {\n\t\t\t\tthis.debug = options.debug;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('prototypeOnly')) {\n\t\t\t\tthis.prototypeOnly = options.prototypeOnly;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('constants')) {\n\t\t\t\tthis.constants = options.constants;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('output')) {\n\t\t\t\tthis.output = options.output;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('loopMaxIterations')) {\n\t\t\t\tthis.loopMaxIterations = options.loopMaxIterations;\n\t\t\t}\n\t\t}\n\n\t\t//\n\t\t// Missing jsFunction object exception\n\t\t//\n\t\tif (!jsFunction) {\n\t\t\tthrow 'jsFunction, parameter is missing';\n\t\t}\n\n\t\t//\n\t\t// Setup jsFunction and its string property + validate them\n\t\t//\n\t\tthis.jsFunctionString = jsFunction.toString();\n\t\tif (!utils.isFunctionString(this.jsFunctionString)) {\n\t\t\tconsole.error('jsFunction, to string conversion check failed: not a function?', this.jsFunctionString);\n\t\t\tthrow 'jsFunction, to string conversion check failed: not a function?';\n\t\t}\n\n\t\tif (!utils.isFunction(jsFunction)) {\n\t\t\t//throw 'jsFunction, is not a valid JS Function';\n\t\t\tthis.jsFunction = null;\n\t\t} else {\n\t\t\tthis.jsFunction = jsFunction;\n\t\t}\n\n\t\t//\n\t\t// Setup the function name property\n\t\t//\n\t\tthis.functionName = functionName || jsFunction && jsFunction.name || utils.getFunctionNameFromString(this.jsFunctionString);\n\n\t\tif (!this.functionName) {\n\t\t\tthrow 'jsFunction, missing name argument or value';\n\t\t}\n\n\t\t//\n\t\t// Extract parameter name, and its argument types\n\t\t//\n\t\tthis.paramNames = utils.getParamNamesFromString(this.jsFunctionString);\n\t\tif (paramTypes) {\n\t\t\tif (Array.isArray(paramTypes)) {\n\t\t\t\tif (paramTypes.length !== this.paramNames.length) {\n\t\t\t\t\tthrow 'Invalid argument type array length, against function length -> (' + paramTypes.length + ',' + this.paramNames.length + ')';\n\t\t\t\t}\n\t\t\t\tthis.paramTypes = paramTypes;\n\t\t\t} else if ((typeof paramTypes === 'undefined' ? 'undefined' : _typeof(paramTypes)) === 'object') {\n\t\t\t\tvar paramVariableNames = Object.keys(paramTypes);\n\t\t\t\tif (paramTypes.hasOwnProperty('returns')) {\n\t\t\t\t\tthis.returnType = paramTypes.returns;\n\t\t\t\t\tparamVariableNames.splice(paramVariableNames.indexOf('returns'), 1);\n\t\t\t\t}\n\t\t\t\tif (paramVariableNames.length > 0 && paramVariableNames.length !== this.paramNames.length) {\n\t\t\t\t\tthrow 'Invalid argument type array length, against function length -> (' + paramVariableNames.length + ',' + this.paramNames.length + ')';\n\t\t\t\t} else {\n\t\t\t\t\tthis.paramTypes = this.paramNames.map(function (key) {\n\t\t\t\t\t\tif (paramTypes.hasOwnProperty(key)) {\n\t\t\t\t\t\t\treturn paramTypes[key];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'float';\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.paramTypes = [];\n\t\t\t//TODO: Remove when we have proper type detection\n\t\t\t// for (let a = 0; a < this.paramNames.length; ++a) {\n\t\t\t// \tthis.paramTypes.push();\n\t\t\t// }\n\t\t}\n\n\t\t//\n\t\t// Return type handling\n\t\t//\n\t\tif (!this.returnType) {\n\t\t\tthis.returnType = returnType || 'float';\n\t\t}\n\t}\n\n\t_createClass(BaseFunctionNode, [{\n\t\tkey: 'isIdentifierConstant',\n\t\tvalue: function isIdentifierConstant(paramName) {\n\t\t\tif (!this.constants) return false;\n\t\t\treturn this.constants.hasOwnProperty(paramName);\n\t\t}\n\t}, {\n\t\tkey: 'isInput',\n\t\tvalue: function isInput(paramName) {\n\t\t\treturn this.paramTypes[this.paramNames.indexOf(paramName)] === 'Input';\n\t\t}\n\t}, {\n\t\tkey: 'setAddFunction',\n\t\tvalue: function setAddFunction(fn) {\n\t\t\tthis.addFunction = fn;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'pushState',\n\t\tvalue: function pushState(state) {\n\t\t\tthis.states.push(state);\n\t\t}\n\t}, {\n\t\tkey: 'popState',\n\t\tvalue: function popState(state) {\n\t\t\tif (this.state !== state) {\n\t\t\t\tthrow new Error('Cannot popState ' + state + ' when in ' + this.state);\n\t\t\t}\n\t\t\tthis.states.pop();\n\t\t}\n\t}, {\n\t\tkey: 'isState',\n\t\tvalue: function isState(state) {\n\t\t\treturn this.state === state;\n\t\t}\n\t}, {\n\t\tkey: 'getJsFunction',\n\n\t\t/**\n   * \n   * Core Functions\n   * \n   */\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getJSFunction\n   *\n   * @desc Gets and return the stored JS Function.\n   * Note: that this internally eval the function, if only the string was provided on construction\n   *\n   * @returns {Function} The function object\n   *\n   */\n\t\tvalue: function getJsFunction() {\n\t\t\tif (this.jsFunction) {\n\t\t\t\treturn this.jsFunction;\n\t\t\t}\n\n\t\t\tif (this.jsFunctionString) {\n\t\t\t\tthis.jsFunction = eval(this.jsFunctionString);\n\t\t\t\treturn this.jsFunction;\n\t\t\t}\n\n\t\t\tthrow 'Missing jsFunction, and jsFunctionString parameter';\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name astMemberExpressionUnroll\n   * @desc Parses the abstract syntax tree for binary expression.\n   *\n   * <p>Utility function for astCallExpression.</p>\n   *\n   * @param {Object} ast - the AST object to parse\n   *\n   * @returns {String} the function namespace call, unrolled\n   */\n\n\t}, {\n\t\tkey: 'astMemberExpressionUnroll',\n\t\tvalue: function astMemberExpressionUnroll(ast) {\n\t\t\tif (ast.type === 'Identifier') {\n\t\t\t\treturn ast.name;\n\t\t\t} else if (ast.type === 'ThisExpression') {\n\t\t\t\treturn 'this';\n\t\t\t}\n\n\t\t\tif (ast.type === 'MemberExpression') {\n\t\t\t\tif (ast.object && ast.property) {\n\t\t\t\t\t//babel sniffing\n\t\t\t\t\tif (ast.object.hasOwnProperty('name') && ast.object.name[0] === '_') {\n\t\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.property);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.object) + '.' + this.astMemberExpressionUnroll(ast.property);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//babel sniffing\n\t\t\tif (ast.hasOwnProperty('expressions')) {\n\t\t\t\tvar firstExpression = ast.expressions[0];\n\t\t\t\tif (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.expressions[1]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Failure, unknown expression\n\t\t\tthrow this.astErrorOutput('Unknown CallExpression_unroll', ast);\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getJsAST\n   *\n   * @desc Parses the class function JS, and returns its Abstract Syntax Tree object.\n   *\n   * This is used internally to convert to shader code\n   *\n   * @param {Object} [inParser] - Parser to use, assumes in scope 'parser' if null or undefined\n   *\n   * @returns {Object} The function AST Object, note that result is cached under this.jsFunctionAST;\n   *\n   */\n\n\t}, {\n\t\tkey: 'getJsAST',\n\t\tvalue: function getJsAST(inParser) {\n\t\t\tif (this.jsFunctionAST) {\n\t\t\t\treturn this.jsFunctionAST;\n\t\t\t}\n\n\t\t\tinParser = inParser || acorn;\n\t\t\tif (inParser === null) {\n\t\t\t\tthrow 'Missing JS to AST parser';\n\t\t\t}\n\n\t\t\tvar ast = inParser.parse('var ' + this.functionName + ' = ' + this.jsFunctionString + ';', {\n\t\t\t\tlocations: true\n\t\t\t});\n\t\t\tif (ast === null) {\n\t\t\t\tthrow 'Failed to parse JS code';\n\t\t\t}\n\n\t\t\t// take out the function object, outside the var declarations\n\t\t\tvar funcAST = ast.body[0].declarations[0].init;\n\t\t\tthis.jsFunctionAST = funcAST;\n\n\t\t\treturn funcAST;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getFunctionString\n   *\n   * @desc Returns the converted webgl shader function equivalent of the JS function\n   *\n   * @returns {String} webgl function string, result is cached under this.webGlFunctionString\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionString',\n\t\tvalue: function getFunctionString() {\n\t\t\tthis.generate();\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name setFunctionString\n   *\n   * @desc Set the functionString value, overwriting it\n   *\n   * @param {String} functionString - Shader code string, representing the function\n   *\n   */\n\n\t}, {\n\t\tkey: 'setFunctionString',\n\t\tvalue: function setFunctionString(functionString) {\n\t\t\tthis.functionString = functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getParamType\n   *\n   * @desc Return the type of parameter sent to subKernel/Kernel.\n   *\n   * @param {String} paramName - Name of the parameter\n   *\n   * @returns {String} Type of the parameter\n   *\n   */\n\n\t}, {\n\t\tkey: 'getParamType',\n\t\tvalue: function getParamType(paramName) {\n\t\t\tvar paramIndex = this.paramNames.indexOf(paramName);\n\t\t\tif (paramIndex === -1) {\n\t\t\t\tif (this.declarations.hasOwnProperty(paramName)) {\n\t\t\t\t\treturn this.declarations[paramName];\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!this.parent) {\n\t\t\t\t\tif (this.paramTypes[paramIndex]) return this.paramTypes[paramIndex];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.paramTypes[paramIndex]) return this.paramTypes[paramIndex];\n\t\t\t\t\tvar calledFunctionArguments = this.parent.calledFunctionsArguments[this.functionName];\n\t\t\t\t\tfor (var i = 0; i < calledFunctionArguments.length; i++) {\n\t\t\t\t\t\tvar calledFunctionArgument = calledFunctionArguments[i];\n\t\t\t\t\t\tif (calledFunctionArgument[paramIndex] !== null) {\n\t\t\t\t\t\t\treturn this.paramTypes[paramIndex] = calledFunctionArgument[paramIndex].type;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getUserParamName\n   *\n   * @desc Return the name of the *user parameter*(subKernel parameter) corresponding \n   * to the parameter supplied to the kernel\n   *\n   * @param {String} paramName - Name of the parameter\n   *\n   * @returns {String} Name of the parameter\n   *\n   */\n\n\t}, {\n\t\tkey: 'getUserParamName',\n\t\tvalue: function getUserParamName(paramName) {\n\t\t\tvar paramIndex = this.paramNames.indexOf(paramName);\n\t\t\tif (paramIndex === -1) return null;\n\t\t\tif (!this.parent) return null;\n\t\t\tvar calledFunctionArguments = this.parent.calledFunctionsArguments[this.functionName];\n\t\t\tfor (var i = 0; i < calledFunctionArguments.length; i++) {\n\t\t\t\tvar calledFunctionArgument = calledFunctionArguments[i];\n\t\t\t\tvar param = calledFunctionArgument[paramIndex];\n\t\t\t\tif (param !== null && param.type !== 'Integer') {\n\t\t\t\t\treturn param.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}, {\n\t\tkey: 'generate',\n\t\tvalue: function generate(options) {\n\t\t\tthrow new Error('generate not defined on BaseFunctionNode');\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name astGeneric\n   *\n   * @desc Parses the abstract syntax tree for generically to its respective function\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed string array\n   */\n\n\t}, {\n\t\tkey: 'astGeneric',\n\t\tvalue: function astGeneric(ast, retArr) {\n\t\t\tif (ast === null) {\n\t\t\t\tthrow this.astErrorOutput('NULL ast', ast);\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(ast)) {\n\t\t\t\t\tfor (var i = 0; i < ast.length; i++) {\n\t\t\t\t\t\tthis.astGeneric(ast[i], retArr);\n\t\t\t\t\t}\n\t\t\t\t\treturn retArr;\n\t\t\t\t}\n\n\t\t\t\tswitch (ast.type) {\n\t\t\t\t\tcase 'FunctionDeclaration':\n\t\t\t\t\t\treturn this.astFunctionDeclaration(ast, retArr);\n\t\t\t\t\tcase 'FunctionExpression':\n\t\t\t\t\t\treturn this.astFunctionExpression(ast, retArr);\n\t\t\t\t\tcase 'ReturnStatement':\n\t\t\t\t\t\treturn this.astReturnStatement(ast, retArr);\n\t\t\t\t\tcase 'Literal':\n\t\t\t\t\t\treturn this.astLiteral(ast, retArr);\n\t\t\t\t\tcase 'BinaryExpression':\n\t\t\t\t\t\treturn this.astBinaryExpression(ast, retArr);\n\t\t\t\t\tcase 'Identifier':\n\t\t\t\t\t\treturn this.astIdentifierExpression(ast, retArr);\n\t\t\t\t\tcase 'AssignmentExpression':\n\t\t\t\t\t\treturn this.astAssignmentExpression(ast, retArr);\n\t\t\t\t\tcase 'ExpressionStatement':\n\t\t\t\t\t\treturn this.astExpressionStatement(ast, retArr);\n\t\t\t\t\tcase 'EmptyStatement':\n\t\t\t\t\t\treturn this.astEmptyStatement(ast, retArr);\n\t\t\t\t\tcase 'BlockStatement':\n\t\t\t\t\t\treturn this.astBlockStatement(ast, retArr);\n\t\t\t\t\tcase 'IfStatement':\n\t\t\t\t\t\treturn this.astIfStatement(ast, retArr);\n\t\t\t\t\tcase 'BreakStatement':\n\t\t\t\t\t\treturn this.astBreakStatement(ast, retArr);\n\t\t\t\t\tcase 'ContinueStatement':\n\t\t\t\t\t\treturn this.astContinueStatement(ast, retArr);\n\t\t\t\t\tcase 'ForStatement':\n\t\t\t\t\t\treturn this.astForStatement(ast, retArr);\n\t\t\t\t\tcase 'WhileStatement':\n\t\t\t\t\t\treturn this.astWhileStatement(ast, retArr);\n\t\t\t\t\tcase 'DoWhileStatement':\n\t\t\t\t\t\treturn this.astDoWhileStatement(ast, retArr);\n\t\t\t\t\tcase 'VariableDeclaration':\n\t\t\t\t\t\treturn this.astVariableDeclaration(ast, retArr);\n\t\t\t\t\tcase 'VariableDeclarator':\n\t\t\t\t\t\treturn this.astVariableDeclarator(ast, retArr);\n\t\t\t\t\tcase 'ThisExpression':\n\t\t\t\t\t\treturn this.astThisExpression(ast, retArr);\n\t\t\t\t\tcase 'SequenceExpression':\n\t\t\t\t\t\treturn this.astSequenceExpression(ast, retArr);\n\t\t\t\t\tcase 'UnaryExpression':\n\t\t\t\t\t\treturn this.astUnaryExpression(ast, retArr);\n\t\t\t\t\tcase 'UpdateExpression':\n\t\t\t\t\t\treturn this.astUpdateExpression(ast, retArr);\n\t\t\t\t\tcase 'LogicalExpression':\n\t\t\t\t\t\treturn this.astLogicalExpression(ast, retArr);\n\t\t\t\t\tcase 'MemberExpression':\n\t\t\t\t\t\treturn this.astMemberExpression(ast, retArr);\n\t\t\t\t\tcase 'CallExpression':\n\t\t\t\t\t\treturn this.astCallExpression(ast, retArr);\n\t\t\t\t\tcase 'ArrayExpression':\n\t\t\t\t\t\treturn this.astArrayExpression(ast, retArr);\n\t\t\t\t\tcase 'DebuggerStatement':\n\t\t\t\t\t\treturn this.astDebuggerStatement(ast, retArr);\n\t\t\t\t}\n\n\t\t\t\tthrow this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n\t\t\t}\n\t\t}\n\t\t/**\n   * @function\n   * @name astErrorOutput\n   * @ignore\n   * @desc To throw the AST error, with its location.\n   *\n   * @todo add location support fpr the AST error\n   *\n   * @param {Object} error - the error message output\n   * @param {Object} ast - the AST object where the error is\n   */\n\n\t}, {\n\t\tkey: 'astErrorOutput',\n\t\tvalue: function astErrorOutput(error, ast) {\n\t\t\tconsole.error(utils.getAstString(this.jsFunctionString, ast));\n\t\t\tconsole.error(error, ast, this);\n\t\t\treturn error;\n\t\t}\n\t}, {\n\t\tkey: 'astDebuggerStatement',\n\t\tvalue: function astDebuggerStatement(arrNode, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astFunctionDeclaration',\n\t\tvalue: function astFunctionDeclaration(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astFunctionExpression',\n\t\tvalue: function astFunctionExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astReturnStatement',\n\t\tvalue: function astReturnStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astLiteral',\n\t\tvalue: function astLiteral(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astBinaryExpression',\n\t\tvalue: function astBinaryExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astAssignmentExpression',\n\t\tvalue: function astAssignmentExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astExpressionStatement',\n\t\tvalue: function astExpressionStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astEmptyStatement',\n\t\tvalue: function astEmptyStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astBlockStatement',\n\t\tvalue: function astBlockStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astIfStatement',\n\t\tvalue: function astIfStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astBreakStatement',\n\t\tvalue: function astBreakStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astContinueStatement',\n\t\tvalue: function astContinueStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astForStatement',\n\t\tvalue: function astForStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astWhileStatement',\n\t\tvalue: function astWhileStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astDoWhileStatement',\n\t\tvalue: function astDoWhileStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astVariableDeclaration',\n\t\tvalue: function astVariableDeclaration(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astVariableDeclarator',\n\t\tvalue: function astVariableDeclarator(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astThisExpression',\n\t\tvalue: function astThisExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astSequenceExpression',\n\t\tvalue: function astSequenceExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astUnaryExpression',\n\t\tvalue: function astUnaryExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astUpdateExpression',\n\t\tvalue: function astUpdateExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astLogicalExpression',\n\t\tvalue: function astLogicalExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astMemberExpression',\n\t\tvalue: function astMemberExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astCallExpression',\n\t\tvalue: function astCallExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astArrayExpression',\n\t\tvalue: function astArrayExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'state',\n\t\tget: function get() {\n\t\t\treturn this.states[this.states.length - 1];\n\t\t}\n\t}]);\n\n\treturn BaseFunctionNode;\n}();","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionNodeBase = require('../function-node-base');\nvar utils = require('../../core/utils');\n// Closure capture for the ast function, prevent collision with existing AST functions\n// The prefixes to use\nvar jsMathPrefix = 'Math.';\nvar localPrefix = 'this.';\nvar constantsPrefix = 'this.constants.';\n\nvar DECODE32_ENCODE32 = /decode32\\(\\s+encode32\\(/g;\nvar ENCODE32_DECODE32 = /encode32\\(\\s+decode32\\(/g;\n\n/** \n * @class WebGLFunctionNode\n *\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to generate its respective webGL code.\n *\n * @extends FunctionNodeBase\n *\n * @param {functionNode} inNode - The function node object\n *\n * @returns the converted webGL function string\n *\n */\nmodule.exports = function (_FunctionNodeBase) {\n\t_inherits(WebGLFunctionNode, _FunctionNodeBase);\n\n\tfunction WebGLFunctionNode() {\n\t\t_classCallCheck(this, WebGLFunctionNode);\n\n\t\treturn _possibleConstructorReturn(this, (WebGLFunctionNode.__proto__ || Object.getPrototypeOf(WebGLFunctionNode)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGLFunctionNode, [{\n\t\tkey: 'generate',\n\t\tvalue: function generate() {\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log(this);\n\t\t\t}\n\t\t\tif (this.prototypeOnly) {\n\t\t\t\treturn WebGLFunctionNode.astFunctionPrototype(this.getJsAST(), [], this).join('').trim();\n\t\t\t} else {\n\t\t\t\tthis.functionStringArray = this.astGeneric(this.getJsAST(), [], this);\n\t\t\t}\n\t\t\tthis.functionString = webGlRegexOptimize(this.functionStringArray.join('').trim());\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astFunctionDeclaration\n   *\n   * @desc Parses the abstract syntax tree for to its *named function declaration*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionDeclaration',\n\t\tvalue: function astFunctionDeclaration(ast, retArr) {\n\t\t\tif (this.addFunction) {\n\t\t\t\tthis.addFunction(null, utils.getAstString(this.jsFunctionString, ast));\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astFunctionPrototype\n   * @static\n   *\n   * @desc Parses the abstract syntax tree for to its *named function prototype*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionExpression',\n\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astFunctionExpression\n   *\n   * @desc Parses the abstract syntax tree for to its *named function*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\t\tvalue: function astFunctionExpression(ast, retArr) {\n\n\t\t\t// Setup function return type and name\n\t\t\tif (this.isRootKernel) {\n\t\t\t\tretArr.push('void');\n\t\t\t\tthis.kernalAst = ast;\n\t\t\t} else {\n\t\t\t\tretArr.push(this.returnType);\n\t\t\t}\n\t\t\tretArr.push(' ');\n\t\t\tretArr.push(this.functionName);\n\t\t\tretArr.push('(');\n\n\t\t\tif (!this.isRootKernel) {\n\t\t\t\t// Arguments handling\n\t\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\t\tvar paramName = this.paramNames[i];\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tvar type = this.getParamType(paramName);\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase 'Texture':\n\t\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\t\tretArr.push('sampler2D');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tretArr.push('float');\n\t\t\t\t\t}\n\n\t\t\t\t\tretArr.push(' ');\n\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\tretArr.push(paramName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Function opening\n\t\t\tretArr.push(') {\\n');\n\n\t\t\t// Body statement iteration\n\t\t\tfor (var _i = 0; _i < ast.body.body.length; ++_i) {\n\t\t\t\tthis.astGeneric(ast.body.body[_i], retArr);\n\t\t\t\tretArr.push('\\n');\n\t\t\t}\n\n\t\t\t// Function closing\n\t\t\tretArr.push('}\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astReturnStatement\n   *\n   * @desc Parses the abstract syntax tree for to *return* statement\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astReturnStatement',\n\t\tvalue: function astReturnStatement(ast, retArr) {\n\t\t\tif (this.isRootKernel) {\n\t\t\t\tretArr.push('kernelResult = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t\tretArr.push('return;');\n\t\t\t} else if (this.isSubKernel) {\n\t\t\t\tretArr.push(this.functionName + 'Result = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t\tretArr.push('return ' + this.functionName + 'Result;');\n\t\t\t} else {\n\t\t\t\tretArr.push('return ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t}\n\n\t\t\t//throw this.astErrorOutput(\n\t\t\t//\t'Non main function return, is not supported : '+this.currentFunctionNamespace,\n\t\t\t//\tast\n\t\t\t//);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astLiteral\n   *\n   * @desc Parses the abstract syntax tree for *literal value*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLiteral',\n\t\tvalue: function astLiteral(ast, retArr) {\n\n\t\t\t// Reject non numeric literals\n\t\t\tif (isNaN(ast.value)) {\n\t\t\t\tthrow this.astErrorOutput('Non-numeric literal not supported : ' + ast.value, ast);\n\t\t\t}\n\n\t\t\t// Push the literal value as a float/int\n\t\t\tretArr.push(ast.value);\n\n\t\t\t// If it was an int, node made a float\n\t\t\tif (Number.isInteger(ast.value)) {\n\t\t\t\tretArr.push('.0');\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astBinaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *binary* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBinaryExpression',\n\t\tvalue: function astBinaryExpression(ast, retArr) {\n\t\t\tretArr.push('(');\n\n\t\t\tif (ast.operator === '%') {\n\t\t\t\tretArr.push('mod(');\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push(',');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t\tretArr.push(')');\n\t\t\t} else if (ast.operator === '===') {\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push('==');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t} else if (ast.operator === '!==') {\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push('!=');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push(ast.operator);\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t}\n\n\t\t\tretArr.push(')');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astIdentifierExpression\n   *\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   *\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(idtNode, retArr) {\n\t\t\tif (idtNode.type !== 'Identifier') {\n\t\t\t\tthrow this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n\t\t\t}\n\n\t\t\tswitch (idtNode.name) {\n\t\t\t\tcase 'gpu_threadX':\n\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadY':\n\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadZ':\n\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputX':\n\t\t\t\t\tretArr.push('uOutputDim.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputY':\n\t\t\t\t\tretArr.push('uOutputDim.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputZ':\n\t\t\t\t\tretArr.push('uOutputDim.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Infinity':\n\t\t\t\t\t// https://stackoverflow.com/a/47543127/1324039\n\t\t\t\t\tretArr.push('3.402823466e+38');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n\t\t\t\t\t\tretArr.push('constants_' + idtNode.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar userParamName = this.getUserParamName(idtNode.name);\n\t\t\t\t\t\tif (userParamName !== null) {\n\t\t\t\t\t\t\tretArr.push('user_' + userParamName);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tretArr.push('user_' + idtNode.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astForStatement\n   *\n   * @desc Parses the abstract syntax tree forfor *for-loop* expression\n   *\n   * @param {Object} forNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astForStatement',\n\t\tvalue: function astForStatement(forNode, retArr) {\n\t\t\tif (forNode.type !== 'ForStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid for statment', forNode);\n\t\t\t}\n\n\t\t\tif (forNode.test && forNode.test.type === 'BinaryExpression') {\n\t\t\t\tif (forNode.test.right.type === 'Identifier' && forNode.test.operator === '<' && this.isIdentifierConstant(forNode.test.right.name) === false) {\n\n\t\t\t\t\tif (!this.loopMaxIterations) {\n\t\t\t\t\t\tconsole.warn('Warning: loopMaxIterations is not set! Using default of 1000 which may result in unintended behavior.');\n\t\t\t\t\t\tconsole.warn('Set loopMaxIterations or use a for loop of fixed length to silence this message.');\n\t\t\t\t\t}\n\n\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tretArr.push('LOOP_MAX');\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\n\t\t\t\t\tretArr.push('{\\n');\n\t\t\t\t\tretArr.push('if (');\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tthis.astGeneric(forNode.test.right, retArr);\n\t\t\t\t\tretArr.push(') {\\n');\n\t\t\t\t\tif (forNode.body.type === 'BlockStatement') {\n\t\t\t\t\t\tfor (var i = 0; i < forNode.body.body.length; i++) {\n\t\t\t\t\t\t\tthis.astGeneric(forNode.body.body[i], retArr);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push('} else {\\n');\n\t\t\t\t\tretArr.push('break;\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\n\t\t\t\t\treturn retArr;\n\t\t\t\t} else {\n\t\t\t\t\tvar declarations = JSON.parse(JSON.stringify(forNode.init.declarations));\n\t\t\t\t\tvar updateArgument = forNode.update.argument;\n\t\t\t\t\tif (!Array.isArray(declarations) || declarations.length < 1) {\n\t\t\t\t\t\tconsole.log(this.jsFunctionString);\n\t\t\t\t\t\tthrow new Error('Error: Incompatible for loop declaration');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (declarations.length > 1) {\n\t\t\t\t\t\tvar initArgument = null;\n\t\t\t\t\t\tfor (var _i2 = 0; _i2 < declarations.length; _i2++) {\n\t\t\t\t\t\t\tvar declaration = declarations[_i2];\n\t\t\t\t\t\t\tif (declaration.id.name === updateArgument.name) {\n\t\t\t\t\t\t\t\tinitArgument = declaration;\n\t\t\t\t\t\t\t\tdeclarations.splice(_i2, 1);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tretArr.push('float ');\n\t\t\t\t\t\t\t\tthis.astGeneric(declaration, retArr);\n\t\t\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tretArr.push('for (float ');\n\t\t\t\t\t\tthis.astGeneric(initArgument, retArr);\n\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.astGeneric(forNode.test, retArr);\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\treturn retArr;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow this.astErrorOutput('Invalid for statement', forNode);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *while* loop\n   *\n   *\n   * @param {Object} whileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astWhileStatement',\n\t\tvalue: function astWhileStatement(whileNode, retArr) {\n\t\t\tif (whileNode.type !== 'WhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statment', whileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (float i = 0.0; i < LOOP_MAX; i++) {');\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(whileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tthis.astGeneric(whileNode.body, retArr);\n\t\t\tretArr.push('} else {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *do while* loop\n   *\n   *\n   * @param {Object} doWhileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astDoWhileStatement',\n\t\tvalue: function astDoWhileStatement(doWhileNode, retArr) {\n\t\t\tif (doWhileNode.type !== 'DoWhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statment', doWhileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (float i = 0.0; i < LOOP_MAX; i++) {');\n\t\t\tthis.astGeneric(doWhileNode.body, retArr);\n\t\t\tretArr.push('if (!');\n\t\t\tthis.astGeneric(doWhileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astAssignmentExpression\n   *\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\n   *\n   * @param {Object} assNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astAssignmentExpression',\n\t\tvalue: function astAssignmentExpression(assNode, retArr) {\n\t\t\tif (assNode.operator === '%=') {\n\t\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\t\tretArr.push('=');\n\t\t\t\tretArr.push('mod(');\n\t\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\t\tretArr.push(',');\n\t\t\t\tthis.astGeneric(assNode.right, retArr);\n\t\t\t\tretArr.push(')');\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\t\tretArr.push(assNode.operator);\n\t\t\t\tthis.astGeneric(assNode.right, retArr);\n\t\t\t\treturn retArr;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astEmptyStatement\n   *\n   * @desc Parses the abstract syntax tree for an *Empty* Statement\n   *\n   * @param {Object} eNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astEmptyStatement',\n\t\tvalue: function astEmptyStatement(eNode, retArr) {\n\t\t\t//retArr.push(';\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astBlockStatement\n   *\n   * @desc Parses the abstract syntax tree for *Block* statement\n   *\n   * @param {Object} bNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBlockStatement',\n\t\tvalue: function astBlockStatement(bNode, retArr) {\n\t\t\tretArr.push('{\\n');\n\t\t\tfor (var i = 0; i < bNode.body.length; i++) {\n\t\t\t\tthis.astGeneric(bNode.body[i], retArr);\n\t\t\t}\n\t\t\tretArr.push('}\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astExpressionStatement\n   *\n   * @desc Parses the abstract syntax tree for *generic expression* statement\n   *\n   * @param {Object} esNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astExpressionStatement',\n\t\tvalue: function astExpressionStatement(esNode, retArr) {\n\t\t\tthis.astGeneric(esNode.expression, retArr);\n\t\t\tretArr.push(';\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astVariableDeclaration\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\n   *\n   * @param {Object} vardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclaration',\n\t\tvalue: function astVariableDeclaration(vardecNode, retArr) {\n\t\t\tfor (var i = 0; i < vardecNode.declarations.length; i++) {\n\t\t\t\tvar declaration = vardecNode.declarations[i];\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tvar retDeclaration = [];\n\t\t\t\tthis.astGeneric(declaration, retDeclaration);\n\t\t\t\tif (retDeclaration[2] === 'getImage2D(' || retDeclaration[2] === 'getImage3D(') {\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tretArr.push('vec4 ');\n\t\t\t\t\t}\n\t\t\t\t\tthis.declarations[declaration.id.name] = 'vec4';\n\t\t\t\t} else {\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tretArr.push('float ');\n\t\t\t\t\t}\n\t\t\t\t\tthis.declarations[declaration.id.name] = 'float';\n\t\t\t\t}\n\t\t\t\tretArr.push.apply(retArr, retDeclaration);\n\t\t\t}\n\t\t\tretArr.push(';');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astVariableDeclarator\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declarator*\n   *\n   * @param {Object} ivardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclarator',\n\t\tvalue: function astVariableDeclarator(ivardecNode, retArr) {\n\t\t\tthis.astGeneric(ivardecNode.id, retArr);\n\t\t\tif (ivardecNode.init !== null) {\n\t\t\t\tretArr.push('=');\n\t\t\t\tthis.astGeneric(ivardecNode.init, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astIfStatement\n   *\n   * @desc Parses the abstract syntax tree for *If* Statement\n   *\n   * @param {Object} ifNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIfStatement',\n\t\tvalue: function astIfStatement(ifNode, retArr) {\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(ifNode.test, retArr);\n\t\t\tretArr.push(')');\n\t\t\tif (ifNode.consequent.type === 'BlockStatement') {\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t} else {\n\t\t\t\tretArr.push(' {\\n');\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t}\n\n\t\t\tif (ifNode.alternate) {\n\t\t\t\tretArr.push('else ');\n\t\t\t\tif (ifNode.alternate.type === 'BlockStatement') {\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t} else {\n\t\t\t\t\tretArr.push(' {\\n');\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astBreakStatement\n   *\n   * @desc Parses the abstract syntax tree for *Break* Statement\n   *\n   * @param {Object} brNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBreakStatement',\n\t\tvalue: function astBreakStatement(brNode, retArr) {\n\t\t\tretArr.push('break;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astContinueStatement\n   *\n   * @desc Parses the abstract syntax tree for *Continue* Statement\n   *\n   * @param {Object} crNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astContinueStatement',\n\t\tvalue: function astContinueStatement(crNode, retArr) {\n\t\t\tretArr.push('continue;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astLogicalExpression\n   *\n   * @desc Parses the abstract syntax tree for *Logical* Expression\n   *\n   * @param {Object} logNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLogicalExpression',\n\t\tvalue: function astLogicalExpression(logNode, retArr) {\n\t\t\tretArr.push('(');\n\t\t\tthis.astGeneric(logNode.left, retArr);\n\t\t\tretArr.push(logNode.operator);\n\t\t\tthis.astGeneric(logNode.right, retArr);\n\t\t\tretArr.push(')');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astUpdateExpression\n   *\n   * @desc Parses the abstract syntax tree for *Update* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUpdateExpression',\n\t\tvalue: function astUpdateExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astUnaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *Unary* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUnaryExpression',\n\t\tvalue: function astUnaryExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astThisExpression\n   *\n   * @desc Parses the abstract syntax tree for *This* expression\n   *\n   * @param {Object} tNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astThisExpression',\n\t\tvalue: function astThisExpression(tNode, retArr) {\n\t\t\tretArr.push('this');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astMemberExpression\n   *\n   * @desc Parses the abstract syntax tree for *Member* Expression\n   *\n   * @param {Object} mNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astMemberExpression',\n\t\tvalue: function astMemberExpression(mNode, retArr) {\n\t\t\tif (mNode.computed) {\n\t\t\t\tif (mNode.object.type === 'Identifier') {\n\t\t\t\t\t// Working logger\n\t\t\t\t\tvar reqName = mNode.object.name;\n\t\t\t\t\tvar funcName = this.functionName || 'kernel';\n\t\t\t\t\tvar assumeNotTexture = false;\n\n\t\t\t\t\t// Possibly an array request - handle it as such\n\t\t\t\t\tif (this.paramNames) {\n\t\t\t\t\t\tvar idx = this.paramNames.indexOf(reqName);\n\t\t\t\t\t\tif (idx >= 0 && this.paramTypes[idx] === 'float') {\n\t\t\t\t\t\t\tassumeNotTexture = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (assumeNotTexture) {\n\t\t\t\t\t\t// Get from array\n\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\tretArr.push('[int(');\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\tretArr.push(')]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This normally refers to the global read only input vars\n\t\t\t\t\t\tswitch (this.getParamType(mNode.object.name)) {\n\t\t\t\t\t\t\tcase 'vec4':\n\t\t\t\t\t\t\t\t// Get from local vec4\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('[');\n\t\t\t\t\t\t\t\tretArr.push(mNode.property.raw);\n\t\t\t\t\t\t\t\tretArr.push(']');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\t\t\t// Get from image\n\t\t\t\t\t\t\t\tretArr.push('getImage3D(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push(', vec2(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[1]), vec3(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[1],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[2]');\n\t\t\t\t\t\t\t\tretArr.push('), ');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\t\t\t// Get from image\n\t\t\t\t\t\t\t\tretArr.push('getImage2D(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push(', vec2(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[1]), vec3(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[1],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[2]');\n\t\t\t\t\t\t\t\tretArr.push('), ');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t// Get from texture\n\t\t\t\t\t\t\t\tretArr.push('get(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push(', vec2(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[1]), vec3(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[1],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[2]');\n\t\t\t\t\t\t\t\tretArr.push('), ');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\tvar last = retArr.pop();\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\tretArr.push(last);\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Unroll the member expression\n\t\t\t\tvar unrolled = this.astMemberExpressionUnroll(mNode);\n\t\t\t\tvar unrolled_lc = unrolled.toLowerCase();\n\n\t\t\t\t// Its a constant, remove this.constants.\n\t\t\t\tif (unrolled.indexOf(constantsPrefix) === 0) {\n\t\t\t\t\tunrolled = 'constants_' + unrolled.slice(constantsPrefix.length);\n\t\t\t\t}\n\n\t\t\t\tswitch (unrolled_lc) {\n\t\t\t\t\tcase 'this.thread.x':\n\t\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.thread.y':\n\t\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.thread.z':\n\t\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.output.x':\n\t\t\t\t\t\tretArr.push(this.output[0] + '.0');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.output.y':\n\t\t\t\t\t\tretArr.push(this.output[1] + '.0');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.output.z':\n\t\t\t\t\t\tretArr.push(this.output[2] + '.0');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tretArr.push(unrolled);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astSequenceExpression',\n\t\tvalue: function astSequenceExpression(sNode, retArr) {\n\t\t\tfor (var i = 0; i < sNode.expressions.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tthis.astGeneric(sNode.expressions, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astCallExpression\n   *\n   * @desc Parses the abstract syntax tree for *call* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns  {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astCallExpression',\n\t\tvalue: function astCallExpression(ast, retArr) {\n\t\t\tif (ast.callee) {\n\t\t\t\t// Get the full function call, unrolled\n\t\t\t\tvar funcName = this.astMemberExpressionUnroll(ast.callee);\n\n\t\t\t\t// Its a math operator, remove the prefix\n\t\t\t\tif (funcName.indexOf(jsMathPrefix) === 0) {\n\t\t\t\t\tfuncName = funcName.slice(jsMathPrefix.length);\n\t\t\t\t}\n\n\t\t\t\t// Its a local function, remove this\n\t\t\t\tif (funcName.indexOf(localPrefix) === 0) {\n\t\t\t\t\tfuncName = funcName.slice(localPrefix.length);\n\t\t\t\t}\n\n\t\t\t\t// if this if grows to more than one, lets use a switch\n\t\t\t\tif (funcName === 'atan2') {\n\t\t\t\t\tfuncName = 'atan';\n\t\t\t\t}\n\n\t\t\t\t// Register the function into the called registry\n\t\t\t\tif (this.calledFunctions.indexOf(funcName) < 0) {\n\t\t\t\t\tthis.calledFunctions.push(funcName);\n\t\t\t\t}\n\t\t\t\tif (!this.hasOwnProperty('funcName')) {\n\t\t\t\t\tthis.calledFunctionsArguments[funcName] = [];\n\t\t\t\t}\n\n\t\t\t\tvar functionArguments = [];\n\t\t\t\tthis.calledFunctionsArguments[funcName].push(functionArguments);\n\n\t\t\t\t// Call the function\n\t\t\t\tretArr.push(funcName);\n\n\t\t\t\t// Open arguments space\n\t\t\t\tretArr.push('(');\n\n\t\t\t\t// Add the vars\n\t\t\t\tfor (var i = 0; i < ast.arguments.length; ++i) {\n\t\t\t\t\tvar argument = ast.arguments[i];\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(argument, retArr);\n\t\t\t\t\tif (argument.type === 'Identifier') {\n\t\t\t\t\t\tvar paramIndex = this.paramNames.indexOf(argument.name);\n\t\t\t\t\t\tif (paramIndex === -1) {\n\t\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfunctionArguments.push({\n\t\t\t\t\t\t\t\tname: argument.name,\n\t\t\t\t\t\t\t\ttype: this.paramTypes[paramIndex]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Close arguments space\n\t\t\t\tretArr.push(')');\n\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\t// Failure, unknown expression\n\t\t\tthrow this.astErrorOutput('Unknown CallExpression', ast);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astArrayExpression\n   *\n   * @desc Parses the abstract syntax tree for *Array* Expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astArrayExpression',\n\t\tvalue: function astArrayExpression(arrNode, retArr) {\n\t\t\tvar arrLen = arrNode.elements.length;\n\n\t\t\tretArr.push('float[' + arrLen + '](');\n\t\t\tfor (var i = 0; i < arrLen; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\t\t\t\tvar subNode = arrNode.elements[i];\n\t\t\t\tthis.astGeneric(subNode, retArr);\n\t\t\t}\n\t\t\tretArr.push(')');\n\n\t\t\treturn retArr;\n\n\t\t\t// // Failure, unknown expression\n\t\t\t// throw this.astErrorOutput(\n\t\t\t// \t'Unknown  ArrayExpression',\n\t\t\t// \tarrNode\n\t\t\t//);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name getFunctionPrototypeString\n   *\n   * @desc Returns the converted webgl shader function equivalent of the JS function\n   *\n   * @returns {String} webgl function string, result is cached under this.getFunctionPrototypeString\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionPrototypeString',\n\t\tvalue: function getFunctionPrototypeString() {\n\t\t\tif (this.webGlFunctionPrototypeString) {\n\t\t\t\treturn this.webGlFunctionPrototypeString;\n\t\t\t}\n\t\t\treturn this.webGlFunctionPrototypeString = this.generate();\n\t\t}\n\t}, {\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\treturn this.getFunctionPrototypeString().length > 0;\n\t\t}\n\t}], [{\n\t\tkey: 'astFunctionPrototype',\n\t\tvalue: function astFunctionPrototype(ast, retArr) {\n\t\t\t// Setup function return type and name\n\t\t\tif (this.isRootKernel || this.isSubKernel) {\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\tretArr.push(this.returnType);\n\t\t\tretArr.push(' ');\n\t\t\tretArr.push(this.functionName);\n\t\t\tretArr.push('(');\n\n\t\t\t// Arguments handling\n\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\n\t\t\t\tretArr.push(this.paramTypes[i]);\n\t\t\t\tretArr.push(' ');\n\t\t\t\tretArr.push('user_');\n\t\t\t\tretArr.push(this.paramNames[i]);\n\t\t\t}\n\n\t\t\tretArr.push(');\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\t}]);\n\n\treturn WebGLFunctionNode;\n}(FunctionNodeBase);\n\nfunction isIdentifierKernelParam(paramName, ast, funcParam) {\n\treturn funcParam.paramNames.indexOf(paramName) !== -1;\n}\n\nfunction ensureIndentifierType(paramName, expectedType, ast, funcParam) {\n\tvar start = ast.loc.start;\n\n\tif (!isIdentifierKernelParam(paramName) && expectedType !== 'float') {\n\t\tthrow new Error('Error unexpected identifier ' + paramName + ' on line ' + start.line);\n\t} else {\n\t\tvar actualType = funcParam.paramTypes[funcParam.paramNames.indexOf(paramName)];\n\t\tif (actualType !== expectedType) {\n\t\t\tthrow new Error('Error unexpected identifier ' + paramName + ' on line ' + start.line);\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n * @function\n * @name webgl_regex_optimize\n *\n * @desc [INTERNAL] Takes the near final webgl function string, and do regex search and replacments.\n * For voodoo optimize out the following: \n *\n * - decode32(encode32( <br>\n * - encode32(decode32( <br>\n *\n * @param {String} inStr - The webGl function String\n *\n */\nfunction webGlRegexOptimize(inStr) {\n\treturn inStr.replace(DECODE32_ENCODE32, '((').replace(ENCODE32_DECODE32, '((');\n}","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionBuilderBase = require('../function-builder-base');\nvar WebGLFunctionNode = require('./function-node');\n\n/**\n * @class WebGLFunctionBuilder\n *\n * @extends FunctionBuilderBase\n *\n * @desc Builds webGl functions (shaders) from JavaScript function Strings\n *\n */\nmodule.exports = function (_FunctionBuilderBase) {\n\t_inherits(WebGLFunctionBuilder, _FunctionBuilderBase);\n\n\tfunction WebGLFunctionBuilder() {\n\t\t_classCallCheck(this, WebGLFunctionBuilder);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGLFunctionBuilder.__proto__ || Object.getPrototypeOf(WebGLFunctionBuilder)).call(this));\n\n\t\t_this.Node = WebGLFunctionNode;\n\t\treturn _this;\n\t}\n\n\t//---------------------------------------------------------\n\t//\n\t//  Polyfill stuff\n\t//\n\t//---------------------------------------------------------\n\n\t// Round function used in polyfill\n\n\n\t_createClass(WebGLFunctionBuilder, [{\n\t\tkey: 'polyfillStandardFunctions',\n\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name polyfillStandardFunctions\n   *\n   * @desc Polyfill in the missing Math functions (round)\n   *\n   */\n\t\tvalue: function polyfillStandardFunctions() {\n\t\t\tthis.addFunction('round', _round);\n\t\t}\n\t}], [{\n\t\tkey: 'round',\n\t\tvalue: function round(a) {\n\t\t\treturn _round(a);\n\t\t}\n\t}]);\n\n\treturn WebGLFunctionBuilder;\n}(FunctionBuilderBase);\n\nfunction _round(a) {\n\treturn Math.floor(a + 0.5);\n}","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RunnerBase = require('../runner-base');\nvar WebGLKernel = require('./kernel');\nvar WebGLFunctionBuilder = require('./function-builder');\n\nmodule.exports = function (_RunnerBase) {\n\t_inherits(WebGLRunner, _RunnerBase);\n\n\t/**\n  * @constructor WebGLRunner\n  *\n \t * @extends RunnerBase\n  \t * @desc Instantiates a Runner instance for the kernel.\n  * \n  * @param {Object} settings - Settings to instantiate properties in RunnerBase, with given values\n  *\n  */\n\tfunction WebGLRunner(settings) {\n\t\t_classCallCheck(this, WebGLRunner);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGLRunner.__proto__ || Object.getPrototypeOf(WebGLRunner)).call(this, new WebGLFunctionBuilder(), settings));\n\n\t\t_this.Kernel = WebGLKernel;\n\t\t_this.kernel = null;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf WebGLRunner#\n  * @function\n  * @name getMode\n  *\n  * @desc Return the current mode in which gpu.js is executing.\n  * \n  * @returns {String} The current mode; \"cpu\".\n  *\n  */\n\n\n\t_createClass(WebGLRunner, [{\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn 'gpu';\n\t\t}\n\t}]);\n\n\treturn WebGLRunner;\n}(RunnerBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLFunctionNode = require('../web-gl/function-node');\n\n// Closure capture for the ast function, prevent collision with existing AST functions\n// The prefixes to use\nvar constantsPrefix = 'this.constants.';\n\nvar DECODE32_ENCODE32 = /decode32\\(\\s+encode32\\(/g;\nvar ENCODE32_DECODE32 = /encode32\\(\\s+decode32\\(/g;\n\n/** \n * @class WebGL2FunctionNode\n *\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to generate its respective webGL code.\n *\n * @extends WebGLFunctionNode\n *\n * @returns the converted webGL function string\n *\n */\nmodule.exports = function (_WebGLFunctionNode) {\n\t_inherits(WebGL2FunctionNode, _WebGLFunctionNode);\n\n\tfunction WebGL2FunctionNode() {\n\t\t_classCallCheck(this, WebGL2FunctionNode);\n\n\t\treturn _possibleConstructorReturn(this, (WebGL2FunctionNode.__proto__ || Object.getPrototypeOf(WebGL2FunctionNode)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGL2FunctionNode, [{\n\t\tkey: 'generate',\n\t\tvalue: function generate() {\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log(this);\n\t\t\t}\n\t\t\tif (this.prototypeOnly) {\n\t\t\t\treturn WebGL2FunctionNode.astFunctionPrototype(this.getJsAST(), [], this).join('').trim();\n\t\t\t} else {\n\t\t\t\tthis.functionStringArray = this.astGeneric(this.getJsAST(), [], this);\n\t\t\t}\n\t\t\tthis.functionString = webGlRegexOptimize(this.functionStringArray.join('').trim());\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2FunctionNode#\n   * @function\n   * @name astFunctionExpression\n   *\n   * @desc Parses the abstract syntax tree for to its *named function*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionExpression',\n\t\tvalue: function astFunctionExpression(ast, retArr) {\n\n\t\t\t// Setup function return type and name\n\t\t\tif (this.isRootKernel) {\n\t\t\t\tretArr.push('void');\n\t\t\t\tthis.kernalAst = ast;\n\t\t\t} else {\n\t\t\t\tretArr.push(this.returnType);\n\t\t\t}\n\t\t\tretArr.push(' ');\n\t\t\tretArr.push(this.functionName);\n\t\t\tretArr.push('(');\n\n\t\t\tif (!this.isRootKernel) {\n\t\t\t\t// Arguments handling\n\t\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\t\tvar paramName = this.paramNames[i];\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tvar type = this.getParamType(paramName);\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase 'Texture':\n\t\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\t\tretArr.push('sampler2D');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tretArr.push('float');\n\t\t\t\t\t}\n\n\t\t\t\t\tretArr.push(' ');\n\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\tretArr.push(paramName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Function opening\n\t\t\tretArr.push(') {\\n');\n\n\t\t\t// Body statement iteration\n\t\t\tfor (var _i = 0; _i < ast.body.body.length; ++_i) {\n\t\t\t\tthis.astGeneric(ast.body.body[_i], retArr);\n\t\t\t\tretArr.push('\\n');\n\t\t\t}\n\n\t\t\t// Function closing\n\t\t\tretArr.push('}\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2FunctionNode#\n   * @function\n   * @name astIdentifierExpression\n   *\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   *\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(idtNode, retArr) {\n\t\t\tif (idtNode.type !== 'Identifier') {\n\t\t\t\tthrow this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n\t\t\t}\n\n\t\t\tswitch (idtNode.name) {\n\t\t\t\tcase 'gpu_threadX':\n\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadY':\n\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadZ':\n\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputX':\n\t\t\t\t\tretArr.push('uOutputDim.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputY':\n\t\t\t\t\tretArr.push('uOutputDim.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputZ':\n\t\t\t\t\tretArr.push('uOutputDim.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Infinity':\n\t\t\t\t\tretArr.push('intBitsToFloat(2139095039)');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n\t\t\t\t\t\tretArr.push('constants_' + idtNode.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar userParamName = this.getUserParamName(idtNode.name);\n\t\t\t\t\t\tif (userParamName !== null) {\n\t\t\t\t\t\t\tretArr.push('user_' + userParamName);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tretArr.push('user_' + idtNode.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\t}]);\n\n\treturn WebGL2FunctionNode;\n}(WebGLFunctionNode);\n\n/**\n * @ignore\n * @function\n * @name webgl_regex_optimize\n *\n * @desc [INTERNAL] Takes the near final webgl function string, and do regex search and replacments.\n * For voodoo optimize out the following: \n *\n * - decode32(encode32( <br>\n * - encode32(decode32( <br>\n *\n * @param {String} inStr - The webGl function String\n *\n */\nfunction webGlRegexOptimize(inStr) {\n\treturn inStr.replace(DECODE32_ENCODE32, '((').replace(ENCODE32_DECODE32, '((');\n}","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionBuilderBase = require('../function-builder-base');\nvar WebGL2FunctionNode = require('./function-node');\n\n/**\n * @class WebGLFunctionBuilder\n *\n * @extends FunctionBuilderBase\n *\n * @desc Builds webGl functions (shaders) from JavaScript function Strings\n *\n */\nmodule.exports = function (_FunctionBuilderBase) {\n  _inherits(WebGL2FunctionBuilder, _FunctionBuilderBase);\n\n  function WebGL2FunctionBuilder() {\n    _classCallCheck(this, WebGL2FunctionBuilder);\n\n    var _this = _possibleConstructorReturn(this, (WebGL2FunctionBuilder.__proto__ || Object.getPrototypeOf(WebGL2FunctionBuilder)).call(this));\n\n    _this.Node = WebGL2FunctionNode;\n    return _this;\n  }\n\n  return WebGL2FunctionBuilder;\n}(FunctionBuilderBase);","\"use strict\";\n\nmodule.exports = \"#version 300 es\\n__HEADER__;\\nprecision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nconst float LOOP_MAX = __LOOP_MAX__;\\n#define EPSILON 0.0000001;\\n\\n__CONSTANTS__;\\n\\nin highp vec2 vTexCoord;\\n\\nvec2 integerMod(vec2 x, float y) {\\n  vec2 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec3 integerMod(vec3 x, float y) {\\n  vec3 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec4 integerMod(vec4 x, vec4 y) {\\n  vec4 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nhighp float integerMod(highp float x, highp float y) {\\n  highp float res = floor(mod(x, y));\\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\\n}\\n\\nhighp int integerMod(highp int x, highp int y) {\\n  return int(integerMod(float(x), float(y)));\\n}\\n\\n// Here be dragons!\\n// DO NOT OPTIMIZE THIS CODE\\n// YOU WILL BREAK SOMETHING ON SOMEBODY'S MACHINE\\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\\nhighp float decode32(highp vec4 rgba) {\\n  __DECODE32_ENDIANNESS__;\\n  rgba *= 255.0;\\n  vec2 gte128;\\n  gte128.x = rgba.b >= 128.0 ? 1.0 : 0.0;\\n  gte128.y = rgba.a >= 128.0 ? 1.0 : 0.0;\\n  float exponent = 2.0 * rgba.a - 127.0 + dot(gte128, MAGIC_VEC);\\n  float res = exp2(round(exponent));\\n  rgba.b = rgba.b - 128.0 * gte128.x;\\n  res = dot(rgba, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\\n  res *= gte128.y * -2.0 + 1.0;\\n  return res;\\n}\\n\\nhighp vec4 encode32(highp float f) {\\n  highp float F = abs(f);\\n  highp float sign = f < 0.0 ? 1.0 : 0.0;\\n  highp float exponent = floor(log2(F));\\n  highp float mantissa = (exp2(-exponent) * F);\\n  // exponent += floor(log2(mantissa));\\n  vec4 rgba = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\\n  rgba.rg = integerMod(rgba.rg, 256.0);\\n  rgba.b = integerMod(rgba.b, 128.0);\\n  rgba.a = exponent*0.5 + 63.5;\\n  rgba.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\\n  rgba = floor(rgba);\\n  rgba *= 0.003921569; // 1/255\\n  __ENCODE32_ENDIANNESS__;\\n  return rgba;\\n}\\n// Dragons end here\\n\\nhighp float index;\\nhighp vec3 threadId;\\n\\nhighp vec3 indexTo3D(highp float idx, highp vec3 texDim) {\\n  highp float z = floor(idx / (texDim.x * texDim.y));\\n  idx -= z * texDim.x * texDim.y;\\n  highp float y = floor(idx / texDim.x);\\n  highp float x = integerMod(idx, texDim.x);\\n  return vec3(x, y, z);\\n}\\n\\nhighp float get(highp sampler2D tex, highp vec2 texSize, highp vec3 texDim, highp float z, highp float y, highp float x) {\\n  highp vec3 xyz = vec3(x, y, z);\\n  xyz = floor(xyz + 0.5);\\n  __GET_WRAPAROUND__;\\n  highp float index = round(xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z));\\n  __GET_TEXTURE_CHANNEL__;\\n  highp float w = round(texSize.x);\\n  vec2 st = vec2(integerMod(index, w), float(int(index) / int(w))) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  highp vec4 texel = texture(tex, st / texSize);\\n  __GET_RESULT__;\\n}\\n\\nhighp vec4 getImage2D(highp sampler2D tex, highp vec2 texSize, highp vec3 texDim, highp float z, highp float y, highp float x) {\\n  highp vec3 xyz = vec3(x, y, z);\\n  xyz = floor(xyz + 0.5);\\n  __GET_WRAPAROUND__;\\n  highp float index = round(xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z));\\n  __GET_TEXTURE_CHANNEL__;\\n  highp float w = round(texSize.x);\\n  vec2 st = vec2(integerMod(index, w), float(int(index) / int(w))) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  return texture(tex, st / texSize);\\n}\\n\\nhighp vec4 getImage3D(highp sampler2DArray tex, highp vec2 texSize, highp vec3 texDim, highp float z, highp float y, highp float x) {\\n  highp vec3 xyz = vec3(x, y, z);\\n  xyz = floor(xyz + 0.5);\\n  __GET_WRAPAROUND__;\\n  highp float index = round(xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z));\\n  __GET_TEXTURE_CHANNEL__;\\n  highp float w = round(texSize.x);\\n  vec2 st = vec2(integerMod(index, w), float(int(index) / int(w))) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  return texture(tex, vec3(st / texSize, z));\\n}\\n\\nhighp float get(highp sampler2D tex, highp vec2 texSize, highp vec3 texDim, highp float y, highp float x) {\\n  return get(tex, texSize, texDim, 0.0, y, x);\\n}\\n\\nhighp vec4 getImage2D(highp sampler2D tex, highp vec2 texSize, highp vec3 texDim, highp float y, highp float x) {\\n  return getImage2D(tex, texSize, texDim, 0.0, y, x);\\n}\\n\\nhighp float get(highp sampler2D tex, highp vec2 texSize, highp vec3 texDim, highp float x) {\\n  return get(tex, texSize, texDim, 0.0, 0.0, x);\\n}\\n\\nhighp vec4 getImage2D(highp sampler2D tex, highp vec2 texSize, highp vec3 texDim, highp float x) {\\n  return getImage2D(tex, texSize, texDim, 0.0, 0.0, x);\\n}\\n\\nhighp vec4 actualColor;\\nvoid color(float r, float g, float b, float a) {\\n  actualColor = vec4(r,g,b,a);\\n}\\n\\nvoid color(float r, float g, float b) {\\n  color(r,g,b,1.0);\\n}\\n\\n__MAIN_PARAMS__;\\n__MAIN_CONSTANTS__;\\n__KERNEL__;\\n\\nvoid main(void) {\\n  index = floor(vTexCoord.s * float(uTexSize.x)) + floor(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\\n  __MAIN_RESULT__;\\n}\";","\"use strict\";\n\nmodule.exports = \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nin highp vec2 aPos;\\nin highp vec2 aTexCoord;\\n\\nout highp vec2 vTexCoord;\\nuniform vec2 ratio;\\n\\nvoid main(void) {\\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\\n  vTexCoord = aTexCoord;\\n}\";","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLKernel = require('../web-gl/kernel');\nvar utils = require('../../core/utils');\nvar Texture = require('../../core/texture');\nvar fragShaderString = require('./shader-frag');\nvar vertShaderString = require('./shader-vert');\n\nmodule.exports = function (_WebGLKernel) {\n\t_inherits(WebGL2Kernel, _WebGLKernel);\n\n\tfunction WebGL2Kernel() {\n\t\t_classCallCheck(this, WebGL2Kernel);\n\n\t\treturn _possibleConstructorReturn(this, (WebGL2Kernel.__proto__ || Object.getPrototypeOf(WebGL2Kernel)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGL2Kernel, [{\n\t\tkey: 'initWebGl',\n\t\tvalue: function initWebGl() {\n\t\t\treturn utils.initWebGl2(this.getCanvas());\n\t\t}\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name validateOptions\n   *\n   * @desc Validate options related to Kernel, such as\n   * floatOutputs and Textures, texSize, output,\n   * graphical output.\n   *\n   */\n\n\t}, {\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tvar isFloatReadPixel = utils.isFloatReadPixelsSupportedWebGL2();\n\t\t\tif (this.floatOutput === true && this.floatOutputForce !== true && !isFloatReadPixel) {\n\t\t\t\tthrow new Error('Float texture outputs are not supported on this browser');\n\t\t\t} else if (this.floatTextures === undefined) {\n\t\t\t\tthis.floatTextures = true;\n\t\t\t\tthis.floatOutput = isFloatReadPixel;\n\t\t\t}\n\n\t\t\tif (!this.output || this.output.length === 0) {\n\t\t\t\tif (arguments.length !== 1) {\n\t\t\t\t\tthrow new Error('Auto output only supported for kernels with only one input');\n\t\t\t\t}\n\n\t\t\t\tvar argType = utils.getArgumentType(arguments[0]);\n\t\t\t\tif (argType === 'Array') {\n\t\t\t\t\tthis.output = utils.getDimensions(argType);\n\t\t\t\t} else if (argType === 'Texture') {\n\t\t\t\t\tthis.output = arguments[0].output;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Auto output not supported for input type: ' + argType);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\n\t\t\tif (this.graphical) {\n\t\t\t\tif (this.output.length !== 2) {\n\t\t\t\t\tthrow new Error('Output must have 2 dimensions on graphical mode');\n\t\t\t\t}\n\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tthis.floatOutput = false;\n\t\t\t\t\tconsole.warn('Cannot use graphical mode and float output at the same time');\n\t\t\t\t}\n\n\t\t\t\tthis.texSize = utils.clone(this.output);\n\t\t\t} else if (this.floatOutput === undefined) {\n\t\t\t\tthis.floatOutput = true;\n\t\t\t}\n\n\t\t\tif (this.floatOutput || this.floatOutputForce) {\n\t\t\t\tthis._webGl.getExtension('EXT_color_buffer_float');\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name run\n   *\n   * @desc Run the kernel program, and send the output to renderOutput\n   *\n   * <p> This method calls a helper method *renderOutput* to return the result. </p>\n   *\n   * @returns {Object|Undefined} Result The final output of the program, as float, and as Textures for reuse.\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'run',\n\t\tvalue: function run() {\n\t\t\tif (this.program === null) {\n\t\t\t\tthis.build.apply(this, arguments);\n\t\t\t}\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tgl.useProgram(this.program);\n\t\t\tgl.scissor(0, 0, texSize[0], texSize[1]);\n\n\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\tthis.setUniform3fv('uOutputDim', this.threadDim);\n\t\t\t\tthis.setUniform2fv('uTexSize', texSize);\n\t\t\t}\n\n\t\t\tthis.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n\t\t\tthis.argumentsLength = 0;\n\t\t\tfor (var texIndex = 0; texIndex < paramNames.length; texIndex++) {\n\t\t\t\tthis._addArgument(arguments[texIndex], paramTypes[texIndex], paramNames[texIndex]);\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\t\t\tif (this.outputImmutable) {\n\t\t\t\tthis._setupOutputTexture();\n\t\t\t}\n\t\t\tvar outputTexture = this.outputTexture;\n\n\t\t\tif (this.subKernelOutputVariableNames !== null) {\n\t\t\t\tif (this.outputImmutable) {\n\t\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\t\tthis._setupSubOutputTextures(this.subKernelOutputVariableNames.length);\n\t\t\t\t}\n\t\t\t\tgl.drawBuffers(this.drawBuffersMap);\n\t\t\t}\n\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n\t\t\tif (this.subKernelOutputTextures !== null) {\n\t\t\t\tif (this.subKernels !== null) {\n\t\t\t\t\tvar output = [];\n\t\t\t\t\toutput.result = this.renderOutput(outputTexture);\n\t\t\t\t\tfor (var i = 0; i < this.subKernels.length; i++) {\n\t\t\t\t\t\toutput.push(new Texture(this.subKernelOutputTextures[i], texSize, this.threadDim, this.output, this._webGl));\n\t\t\t\t\t}\n\t\t\t\t\treturn output;\n\t\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\t\tvar _output = {\n\t\t\t\t\t\tresult: this.renderOutput(outputTexture)\n\t\t\t\t\t};\n\t\t\t\t\tvar _i = 0;\n\t\t\t\t\tfor (var p in this.subKernelProperties) {\n\t\t\t\t\t\tif (!this.subKernelProperties.hasOwnProperty(p)) continue;\n\t\t\t\t\t\t_output[p] = new Texture(this.subKernelOutputTextures[_i], texSize, this.threadDim, this.output, this._webGl);\n\t\t\t\t\t\t_i++;\n\t\t\t\t\t}\n\t\t\t\t\treturn _output;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.renderOutput(outputTexture);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name getOutputTexture\n   *\n   * @desc This return defined outputTexture, which is setup in .build(), or if immutable, is defined in .run()\n   *\n   * @returns {Object} Output Texture Cache\n   *\n   */\n\n\t}, {\n\t\tkey: 'getOutputTexture',\n\t\tvalue: function getOutputTexture() {\n\t\t\treturn this.outputTexture;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _setupOutputTexture\n   * @private\n   *\n   * @desc Setup and replace output texture\n   */\n\n\t}, {\n\t\tkey: '_setupOutputTexture',\n\t\tvalue: function _setupOutputTexture() {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar texture = this.outputTexture = this._webGl.createTexture();\n\t\t\tgl.activeTexture(gl.TEXTURE0 + this.paramNames.length);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tif (this.floatOutput) {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t} else {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t}\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @param length\n   * @private\n   *\n   * @desc Setup and replace sub-output textures\n   */\n\n\t}, {\n\t\tkey: '_setupSubOutputTextures',\n\t\tvalue: function _setupSubOutputTextures(length) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar drawBuffersMap = this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n\t\t\tvar textures = this.subKernelOutputTextures = [];\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar texture = this._webGl.createTexture();\n\t\t\t\ttextures.push(texture);\n\t\t\t\tdrawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.paramNames.length + i);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t\t} else {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t\t}\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _addArgument\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array|Texture|Number} value - The actual argument supplied to the kernel\n   * @param {String} type - Type of the argument\n   * @param {String} name - Name of the argument\n   *\n   */\n\n\t}, {\n\t\tkey: '_addArgument',\n\t\tvalue: function _addArgument(value, type, name) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar argumentTexture = this.getArgumentTexture(name);\n\t\t\tif (value instanceof Texture) {\n\t\t\t\ttype = 'Texture';\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Array':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar dim = utils.getDimensions(value, true);\n\t\t\t\t\t\tvar size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar length = size[0] * size[1];\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tlength *= 4;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar valuesFlat = new Float32Array(length);\n\t\t\t\t\t\tutils.flattenTo(value, valuesFlat);\n\n\t\t\t\t\t\tvar buffer = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, size[0], size[1], 0, gl.RGBA, gl.FLOAT, valuesFlat);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0], size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3fv('user_' + name + 'Dim', dim);\n\t\t\t\t\t\t\tthis.setUniform2fv('user_' + name + 'Size', size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Integer':\n\t\t\t\tcase 'Float':\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setUniform1f('user_' + name, value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Input':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar input = value;\n\t\t\t\t\t\tvar _dim = input.size;\n\t\t\t\t\t\tvar _size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, _dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar _length = _size[0] * _size[1];\n\t\t\t\t\t\tvar inputArray = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\t_length *= 4;\n\t\t\t\t\t\t\tinputArray = new Float32Array(_length);\n\t\t\t\t\t\t\tinputArray.set(input.value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinputArray = input.value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, _size[0], _size[1], 0, gl.RGBA, gl.FLOAT, inputArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _buffer = new Uint8Array(inputArray.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size[0], _size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3fv('user_' + name + 'Dim', _dim);\n\t\t\t\t\t\t\tthis.setUniform2fv('user_' + name + 'Size', _size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImage = value;\n\t\t\t\t\t\tvar _dim2 = [inputImage.width, inputImage.height, 1];\n\t\t\t\t\t\tvar _size2 = [inputImage.width, inputImage.height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the image into the texture.\n\t\t\t\t\t\tvar mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, inputImage);\n\t\t\t\t\t\tthis.setUniform3fv('user_' + name + 'Dim', _dim2);\n\t\t\t\t\t\tthis.setUniform2fv('user_' + name + 'Size', _size2);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImages = value;\n\t\t\t\t\t\tvar _dim3 = [inputImages[0].width, inputImages[0].height, inputImages.length];\n\t\t\t\t\t\tvar _size3 = [inputImages[0].width, inputImages[0].height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D_ARRAY, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the images into the texture.\n\t\t\t\t\t\tvar _mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar _internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar width = inputImages[0].width;\n\t\t\t\t\t\tvar height = inputImages[0].height;\n\t\t\t\t\t\tvar textureDepth = inputImages.length;\n\t\t\t\t\t\tvar border = 0;\n\t\t\t\t\t\tvar _srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar _srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage3D(gl.TEXTURE_2D_ARRAY, _mipLevel, _internalFormat, width, height, textureDepth, border, _srcFormat, _srcType, null);\n\t\t\t\t\t\tfor (var i = 0; i < inputImages.length; i++) {\n\t\t\t\t\t\t\tvar xOffset = 0;\n\t\t\t\t\t\t\tvar yOffset = 0;\n\t\t\t\t\t\t\tvar imageDepth = 1;\n\t\t\t\t\t\t\tgl.texSubImage3D(gl.TEXTURE_2D_ARRAY, _mipLevel, xOffset, yOffset, i, inputImages[i].width, inputImages[i].height, imageDepth, _srcFormat, _srcType, inputImages[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform3fv('user_' + name + 'Dim', _dim3);\n\t\t\t\t\t\tthis.setUniform2fv('user_' + name + 'Size', _size3);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Texture':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputTexture = value;\n\t\t\t\t\t\tvar _dim4 = inputTexture.dimensions;\n\t\t\t\t\t\tvar _size4 = inputTexture.size;\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t\t\t\t\t\tthis.setUniform3fv('user_' + name + 'Dim', _dim4);\n\t\t\t\t\t\tthis.setUniform2fv('user_' + name + 'Size', _size4);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Input type not supported (WebGL): ' + value);\n\t\t\t}\n\t\t\tthis.argumentsLength++;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getHeaderString\n   *\n   * @desc Get the header string for the program.\n   * This returns an empty string if no sub-kernels are defined.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getHeaderString',\n\t\tvalue: function _getHeaderString() {\n\t\t\treturn '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getTextureCoordinate\n   *\n   * @desc Get texture coordinate string for the program\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getTextureCoordinate',\n\t\tvalue: function _getTextureCoordinate() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names === null || names.length < 1) {\n\t\t\t\treturn 'in highp vec2 vTexCoord;\\n';\n\t\t\t} else {\n\t\t\t\treturn 'out highp vec2 vTexCoord;\\n';\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getMainParamsString\n   *\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainParamsString',\n\t\tvalue: function _getMainParamsString(args) {\n\t\t\tvar result = [];\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tfor (var i = 0; i < paramNames.length; i++) {\n\t\t\t\tvar param = args[i];\n\t\t\t\tvar paramName = paramNames[i];\n\t\t\t\tvar paramType = paramTypes[i];\n\t\t\t\tif (this.hardcodeConstants) {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'Texture') {\n\t\t\t\t\t\tvar paramDim = utils.getDimensions(param, true);\n\t\t\t\t\t\tvar paramSize = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, paramDim);\n\n\t\t\t\t\t\tresult.push('uniform highp sampler2D user_' + paramName, 'highp vec2 user_' + paramName + 'Size = vec2(' + paramSize[0] + '.0, ' + paramSize[1] + '.0)', 'highp vec3 user_' + paramName + 'Dim = vec3(' + paramDim[0] + '.0, ' + paramDim[1] + '.0, ' + paramDim[2] + '.0)');\n\t\t\t\t\t} else if (paramType === 'Integer') {\n\t\t\t\t\t\tresult.push('highp float user_' + paramName + ' = ' + param + '.0');\n\t\t\t\t\t} else if (paramType === 'Float') {\n\t\t\t\t\t\tresult.push('highp float user_' + paramName + ' = ' + param);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'Texture' || paramType === 'Input' || paramType === 'HTMLImage') {\n\t\t\t\t\t\tresult.push('uniform highp sampler2D user_' + paramName, 'uniform highp vec2 user_' + paramName + 'Size', 'uniform highp vec3 user_' + paramName + 'Dim');\n\t\t\t\t\t} else if (paramType === 'HTMLImageArray') {\n\t\t\t\t\t\tresult.push('uniform highp sampler2DArray user_' + paramName, 'uniform highp vec2 user_' + paramName + 'Size', 'uniform highp vec3 user_' + paramName + 'Dim');\n\t\t\t\t\t} else if (paramType === 'Integer' || paramType === 'Float') {\n\t\t\t\t\t\tresult.push('uniform highp float user_' + paramName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getKernelString\n   *\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getKernelString',\n\t\tvalue: function _getKernelString() {\n\t\t\tvar result = [];\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names !== null) {\n\t\t\t\tresult.push('highp float kernelResult = 0.0');\n\t\t\t\tresult.push('layout(location = 0) out highp vec4 data0');\n\t\t\t\tfor (var i = 0; i < names.length; i++) {\n\t\t\t\t\tresult.push('highp float ' + names[i] + ' = 0.0', 'layout(location = ' + (i + 1) + ') out highp vec4 data' + (i + 1));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('out highp vec4 data0');\n\t\t\t\tresult.push('highp float kernelResult = 0.0');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result) + this.functionBuilder.getPrototypeString('kernel');\n\t\t}\n\n\t\t/**\n   *\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getMainResultString\n   *\n   * @desc Get main result string with checks for floatOutput, graphical, subKernelsOutputs, etc.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainResultString',\n\t\tvalue: function _getMainResultString() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tvar result = [];\n\n\t\t\tif (this.floatOutput) {\n\t\t\t\tresult.push('  index *= 4.0');\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0 = actualColor');\n\t\t\t} else if (this.floatOutput) {\n\t\t\t\tvar channels = ['r', 'g', 'b', 'a'];\n\n\t\t\t\tfor (var i = 0; i < channels.length; ++i) {\n\t\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\t\tresult.push('  kernel()');\n\n\t\t\t\t\tif (names) {\n\t\t\t\t\t\tresult.push('  data0.' + channels[i] + ' = kernelResult');\n\n\t\t\t\t\t\tfor (var j = 0; j < names.length; ++j) {\n\t\t\t\t\t\t\tresult.push('  data' + (j + 1) + '.' + channels[i] + ' = ' + names[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push('  data0.' + channels[i] + ' = kernelResult');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < channels.length - 1) {\n\t\t\t\t\t\tresult.push('  index += 1.0');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (names !== null) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\tresult.push('  kernel()');\n\t\t\t\tresult.push('  data0 = encode32(kernelResult)');\n\t\t\t\tfor (var _i2 = 0; _i2 < names.length; _i2++) {\n\t\t\t\t\tresult.push('  data' + (_i2 + 1) + ' = encode32(' + names[_i2] + ')');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0 = encode32(kernelResult)');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _addKernels\n   *\n   * @desc Adds all the sub-kernels supplied with this Kernel instance.\n   *\n   */\n\n\t}, {\n\t\tkey: '_addKernels',\n\t\tvalue: function _addKernels() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar builder = this.functionBuilder;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tbuilder.addFunctions(this.functions, {\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output\n\t\t\t});\n\t\t\tbuilder.addNativeFunctions(this.nativeFunctions);\n\n\t\t\tbuilder.addKernel(this.fnString, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations\n\t\t\t}, this.paramNames, this.paramTypes);\n\n\t\t\tif (this.subKernels !== null) {\n\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tthis.subKernels.forEach(function (subKernel) {\n\t\t\t\t\treturn _this2._addSubKernel(subKernel);\n\t\t\t\t});\n\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tObject.keys(this.subKernelProperties).forEach(function (property) {\n\t\t\t\t\treturn _this2._addSubKernel(_this2.subKernelProperties[property]);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getFragShaderString\n   *\n   * @desc Get the fragment shader String.\n   * If the String hasn't been compiled yet,\n   * then this method compiles it as well\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Fragment Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getFragShaderString',\n\t\tvalue: function _getFragShaderString(args) {\n\t\t\tif (this.compiledFragShaderString !== null) {\n\t\t\t\treturn this.compiledFragShaderString;\n\t\t\t}\n\t\t\treturn this.compiledFragShaderString = this._replaceArtifacts(this.constructor.fragShaderString, this._getFragShaderArtifactMap(args));\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getVertShaderString\n   *\n   * @desc Get the vertical shader String\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Vertical Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getVertShaderString',\n\t\tvalue: function _getVertShaderString(args) {\n\t\t\tif (this.compiledVertShaderString !== null) {\n\t\t\t\treturn this.compiledVertShaderString;\n\t\t\t}\n\t\t\treturn this.compiledVertShaderString = this.constructor.vertShaderString;\n\t\t}\n\t}], [{\n\t\tkey: 'fragShaderString',\n\t\tget: function get() {\n\t\t\treturn fragShaderString;\n\t\t}\n\t}, {\n\t\tkey: 'vertShaderString',\n\t\tget: function get() {\n\t\t\treturn vertShaderString;\n\t\t}\n\t}]);\n\n\treturn WebGL2Kernel;\n}(WebGLKernel);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RunnerBase = require('../runner-base');\nvar WebGL2FunctionBuilder = require('./function-builder');\nvar WebGL2Kernel = require('./kernel');\n\nmodule.exports = function (_RunnerBase) {\n\t_inherits(WebGL2Runner, _RunnerBase);\n\n\t/**\n  * @constructor WebGL2Runner\n  *\n  * @extends RunnerBase\n \t * @desc Instantiates a Runner instance for the kernel.\n  *\n  * @param {Object} settings - Settings to instantiate properties in RunnerBase, with given values\n  *\n  */\n\tfunction WebGL2Runner(settings) {\n\t\t_classCallCheck(this, WebGL2Runner);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGL2Runner.__proto__ || Object.getPrototypeOf(WebGL2Runner)).call(this, new WebGL2FunctionBuilder(), settings));\n\n\t\t_this.Kernel = WebGL2Kernel;\n\t\t_this.kernel = null;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf WebGL2Runner#\n  * @function\n  * @name getMode\n  *\n  * @desc Return the current mode in which gpu.js is executing.\n  *\n  * @returns {String} The current mode; \"gpu\".\n  *\n  */\n\n\n\t_createClass(WebGL2Runner, [{\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn 'gpu';\n\t\t}\n\t}]);\n\n\treturn WebGL2Runner;\n}(RunnerBase);","'use strict';\n\nvar utils = require('../../core/utils');\nvar kernelRunShortcut = require('../kernel-run-shortcut');\n\nfunction removeFnNoise(fn) {\n  if (/^function /.test(fn)) {\n    fn = fn.substring(9);\n  }\n  return fn.replace(/[_]typeof/g, 'typeof');\n}\n\nfunction removeNoise(str) {\n  return str.replace(/[_]typeof/g, 'typeof');\n}\n\nmodule.exports = function (cpuKernel, name) {\n  return '() => {\\n    ' + kernelRunShortcut.toString() + ';\\n    const utils = {\\n      allPropertiesOf: ' + removeNoise(utils.allPropertiesOf.toString()) + ',\\n      clone: ' + removeNoise(utils.clone.toString()) + '\\n    };\\n    const Utils = utils;\\n    class ' + (name || 'Kernel') + ' {\\n      constructor() {        \\n        this.argumentsLength = 0;\\n        this._canvas = null;\\n        this._webGl = null;\\n        this.built = false;\\n        this.program = null;\\n        this.paramNames = ' + JSON.stringify(cpuKernel.paramNames) + ';\\n        this.paramTypes = ' + JSON.stringify(cpuKernel.paramTypes) + ';\\n        this.texSize = ' + JSON.stringify(cpuKernel.texSize) + ';\\n        this.output = ' + JSON.stringify(cpuKernel.output) + ';\\n        this._kernelString = `' + cpuKernel._kernelString + '`;\\n        this.output = ' + JSON.stringify(cpuKernel.output) + ';\\n\\t\\t    this.run = function() {\\n          this.run = null;\\n          this.build();\\n          return this.run.apply(this, arguments);\\n        }.bind(this);\\n        this.thread = {\\n          x: 0,\\n          y: 0,\\n          z: 0\\n        };\\n      }\\n      setCanvas(canvas) { this._canvas = canvas; return this; }\\n      setWebGl(webGl) { this._webGl = webGl; return this; }\\n      ' + removeFnNoise(cpuKernel.build.toString()) + '\\n      ' + removeFnNoise(cpuKernel.setupParams.toString()) + '\\n      run () { ' + cpuKernel.kernelString + ' }\\n      getKernelString() { return this._kernelString; }\\n      ' + removeFnNoise(cpuKernel.validateOptions.toString()) + '\\n    };\\n    return kernelRunShortcut(new Kernel());\\n  };';\n};","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar KernelBase = require('../kernel-base');\nvar utils = require('../../core/utils');\nvar kernelString = require('./kernel-string');\n\nmodule.exports = function (_KernelBase) {\n\t_inherits(CPUKernel, _KernelBase);\n\n\t/**\n  * @constructor CPUKernel\n  *\n  * @desc Kernel Implementation for CPU.\n  * \n  * <p>Instantiates properties to the CPU Kernel.</p>\n  *\n  * @extends KernelBase\n  *\n  * @prop {Object} thread - The thread dimensions, x, y and z\n  * @prop {Object} output - The canvas dimensions\n  * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\n  * @prop {Function} run - Method to run the kernel\n  *\n  */\n\tfunction CPUKernel(fnString, settings) {\n\t\t_classCallCheck(this, CPUKernel);\n\n\t\tvar _this = _possibleConstructorReturn(this, (CPUKernel.__proto__ || Object.getPrototypeOf(CPUKernel)).call(this, fnString, settings));\n\n\t\t_this._fnBody = utils.getFunctionBodyFromString(fnString);\n\t\t_this._fn = null;\n\t\t_this.run = null;\n\t\t_this._canvasCtx = null;\n\t\t_this._imageData = null;\n\t\t_this._colorData = null;\n\t\t_this._kernelString = null;\n\t\t_this.thread = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tz: 0\n\t\t};\n\n\t\t_this.run = function () {\n\t\t\tthis.run = null;\n\t\t\tthis.build.apply(this, arguments);\n\t\t\treturn this.run.apply(this, arguments);\n\t\t}.bind(_this);\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf CPUKernel#\n  * @function\n  * @name validateOptions\n  *\n  * @desc Validate options related to CPU Kernel, such as \n  * dimensions size, and auto dimension support.\n  *\n  */\n\n\n\t_createClass(CPUKernel, [{\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tif (!this.output || this.output.length === 0) {\n\t\t\t\tif (arguments.length !== 1) {\n\t\t\t\t\tthrow 'Auto dimensions only supported for kernels with only one input';\n\t\t\t\t}\n\n\t\t\t\tvar argType = utils.getArgumentType(arguments[0]);\n\t\t\t\tif (argType === 'Array') {\n\t\t\t\t\tthis.output = utils.getDimensions(argType);\n\t\t\t\t} else if (argType === 'Texture') {\n\t\t\t\t\tthis.output = arguments[0].output;\n\t\t\t\t} else {\n\t\t\t\t\tthrow 'Auto dimensions not supported for input type: ' + argType;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name build\n   *\n   * @desc Builds the Kernel, by generating the kernel \n   * string using thread dimensions, and arguments \n   * supplied to the kernel.\n   *\n   * <p>If the graphical flag is enabled, canvas is used.</p>\n   *\n   */\n\n\t}, {\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\tthis.setupParams(arguments);\n\t\t\tthis.validateOptions();\n\t\t\tvar threadDim = this.threadDim = utils.clone(this.output);\n\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tvar canvas = this.getCanvas();\n\t\t\t\tcanvas.width = threadDim[0];\n\t\t\t\tcanvas.height = threadDim[1];\n\t\t\t\tthis._canvasCtx = canvas.getContext('2d');\n\t\t\t\tthis._imageData = this._canvasCtx.createImageData(threadDim[0], threadDim[1]);\n\t\t\t\tthis._colorData = new Uint8ClampedArray(threadDim[0] * threadDim[1] * 4);\n\t\t\t}\n\n\t\t\tvar kernelString = this.getKernelString();\n\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log('Options:');\n\t\t\t\tconsole.dir(this);\n\t\t\t\tconsole.log('Function output:');\n\t\t\t\tconsole.log(kernelString);\n\t\t\t}\n\n\t\t\tthis.kernelString = kernelString;\n\t\t\tthis.run = new Function([], kernelString).bind(this)();\n\t\t}\n\t}, {\n\t\tkey: 'color',\n\t\tvalue: function color(r, g, b, a) {\n\t\t\tif (typeof a === 'undefined') {\n\t\t\t\ta = 1;\n\t\t\t}\n\n\t\t\tr = Math.floor(r * 255);\n\t\t\tg = Math.floor(g * 255);\n\t\t\tb = Math.floor(b * 255);\n\t\t\ta = Math.floor(a * 255);\n\n\t\t\tvar width = this.output[0];\n\t\t\tvar height = this.output[1];\n\n\t\t\tvar x = this.thread.x;\n\t\t\tvar y = height - this.thread.y - 1;\n\n\t\t\tvar index = x + y * width;\n\n\t\t\tthis._colorData[index * 4 + 0] = r;\n\t\t\tthis._colorData[index * 4 + 1] = g;\n\t\t\tthis._colorData[index * 4 + 2] = b;\n\t\t\tthis._colorData[index * 4 + 3] = a;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name getKernelString\n   *\n   * @desc Generates kernel string for this kernel program.\n   * \n   * <p>If sub-kernels are supplied, they are also factored in.\n   * This string can be saved by calling the `toString` method\n   * and then can be reused later.</p>\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: 'getKernelString',\n\t\tvalue: function getKernelString() {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (this._kernelString !== null) return this._kernelString;\n\n\t\t\tvar builder = this.functionBuilder;\n\n\t\t\t// Thread dim fix (to make compilable)\n\t\t\tvar threadDim = this.threadDim || (this.threadDim = utils.clone(this.output));\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tbuilder.addKernel(this.fnString, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations\n\t\t\t}, this.paramNames, this.paramTypes);\n\n\t\t\tbuilder.addFunctions(this.functions, {\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output\n\t\t\t});\n\n\t\t\tbuilder.addNativeFunctions(this.nativeFunctions);\n\n\t\t\tif (this.subKernels !== null) {\n\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tfor (var i = 0; i < this.subKernels.length; i++) {\n\t\t\t\t\tvar subKernel = this.subKernels[i];\n\t\t\t\t\tbuilder.addSubKernel(subKernel, {\n\t\t\t\t\t\tprototypeOnly: false,\n\t\t\t\t\t\tconstants: this.constants,\n\t\t\t\t\t\toutput: this.output,\n\t\t\t\t\t\tdebug: this.debug,\n\t\t\t\t\t\tloopMaxIterations: this.loopMaxIterations\n\t\t\t\t\t});\n\t\t\t\t\tthis.subKernelOutputVariableNames.push(subKernel.name + 'Result');\n\t\t\t\t}\n\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tvar _i = 0;\n\t\t\t\tfor (var p in this.subKernelProperties) {\n\t\t\t\t\tif (!this.subKernelProperties.hasOwnProperty(p)) continue;\n\t\t\t\t\tvar _subKernel = this.subKernelProperties[p];\n\t\t\t\t\tbuilder.addSubKernel(_subKernel);\n\t\t\t\t\tthis.subKernelOutputVariableNames.push(_subKernel.name + 'Result');\n\t\t\t\t\t_i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar prototypes = builder.getPrototypes('kernel');\n\t\t\tvar kernel = null;\n\t\t\tif (prototypes.length > 1) {\n\t\t\t\tprototypes = prototypes.filter(function (fn) {\n\t\t\t\t\tif (/^function/.test(fn)) return fn;\n\t\t\t\t\tkernel = fn;\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tkernel = prototypes.shift();\n\t\t\t}\n\t\t\tvar kernelString = this._kernelString = '\\n\\t\\tvar LOOP_MAX = ' + this._getLoopMaxString() + ';\\n\\t\\tvar _this = this;\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '  var ' + name + ' = null;\\n';\n\t\t\t}).join('')) + '\\n    return function (' + this.paramNames.map(function (paramName) {\n\t\t\t\treturn 'user_' + paramName;\n\t\t\t}).join(', ') + ') {\\n  ' + this._processInputs() + '\\n    var ret = new Array(' + threadDim[2] + ');\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '  ' + name + 'Z = new Array(' + threadDim[2] + ');\\n';\n\t\t\t}).join('')) + '\\n    for (this.thread.z = 0; this.thread.z < ' + threadDim[2] + '; this.thread.z++) {\\n      ret[this.thread.z] = new Array(' + threadDim[1] + ');\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '    ' + name + 'Z[this.thread.z] = new Array(' + threadDim[1] + ');\\n';\n\t\t\t}).join('')) + '\\n      for (this.thread.y = 0; this.thread.y < ' + threadDim[1] + '; this.thread.y++) {\\n        ret[this.thread.z][this.thread.y] = new Array(' + threadDim[0] + ');\\n  ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '      ' + name + 'Z[this.thread.z][this.thread.y] = new Array(' + threadDim[0] + ');\\n';\n\t\t\t}).join('')) + '\\n        for (this.thread.x = 0; this.thread.x < ' + threadDim[0] + '; this.thread.x++) {\\n          var kernelResult;\\n          ' + kernel + '\\n          ret[this.thread.z][this.thread.y][this.thread.x] = kernelResult;\\n' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '        ' + name + 'Z[this.thread.z][this.thread.y][this.thread.x] = ' + name + ';\\n';\n\t\t\t}).join('')) + '\\n          }\\n        }\\n      }\\n      \\n      if (this.graphical) {\\n        this._imageData.data.set(this._colorData);\\n        this._canvasCtx.putImageData(this._imageData, 0, 0);\\n        return;\\n      }\\n      \\n      if (this.output.length === 1) {\\n        ret = ret[0][0];\\n' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '    ' + name + ' = ' + name + 'Z[0][0];\\n';\n\t\t\t}).join('')) + '\\n      \\n    } else if (this.output.length === 2) {\\n      ret = ret[0];\\n      ' + (this.subKernelOutputVariableNames === null ? '' : this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '    ' + name + ' = ' + name + 'Z[0];\\n';\n\t\t\t}).join('')) + '\\n    }\\n    \\n    ' + (this.subKernelOutputVariableNames === null ? 'return ret;\\n' : this.subKernels !== null ? 'var result = [\\n        ' + this.subKernelOutputVariableNames.map(function (name) {\n\t\t\t\treturn '' + name;\n\t\t\t}).join(',\\n') + '\\n      ];\\n      result.result = ret;\\n      return result;\\n' : 'return {\\n        result: ret,\\n        ' + Object.keys(this.subKernelProperties).map(function (name, i) {\n\t\t\t\treturn name + ': ' + _this2.subKernelOutputVariableNames[i];\n\t\t\t}).join(',\\n') + '\\n      };') + '\\n    ' + (prototypes.length > 0 ? prototypes.join('\\n') : '') + '\\n    }.bind(this);';\n\t\t\treturn kernelString;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name toString\n   *\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   *\n   */\n\n\t}, {\n\t\tkey: 'toString',\n\t\tvalue: function toString() {\n\t\t\treturn kernelString(this);\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name precompileKernelObj\n   *\n   * @desc Precompile the kernel into a single object, \n   * that can be used for building the execution kernel subsequently.\n   *\n   * @param {Array} argTypes - Array of argument types\n   *     \n   * Return:\n   *     Compiled kernel {Object}\n   *\n   */\n\n\t}, {\n\t\tkey: 'precompileKernelObj',\n\t\tvalue: function precompileKernelObj(argTypes) {\n\n\t\t\tvar threadDim = this.threadDim || (this.threadDim = utils.clone(this.output));\n\n\t\t\treturn {\n\t\t\t\tthreadDim: threadDim\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel\n   * @function\n   * @name compileKernel\n   * @static\n   *\n   * @desc Takes a previously precompiled kernel object,\n   * and complete compilation into a full kernel\n   * \n   * @returns {Function} Compiled kernel\n   *\n   */\n\n\t}, {\n\t\tkey: '_getLoopMaxString',\n\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getLoopMaxString\n   *\n   * @desc Get the maximum loop size String.\n   *\n   * @returns {String} result\n   *\n   */\n\t\tvalue: function _getLoopMaxString() {\n\t\t\treturn this.loopMaxIterations ? ' ' + parseInt(this.loopMaxIterations) + ';\\n' : ' 1000;\\n';\n\t\t}\n\t}, {\n\t\tkey: '_processInputs',\n\t\tvalue: function _processInputs() {\n\t\t\tvar result = [];\n\t\t\tfor (var i = 0; i < this.paramTypes.length; i++) {\n\t\t\t\tswitch (this.paramTypes[i]) {\n\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = this._imageTo2DArray(user_' + this.paramNames[i] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = this._imageTo3DArray(user_' + this.paramNames[i] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = user_' + this.paramNames[i] + '.value');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result.join(';\\n');\n\t\t}\n\t}, {\n\t\tkey: '_imageTo2DArray',\n\t\tvalue: function _imageTo2DArray(image) {\n\t\t\tthis._canvasCtx.drawImage(image, 0, 0, image.width, image.height);\n\t\t\tvar pixelsData = this._canvasCtx.getImageData(0, 0, image.width, image.height).data;\n\t\t\tvar imageArray = new Array(image.height);\n\t\t\tvar index = 0;\n\t\t\tfor (var y = image.height - 1; y >= 0; y--) {\n\t\t\t\timageArray[y] = new Array(image.width);\n\t\t\t\tfor (var x = 0; x < image.width; x++) {\n\t\t\t\t\timageArray[y][x] = [pixelsData[index++] / 255, pixelsData[index++] / 255, pixelsData[index++] / 255, pixelsData[index++] / 255];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn imageArray;\n\t\t}\n\t}, {\n\t\tkey: '_imageTo3DArray',\n\t\tvalue: function _imageTo3DArray(images) {\n\t\t\tvar imagesArray = new Array(images.length);\n\t\t\tfor (var i = 0; i < images.length; i++) {\n\t\t\t\timagesArray[i] = this._imageTo2DArray(images[i]);\n\t\t\t}\n\t\t\treturn imagesArray;\n\t\t}\n\t}], [{\n\t\tkey: 'compileKernel',\n\t\tvalue: function compileKernel(precompileObj) {\n\n\t\t\t// Extract values from precompiled obj\n\t\t\tvar threadDim = precompileObj.threadDim;\n\n\t\t\t// Normalize certain values : For actual build\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn CPUKernel;\n}(KernelBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BaseFunctionNode = require('../function-node-base');\nvar utils = require('../../core/utils');\n\n/**\n * @class CPUFunctionNode\n * \n * @extends BaseFunctionNode\n *\n * @desc [INTERNAL] Represents a single function, inside JS\n *\n * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n *\n * @prop functionName         - {String}        Name of the function\n * @prop jsFunction           - {Function}   The JS Function the node represents\n * @prop jsFunctionString     - {String}        jsFunction.toString()\n * @prop paramNames           - {String[]}  Parameter names of the function\n * @prop paramTypes           - {String[]}  Shader land parameters type assumption\n * @prop isRootKernel         - {Boolean}       Special indicator, for kernel function\n * @prop webglFunctionString  - {String}        webgl converted function string\n * @prop openglFunctionString - {String}        opengl converted function string\n * @prop calledFunctions      - {String[]}  List of all the functions called\n * @prop initVariables        - {String[]}  List of variables initialized in the function\n * @prop readVariables        - {String[]}  List of variables read operations occur\n * @prop writeVariables       - {String[]}  List of variables write operations occur\n *\n */\nmodule.exports = function (_BaseFunctionNode) {\n\t_inherits(CPUFunctionNode, _BaseFunctionNode);\n\n\tfunction CPUFunctionNode() {\n\t\t_classCallCheck(this, CPUFunctionNode);\n\n\t\treturn _possibleConstructorReturn(this, (CPUFunctionNode.__proto__ || Object.getPrototypeOf(CPUFunctionNode)).apply(this, arguments));\n\t}\n\n\t_createClass(CPUFunctionNode, [{\n\t\tkey: 'generate',\n\t\tvalue: function generate() {\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log(this);\n\t\t\t}\n\t\t\tthis.functionStringArray = this.astGeneric(this.getJsAST(), [], this);\n\t\t\tthis.functionString = this.functionStringArray.join('').trim();\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name getFunctionPrototypeString\n   *\n   * @desc Returns the converted JS function\n   *\n   * @returns {String} function string, result is cached under this.getFunctionPrototypeString\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionPrototypeString',\n\t\tvalue: function getFunctionPrototypeString() {\n\t\t\tif (this.webGlFunctionPrototypeString) {\n\t\t\t\treturn this.webGlFunctionPrototypeString;\n\t\t\t}\n\t\t\treturn this.webGlFunctionPrototypeString = this.generate();\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astFunctionDeclaration\n   *\n   * @desc Parses the abstract syntax tree for to its *named function declaration*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionDeclaration',\n\t\tvalue: function astFunctionDeclaration(ast, retArr) {\n\t\t\tif (this.addFunction) {\n\t\t\t\tthis.addFunction(null, utils.getAstString(this.jsFunctionString, ast));\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astFunctionPrototype\n   *\n   * @desc Parses the abstract syntax tree for to its *named function prototype*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionPrototype',\n\t\tvalue: function astFunctionPrototype(ast, retArr) {\n\t\t\t// Setup function return type and name\n\t\t\tif (this.isRootKernel || this.isSubKernel) {\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\tretArr.push(this.returnType);\n\t\t\tretArr.push(' ');\n\t\t\tretArr.push(this.functionName);\n\t\t\tretArr.push('(');\n\n\t\t\t// Arguments handling\n\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\t\t\t\tretArr.push(this.paramTypes[i]);\n\t\t\t\tretArr.push(' ');\n\t\t\t\tretArr.push('user_');\n\t\t\t\tretArr.push(this.paramNames[i]);\n\t\t\t}\n\n\t\t\tretArr.push(');\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astFunctionExpression\n   *\n   * @desc Parses the abstract syntax tree for to its *named function*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionExpression',\n\t\tvalue: function astFunctionExpression(ast, retArr) {\n\n\t\t\t// Setup function return type and name\n\t\t\tif (!this.isRootKernel) {\n\t\t\t\tretArr.push('function');\n\t\t\t\tthis.kernalAst = ast;\n\t\t\t\tretArr.push(' ');\n\t\t\t\tretArr.push(this.functionName);\n\t\t\t\tretArr.push('(');\n\n\t\t\t\t// Arguments handling\n\t\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\t\tvar paramName = this.paramNames[i];\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\n\t\t\t\t\tretArr.push(' ');\n\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\tretArr.push(paramName);\n\t\t\t\t}\n\n\t\t\t\t// Function opening\n\t\t\t\tretArr.push(') {\\n');\n\t\t\t}\n\n\t\t\t// Body statement iteration\n\t\t\tfor (var _i = 0; _i < ast.body.body.length; ++_i) {\n\t\t\t\tthis.astGeneric(ast.body.body[_i], retArr);\n\t\t\t\tretArr.push('\\n');\n\t\t\t}\n\n\t\t\tif (!this.isRootKernel) {\n\t\t\t\t// Function closing\n\t\t\t\tretArr.push('}\\n');\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astReturnStatement\n   *\n   * @desc Parses the abstract syntax tree for to *return* statement\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astReturnStatement',\n\t\tvalue: function astReturnStatement(ast, retArr) {\n\t\t\tif (this.isRootKernel) {\n\t\t\t\tretArr.push('kernelResult = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t} else if (this.isSubKernel) {\n\t\t\t\tretArr.push(this.functionName + 'Result = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t\tretArr.push('return ' + this.functionName + 'Result;');\n\t\t\t} else {\n\t\t\t\tretArr.push('return ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t}\n\n\t\t\t//throw this.astErrorOutput(\n\t\t\t//\t'Non main function return, is not supported : '+this.currentFunctionNamespace,\n\t\t\t//\tast\n\t\t\t//);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astLiteral\n   *\n   * @desc Parses the abstract syntax tree for *literal value*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLiteral',\n\t\tvalue: function astLiteral(ast, retArr) {\n\n\t\t\t// Reject non numeric literals\n\t\t\tif (isNaN(ast.value)) {\n\t\t\t\tthrow this.astErrorOutput('Non-numeric literal not supported : ' + ast.value, ast);\n\t\t\t}\n\n\t\t\tretArr.push(ast.value);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astBinaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *binary* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBinaryExpression',\n\t\tvalue: function astBinaryExpression(ast, retArr) {\n\t\t\tretArr.push('(');\n\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\tretArr.push(ast.operator);\n\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\tretArr.push(')');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astIdentifierExpression\n   *\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   *\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(idtNode, retArr) {\n\t\t\tif (idtNode.type !== 'Identifier') {\n\t\t\t\tthrow this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n\t\t\t}\n\n\t\t\tswitch (idtNode.name) {\n\t\t\t\tcase 'gpu_threadX':\n\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadY':\n\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadZ':\n\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputX':\n\t\t\t\t\tretArr.push('uOutputDim.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputY':\n\t\t\t\t\tretArr.push('uOutputDim.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputZ':\n\t\t\t\t\tretArr.push('uOutputDim.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Infinity':\n\t\t\t\t\tretArr.push('Infinity');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n\t\t\t\t\t\tretArr.push('constants_' + idtNode.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar userParamName = this.getUserParamName(idtNode.name);\n\t\t\t\t\t\tif (userParamName !== null) {\n\t\t\t\t\t\t\tretArr.push('user_' + userParamName);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tretArr.push('user_' + idtNode.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astForStatement\n   *\n   * @desc Parses the abstract syntax tree forfor *for-loop* expression\n   *\n   * @param {Object} forNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed cpu string\n   */\n\n\t}, {\n\t\tkey: 'astForStatement',\n\t\tvalue: function astForStatement(forNode, retArr) {\n\t\t\tif (forNode.type !== 'ForStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid for statment', forNode);\n\t\t\t}\n\n\t\t\tif (forNode.test && forNode.test.type === 'BinaryExpression') {\n\t\t\t\tif ((forNode.test.right.type === 'Identifier' || forNode.test.right.type === 'Literal') && forNode.test.operator === '<' && this.isIdentifierConstant(forNode.test.right.name) === false) {\n\n\t\t\t\t\tif (!this.loopMaxIterations) {\n\t\t\t\t\t\tconsole.warn('Warning: loopMaxIterations is not set! Using default of 1000 which may result in unintended behavior.');\n\t\t\t\t\t\tconsole.warn('Set loopMaxIterations or use a for loop of fixed length to silence this message.');\n\t\t\t\t\t}\n\n\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\tif (retArr[retArr.length - 1] !== ';') {\n\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tretArr.push('LOOP_MAX');\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\n\t\t\t\t\tretArr.push('{\\n');\n\t\t\t\t\tretArr.push('if (');\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tthis.astGeneric(forNode.test.right, retArr);\n\t\t\t\t\tretArr.push(') {\\n');\n\t\t\t\t\tif (forNode.body.type === 'BlockStatement') {\n\t\t\t\t\t\tfor (var i = 0; i < forNode.body.body.length; i++) {\n\t\t\t\t\t\t\tthis.astGeneric(forNode.body.body[i], retArr);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push('} else {\\n');\n\t\t\t\t\tretArr.push('break;\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\n\t\t\t\t\treturn retArr;\n\t\t\t\t} else if (forNode.init.declarations) {\n\t\t\t\t\tvar declarations = JSON.parse(JSON.stringify(forNode.init.declarations));\n\t\t\t\t\tvar updateArgument = forNode.update.argument;\n\t\t\t\t\tif (!Array.isArray(declarations) || declarations.length < 1) {\n\t\t\t\t\t\tconsole.log(this.jsFunctionString);\n\t\t\t\t\t\tthrow new Error('Error: Incompatible for loop declaration');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (declarations.length > 1) {\n\t\t\t\t\t\tvar initArgument = null;\n\t\t\t\t\t\tfor (var _i2 = 0; _i2 < declarations.length; _i2++) {\n\t\t\t\t\t\t\tvar declaration = declarations[_i2];\n\t\t\t\t\t\t\tif (declaration.id.name === updateArgument.name) {\n\t\t\t\t\t\t\t\tinitArgument = declaration;\n\t\t\t\t\t\t\t\tdeclarations.splice(_i2, 1);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tretArr.push('var ');\n\t\t\t\t\t\t\t\tthis.astGeneric(declaration, retArr);\n\t\t\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tretArr.push('for (let ');\n\t\t\t\t\t\tthis.astGeneric(initArgument, retArr);\n\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.astGeneric(forNode.test, retArr);\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\treturn retArr;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow this.astErrorOutput('Invalid for statement', forNode);\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *while* loop\n   *\n   *\n   * @param {Object} whileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed openclgl string\n   */\n\n\t}, {\n\t\tkey: 'astWhileStatement',\n\t\tvalue: function astWhileStatement(whileNode, retArr) {\n\t\t\tif (whileNode.type !== 'WhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statment', whileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(whileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tthis.astGeneric(whileNode.body, retArr);\n\t\t\tretArr.push('} else {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *do while* loop\n   *\n   *\n   * @param {Object} doWhileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astDoWhileStatement',\n\t\tvalue: function astDoWhileStatement(doWhileNode, retArr) {\n\t\t\tif (doWhileNode.type !== 'DoWhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statment', doWhileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n\t\t\tthis.astGeneric(doWhileNode.body, retArr);\n\t\t\tretArr.push('if (!');\n\t\t\tthis.astGeneric(doWhileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astAssignmentExpression\n   *\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\n   *\n   * @param {Object} assNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astAssignmentExpression',\n\t\tvalue: function astAssignmentExpression(assNode, retArr) {\n\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\tretArr.push(assNode.operator);\n\t\t\tthis.astGeneric(assNode.right, retArr);\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astEmptyStatement\n   *\n   * @desc Parses the abstract syntax tree for an *Empty* Statement\n   *\n   * @param {Object} eNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astEmptyStatement',\n\t\tvalue: function astEmptyStatement(eNode, retArr) {\n\t\t\t//retArr.push(';\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astBlockStatement\n   *\n   * @desc Parses the abstract syntax tree for *Block* statement\n   *\n   * @param {Object} bNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBlockStatement',\n\t\tvalue: function astBlockStatement(bNode, retArr) {\n\t\t\tretArr.push('{\\n');\n\t\t\tfor (var i = 0; i < bNode.body.length; i++) {\n\t\t\t\tthis.astGeneric(bNode.body[i], retArr);\n\t\t\t}\n\t\t\tretArr.push('}\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astExpressionStatement\n   *\n   * @desc Parses the abstract syntax tree for *generic expression* statement\n   *\n   * @param {Object} esNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astExpressionStatement',\n\t\tvalue: function astExpressionStatement(esNode, retArr) {\n\t\t\tthis.astGeneric(esNode.expression, retArr);\n\t\t\tretArr.push(';\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astVariableDeclaration\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\n   *\n   * @param {Object} vardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclaration',\n\t\tvalue: function astVariableDeclaration(vardecNode, retArr) {\n\t\t\tretArr.push('var ');\n\t\t\tfor (var i = 0; i < vardecNode.declarations.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tthis.astGeneric(vardecNode.declarations[i], retArr);\n\t\t\t}\n\t\t\tretArr.push(';');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astVariableDeclarator\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declarator*\n   *\n   * @param {Object} ivardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclarator',\n\t\tvalue: function astVariableDeclarator(ivardecNode, retArr) {\n\t\t\tthis.astGeneric(ivardecNode.id, retArr);\n\t\t\tif (ivardecNode.init !== null) {\n\t\t\t\tretArr.push('=');\n\t\t\t\tthis.astGeneric(ivardecNode.init, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astIfStatement\n   *\n   * @desc Parses the abstract syntax tree for *If* Statement\n   *\n   * @param {Object} ifNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIfStatement',\n\t\tvalue: function astIfStatement(ifNode, retArr) {\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(ifNode.test, retArr);\n\t\t\tretArr.push(')');\n\t\t\tif (ifNode.consequent.type === 'BlockStatement') {\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t} else {\n\t\t\t\tretArr.push(' {\\n');\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t}\n\n\t\t\tif (ifNode.alternate) {\n\t\t\t\tretArr.push('else ');\n\t\t\t\tif (ifNode.alternate.type === 'BlockStatement') {\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t} else {\n\t\t\t\t\tretArr.push(' {\\n');\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astBreakStatement\n   *\n   * @desc Parses the abstract syntax tree for *Break* Statement\n   *\n   * @param {Object} brNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBreakStatement',\n\t\tvalue: function astBreakStatement(brNode, retArr) {\n\t\t\tretArr.push('break;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astContinueStatement\n   *\n   * @desc Parses the abstract syntax tree for *Continue* Statement\n   *\n   * @param {Object} crNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astContinueStatement',\n\t\tvalue: function astContinueStatement(crNode, retArr) {\n\t\t\tretArr.push('continue;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astLogicalExpression\n   *\n   * @desc Parses the abstract syntax tree for *Logical* Expression\n   *\n   * @param {Object} logNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLogicalExpression',\n\t\tvalue: function astLogicalExpression(logNode, retArr) {\n\t\t\tretArr.push('(');\n\t\t\tthis.astGeneric(logNode.left, retArr);\n\t\t\tretArr.push(logNode.operator);\n\t\t\tthis.astGeneric(logNode.right, retArr);\n\t\t\tretArr.push(')');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astUpdateExpression\n   *\n   * @desc Parses the abstract syntax tree for *Update* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUpdateExpression',\n\t\tvalue: function astUpdateExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astUnaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *Unary* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUnaryExpression',\n\t\tvalue: function astUnaryExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astThisExpression\n   *\n   * @desc Parses the abstract syntax tree for *This* expression\n   *\n   * @param {Object} tNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astThisExpression',\n\t\tvalue: function astThisExpression(tNode, retArr) {\n\t\t\tretArr.push('_this');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astMemberExpression\n   *\n   * @desc Parses the abstract syntax tree for *Member* Expression\n   *\n   * @param {Object} mNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astMemberExpression',\n\t\tvalue: function astMemberExpression(mNode, retArr) {\n\t\t\tif (mNode.computed) {\n\t\t\t\tif (mNode.object.type === 'Identifier') {\n\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\tretArr.push('[');\n\t\t\t\t\tif (this.isInput(mNode.object.name)) {\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push(']');\n\t\t\t\t} else {\n\t\t\t\t\tif (mNode.object.object) {\n\t\t\t\t\t\tif (mNode.object.object.object && this.isInput(mNode.object.object.object.name)) {\n\t\t\t\t\t\t\tthis.pushState('input-index-z');\n\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\tvar last = retArr.pop();\n\t\t\t\t\t\t\tretArr.push(' + ');\n\t\t\t\t\t\t\tthis.popState('input-index-z');\n\t\t\t\t\t\t\tthis.pushState('input-index');\n\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\tthis.popState('input-index');\n\t\t\t\t\t\t\tretArr.push(last);\n\t\t\t\t\t\t} else if (this.isInput(mNode.object.object.name)) {\n\t\t\t\t\t\t\tif (!this.isState('input-index-z')) {\n\t\t\t\t\t\t\t\tthis.pushState('input-index-y');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\tvar _last = retArr.pop();\n\t\t\t\t\t\t\tretArr.push(' + ');\n\t\t\t\t\t\t\tif (!this.isState('input-index-z')) {\n\t\t\t\t\t\t\t\tthis.popState('input-index-y');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar isInputIndexZ = this.isState('input-index-z');\n\t\t\t\t\t\t\tif (isInputIndexZ) {\n\t\t\t\t\t\t\t\tthis.pushState('input-index-y');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.pushState('input-index');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\tif (isInputIndexZ) {\n\t\t\t\t\t\t\t\tthis.popState('input-index-y');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.popState('input-index');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tretArr.push(_last);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\tvar _last2 = retArr.pop();\n\t\t\t\t\t\t\tretArr.push('][');\n\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\tretArr.push(_last2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\tvar _last3 = retArr.pop();\n\t\t\t\t\t\tretArr.push('][');\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\tretArr.push(_last3);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar unrolled = this.astMemberExpressionUnroll(mNode);\n\t\t\t\tif (mNode.property.type === 'Identifier' && mNode.computed) {\n\t\t\t\t\tunrolled = 'user_' + unrolled;\n\t\t\t\t}\n\n\t\t\t\t// Its a reference to `this`, add '_' before\n\t\t\t\tif (unrolled.indexOf('this') === 0) {\n\t\t\t\t\tunrolled = '_' + unrolled;\n\t\t\t\t}\n\n\t\t\t\tswitch (unrolled) {\n\t\t\t\t\tcase '_this.output.x':\n\t\t\t\t\t\tretArr.push(this.output[0]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '_this.output.y':\n\t\t\t\t\t\tretArr.push(this.output[1]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '_this.output.z':\n\t\t\t\t\t\tretArr.push(this.output[2]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '_this.thread.x':\n\t\t\t\t\t\tif (this.isState('input-index-y')) {\n\t\t\t\t\t\t\tretArr.push('(_this.thread.x * _this.threadDim[1])');\n\t\t\t\t\t\t} else if (this.isState('input-index-z')) {\n\t\t\t\t\t\t\tretArr.push('(_this.thread.x * _this.threadDim[0] * _this.threadDim[1])');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tretArr.push(unrolled);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '_this.thread.y':\n\t\t\t\t\t\tif (this.isState('input-index-y')) {\n\t\t\t\t\t\t\tretArr.push('(_this.thread.y * _this.threadDim[0])');\n\t\t\t\t\t\t} else if (this.isState('input-index-z')) {\n\t\t\t\t\t\t\tretArr.push('(_this.thread.y * _this.threadDim[0] * _this.threadDim[1])');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tretArr.push(unrolled);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '_this.thread.z':\n\t\t\t\t\t\tif (this.isState('input-index-z')) {\n\t\t\t\t\t\t\tretArr.push('(_this.thread.z * _this.threadDim[0] * _this.threadDim[1])');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tretArr.push(unrolled);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tretArr.push(unrolled);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astSequenceExpression',\n\t\tvalue: function astSequenceExpression(sNode, retArr) {\n\t\t\tfor (var i = 0; i < sNode.expressions.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tthis.astGeneric(sNode.expressions, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astCallExpression\n   *\n   * @desc Parses the abstract syntax tree for *call* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns  {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astCallExpression',\n\t\tvalue: function astCallExpression(ast, retArr) {\n\t\t\tif (ast.callee) {\n\t\t\t\t// Get the full function call, unrolled\n\t\t\t\tvar funcName = this.astMemberExpressionUnroll(ast.callee);\n\n\t\t\t\t// Register the function into the called registry\n\t\t\t\tif (this.calledFunctions.indexOf(funcName) < 0) {\n\t\t\t\t\tthis.calledFunctions.push(funcName);\n\t\t\t\t}\n\t\t\t\tif (!this.hasOwnProperty('funcName')) {\n\t\t\t\t\tthis.calledFunctionsArguments[funcName] = [];\n\t\t\t\t}\n\n\t\t\t\tvar functionArguments = [];\n\t\t\t\tthis.calledFunctionsArguments[funcName].push(functionArguments);\n\n\t\t\t\t// Call the function\n\t\t\t\tretArr.push(funcName);\n\n\t\t\t\t// Open arguments space\n\t\t\t\tretArr.push('(');\n\n\t\t\t\t// Add the vars\n\t\t\t\tfor (var i = 0; i < ast.arguments.length; ++i) {\n\t\t\t\t\tvar argument = ast.arguments[i];\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(argument, retArr);\n\t\t\t\t\tif (argument.type === 'Identifier') {\n\t\t\t\t\t\tvar paramIndex = this.paramNames.indexOf(argument.name);\n\t\t\t\t\t\tif (paramIndex === -1) {\n\t\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfunctionArguments.push({\n\t\t\t\t\t\t\t\tname: argument.name,\n\t\t\t\t\t\t\t\ttype: this.paramTypes[paramIndex]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Close arguments space\n\t\t\t\tretArr.push(')');\n\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\t// Failure, unknown expression\n\t\t\tthrow this.astErrorOutput('Unknown CallExpression', ast);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNode#\n   * @function\n   * @name astArrayExpression\n   *\n   * @desc Parses the abstract syntax tree for *Array* Expression\n   *\n   * @param {Object} arrNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astArrayExpression',\n\t\tvalue: function astArrayExpression(arrNode, retArr) {\n\t\t\tvar arrLen = arrNode.elements.length;\n\n\t\t\tretArr.push('new Float32Array(');\n\t\t\tfor (var i = 0; i < arrLen; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\t\t\t\tvar subNode = arrNode.elements[i];\n\t\t\t\tthis.astGeneric(subNode, retArr);\n\t\t\t}\n\t\t\tretArr.push(')');\n\n\t\t\treturn retArr;\n\n\t\t\t// // Failure, unknown expression\n\t\t\t// throw this.astErrorOutput(\n\t\t\t// \t'Unknown  ArrayExpression',\n\t\t\t// \tarrNode\n\t\t\t//);\n\t\t}\n\t}, {\n\t\tkey: 'astDebuggerStatement',\n\t\tvalue: function astDebuggerStatement(arrNode, retArr) {\n\t\t\tretArr.push('debugger;');\n\t\t\treturn retArr;\n\t\t}\n\t}]);\n\n\treturn CPUFunctionNode;\n}(BaseFunctionNode);","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionBuilderBase = require('../function-builder-base');\nvar CPUFunctionNode = require('./function-node');\n\n/**\n * @class CPUFunctionBuilder\n *\n * @extends FunctionBuilderBase\n *\n * @desc Builds functions to execute on CPU from JavaScript function Strings\n *\n */\nmodule.exports = function (_FunctionBuilderBase) {\n  _inherits(CPUFunctionBuilder, _FunctionBuilderBase);\n\n  function CPUFunctionBuilder() {\n    _classCallCheck(this, CPUFunctionBuilder);\n\n    var _this = _possibleConstructorReturn(this, (CPUFunctionBuilder.__proto__ || Object.getPrototypeOf(CPUFunctionBuilder)).call(this));\n\n    _this.Node = CPUFunctionNode;\n    return _this;\n  }\n\n  return CPUFunctionBuilder;\n}(FunctionBuilderBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar utils = require('../../core/utils');\nvar RunnerBase = require('../runner-base');\nvar CPUKernel = require('./kernel');\nvar CPUFunctionBuilder = require('./function-builder');\n\nmodule.exports = function (_RunnerBase) {\n\t_inherits(CPURunner, _RunnerBase);\n\n\t/**\n  * @constructor CPURunner\n  *\n  * @desc Instantiates a Runner instance for the kernel.\n  * \n  * @extends RunnerBase\n  *\n  * @param {Object} settings - Settings to instantiate properties in RunnerBase, with given values\n  *\n  */\n\n\tfunction CPURunner(settings) {\n\t\t_classCallCheck(this, CPURunner);\n\n\t\tvar _this = _possibleConstructorReturn(this, (CPURunner.__proto__ || Object.getPrototypeOf(CPURunner)).call(this, new CPUFunctionBuilder(), settings));\n\n\t\t_this.Kernel = CPUKernel;\n\t\t_this.kernel = null;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf CPURunner#\n  * @function\n  * @name getMode()\n  *\n  * Return the current mode in which gpu.js is executing.\n  * \n  * @returns {String} The current mode; \"cpu\".\n  *\n  */\n\n\n\t_createClass(CPURunner, [{\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn 'cpu';\n\t\t}\n\t}]);\n\n\treturn CPURunner;\n}(RunnerBase);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLKernel = require('./kernel');\nvar utils = require('../../core/utils');\n\n/**\n * @class WebGLValidatorKernel\n *\n * @desc Helper class for WebGLKernel to validate texture size and dimensions.\n *\n */\nmodule.exports = function (_WebGLKernel) {\n\t_inherits(WebGLValidatorKernel, _WebGLKernel);\n\n\tfunction WebGLValidatorKernel() {\n\t\t_classCallCheck(this, WebGLValidatorKernel);\n\n\t\treturn _possibleConstructorReturn(this, (WebGLValidatorKernel.__proto__ || Object.getPrototypeOf(WebGLValidatorKernel)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGLValidatorKernel, [{\n\t\tkey: 'validateOptions',\n\n\n\t\t/** \n   * @memberOf WebGLValidatorKernel#\n   * @function\n   * @name validateOptions\n   *\n   */\n\t\tvalue: function validateOptions() {\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\t\t}\n\t}]);\n\n\treturn WebGLValidatorKernel;\n}(WebGLKernel);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLKernel = require('./kernel');\nvar utils = require('../../core/utils');\n\n/**\n * @class WebGLValidatorKernel\n *\n * @desc Helper class for WebGLKernel to validate texture size and dimensions.\n *\n */\nmodule.exports = function (_WebGLKernel) {\n\t_inherits(WebGL2ValidatorKernel, _WebGLKernel);\n\n\tfunction WebGL2ValidatorKernel() {\n\t\t_classCallCheck(this, WebGL2ValidatorKernel);\n\n\t\treturn _possibleConstructorReturn(this, (WebGL2ValidatorKernel.__proto__ || Object.getPrototypeOf(WebGL2ValidatorKernel)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGL2ValidatorKernel, [{\n\t\tkey: 'validateOptions',\n\n\n\t\t/** \n   * @memberOf WebGLValidatorKernel#\n   * @function\n   * @name validateOptions\n   *\n   */\n\t\tvalue: function validateOptions() {\n\t\t\tthis._webGl.getExtension('EXT_color_buffer_float');\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\t\t}\n\t}]);\n\n\treturn WebGL2ValidatorKernel;\n}(WebGLKernel);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UtilsCore = require(\"./utils-core\");\n\n/**\n * This is a minimalistic version of GPU.js used \n * to run precompiled GPU.JS code.\n *\n * This intentionally excludes the JS AST compiller : which is 400kb alone/\n *\n * @class GPUCore\n */\nmodule.exports = function () {\n\tfunction GPUCore() {\n\t\t_classCallCheck(this, GPUCore);\n\t}\n\n\t_createClass(GPUCore, null, [{\n\t\tkey: \"validateKernelObj\",\n\n\n\t\t/**\n   * @name validateKernelObj\n   * @function\n   * @static\n   * @memberOf GPUCore\n   *\n   * @description Validates the KernelObj to comply with the defined format\n   * Note that this does only a limited sanity check, and does not  \n   * guarantee a full working validation.\n   *\n   * For the kernel object format see : <kernelObj-format>\n   *\n   * @param {Object|String} kernelObj - KernelObj used to validate\n   *\n   * @returns {Object} The validated kernel object, converted from JSON if needed\n   *\n   */\n\t\tvalue: function validateKernelObj(kernelObj) {\n\n\t\t\t// NULL validation\n\t\t\tif (kernelObj === null) {\n\t\t\t\tthrow \"KernelObj being validated is NULL\";\n\t\t\t}\n\n\t\t\t// String JSON conversion\n\t\t\tif (typeof kernelObj === \"string\") {\n\t\t\t\ttry {\n\t\t\t\t\tkernelObj = JSON.parse(kernelObj);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tthrow \"Failed to convert KernelObj from JSON string\";\n\t\t\t\t}\n\n\t\t\t\t// NULL validation\n\t\t\t\tif (kernelObj === null) {\n\t\t\t\t\tthrow \"Invalid (NULL) KernelObj JSON string representation\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check for kernel obj flag\n\t\t\tif (kernelObj.isKernelObj !== true) {\n\t\t\t\tthrow \"Failed missing isKernelObj flag check\";\n\t\t\t}\n\n\t\t\t// Return the validated kernelObj\n\t\t\treturn kernelObj;\n\t\t}\n\n\t\t/**\n   * @name loadKernelObj\n   * @function\n   * @static\n   * @memberOf GPUCore\n   *\n   * @description Loads the precompiled kernel object. For GPUCore this is the ONLY way to create the kernel.\n   * To generate the kernelObj use <Kernel.exportKernelObj>\n   *\n   * Note that this function calls <validateKernelObj> internally, and throws an exception if it fails.\n   *\n   * @see GPUCore.validateKernelObj\n   * @see\tKernel.exportKernelObj\n   *\n   * @param {Object} kernelObj - The precompiled kernel object\n   * @param {Object} inOpt - [Optional] the option overrides to use\n   *\n   * @returns {Function} The kernel function\n   * \n   */\n\n\t}, {\n\t\tkey: \"loadKernelObj\",\n\t\tvalue: function loadKernelObj(kernelObj, inOpt) {\n\n\t\t\t// Validates the kernelObj, throws an exception if it fails\n\t\t\tkernelObj = validateKernelObj(kernelObj);\n\t\t}\n\t}]);\n\n\treturn GPUCore;\n}();","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar utils = require('./utils');\nvar WebGLRunner = require('../backend/web-gl/runner');\nvar WebGL2Runner = require('../backend/web-gl2/runner');\nvar CPURunner = require('../backend/cpu/runner');\nvar WebGLValidatorKernel = require('../backend/web-gl/validator-kernel');\nvar WebGL2ValidatorKernel = require('../backend/web-gl2/validator-kernel');\nvar GPUCore = require(\"./gpu-core\");\n\n/**\n * Initialises the GPU.js library class which manages the webGlContext for the created functions.\n * @class\n * @extends GPUCore\n */\n\nvar GPU = function (_GPUCore) {\n\t_inherits(GPU, _GPUCore);\n\n\t/**\n  * Creates an instance of GPU.\n  * @param {any} settings - Settings to set mode, andother properties. See #GPUCore\n  * @memberOf GPU#\n  */\n\tfunction GPU(settings) {\n\t\t_classCallCheck(this, GPU);\n\n\t\tvar _this = _possibleConstructorReturn(this, (GPU.__proto__ || Object.getPrototypeOf(GPU)).call(this, settings));\n\n\t\tsettings = settings || {};\n\t\t_this._canvas = settings.canvas || null;\n\t\t_this._webGl = settings.webGl || null;\n\t\tvar mode = settings.mode;\n\t\tvar detectedMode = void 0;\n\t\tif (!utils.isWebGlSupported()) {\n\t\t\tif (mode && mode !== 'cpu') {\n\t\t\t\tthrow new Error('A requested mode of \"' + mode + '\" and is not supported');\n\t\t\t} else {\n\t\t\t\tconsole.warn('Warning: gpu not supported, falling back to cpu support');\n\t\t\t\tdetectedMode = 'cpu';\n\t\t\t}\n\t\t} else {\n\t\t\tdetectedMode = mode || 'gpu';\n\t\t}\n\n\t\t_this.kernels = [];\n\n\t\tvar runnerSettings = {\n\t\t\tcanvas: _this._canvas,\n\t\t\twebGl: _this._webGl\n\t\t};\n\n\t\tswitch (detectedMode) {\n\t\t\t// public options\n\t\t\tcase 'cpu':\n\t\t\t\t_this._runner = new CPURunner(runnerSettings);\n\t\t\t\tbreak;\n\t\t\tcase 'gpu':\n\t\t\t\tvar Runner = _this.getGPURunner();\n\t\t\t\t_this._runner = new Runner(runnerSettings);\n\t\t\t\tbreak;\n\n\t\t\t// private explicit options for testing\n\t\t\tcase 'webgl2':\n\t\t\t\t_this._runner = new WebGL2Runner(runnerSettings);\n\t\t\t\tbreak;\n\t\t\tcase 'webgl':\n\t\t\t\t_this._runner = new WebGLRunner(runnerSettings);\n\t\t\t\tbreak;\n\n\t\t\t// private explicit options for internal\n\t\t\tcase 'webgl2-validator':\n\t\t\t\t_this._runner = new WebGL2Runner(runnerSettings);\n\t\t\t\t_this._runner.Kernel = WebGL2ValidatorKernel;\n\t\t\t\tbreak;\n\t\t\tcase 'webgl-validator':\n\t\t\t\t_this._runner = new WebGLRunner(runnerSettings);\n\t\t\t\t_this._runner.Kernel = WebGLValidatorKernel;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('\"' + mode + '\" mode is not defined');\n\t\t}\n\t\treturn _this;\n\t}\n\t/**\n  *\n  * This creates a callable function object to call the kernel function with the argument parameter set\n  *\n  * @name createKernel\n  * @function\n  * @memberOf GPU##\n  *\n  * @param {Function} fn - The calling to perform the conversion\n  * @param {Object} [settings] - The parameter configuration object\n  * @property {String} settings.dimensions - Thread dimension array (Defeaults to [1024])\n  * @property {String} settings.mode - CPU / GPU configuration mode (Defaults to null)\n  *\n  * The following modes are supported\n  * *'falsey'* : Attempts to build GPU mode, else fallbacks\n  * *'gpu'* : Attempts to build GPU mode, else fallbacks\n  * *'cpu'* : Forces JS fallback mode only\n  *\n  *\n  * @returns {Function} callable function to run\n  *\n  */\n\n\n\t_createClass(GPU, [{\n\t\tkey: 'createKernel',\n\t\tvalue: function createKernel(fn, settings) {\n\t\t\t//\n\t\t\t// basic parameters safety checks\n\t\t\t//\n\t\t\tif (typeof fn === 'undefined') {\n\t\t\t\tthrow 'Missing fn parameter';\n\t\t\t}\n\t\t\tif (!utils.isFunction(fn) && typeof fn !== 'string') {\n\t\t\t\tthrow 'fn parameter not a function';\n\t\t\t}\n\n\t\t\tvar kernel = this._runner.buildKernel(fn, settings || {});\n\n\t\t\t//if canvas didn't come from this, propagate from kernel\n\t\t\tif (!this._canvas) {\n\t\t\t\tthis._canvas = kernel.getCanvas();\n\t\t\t}\n\t\t\tif (!this._runner.canvas) {\n\t\t\t\tthis._runner.canvas = kernel.getCanvas();\n\t\t\t}\n\n\t\t\tthis.kernels.push(kernel);\n\n\t\t\treturn kernel;\n\t\t}\n\n\t\t/**\n   *\n   * Create a super kernel which executes sub kernels\n   * and saves their output to be used with the next sub kernel.\n   * This can be useful if we want to save the output on one kernel,\n   * and then use it as an input to another kernel. *Machine Learning*\n   *\n   * @name createKernelMap\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Object|Array} subKernels - Sub kernels for this kernel\n   * @param {Function} rootKernel - Root kernel\n   *\n   * @returns {Function} callable kernel function\n   *\n   * @example\n   * const megaKernel = gpu.createKernelMap({\n   *   addResult: function add(a, b) {\n   *     return a[this.thread.x] + b[this.thread.x];\n   *   },\n   *   multiplyResult: function multiply(a, b) {\n   *     return a[this.thread.x] * b[this.thread.x];\n   *   },\n   *  }, function(a, b, c) {\n   *       return multiply(add(a, b), c);\n   * });\n   *\n   * megaKernel(a, b, c);\n   *\n   * Note: You can also define subKernels as an array of functions.\n   * > [add, multiply]\n   *\n   */\n\n\t}, {\n\t\tkey: 'createKernelMap',\n\t\tvalue: function createKernelMap() {\n\t\t\tvar fn = void 0;\n\t\t\tvar settings = void 0;\n\t\t\tif (typeof arguments[arguments.length - 2] === 'function') {\n\t\t\t\tfn = arguments[arguments.length - 2];\n\t\t\t\tsettings = arguments[arguments.length - 1];\n\t\t\t} else {\n\t\t\t\tfn = arguments[arguments.length - 1];\n\t\t\t}\n\n\t\t\tif (!utils.isWebGlDrawBuffersSupported()) {\n\t\t\t\tthis._runner = new CPURunner(settings);\n\t\t\t}\n\n\t\t\tvar kernel = this.createKernel(fn, settings);\n\t\t\tif (Array.isArray(arguments[0])) {\n\t\t\t\tvar functions = arguments[0];\n\t\t\t\tfor (var i = 0; i < functions.length; i++) {\n\t\t\t\t\tkernel.addSubKernel(functions[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _functions = arguments[0];\n\t\t\t\tfor (var p in _functions) {\n\t\t\t\t\tif (!_functions.hasOwnProperty(p)) continue;\n\t\t\t\t\tkernel.addSubKernelProperty(p, _functions[p]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn kernel;\n\t\t}\n\n\t\t/**\n   *\n   * Combine different kernels into one super Kernel,\n   * useful to perform multiple operations inside one\n   * kernel without the penalty of data transfer between\n   * cpu and gpu.\n   *\n   * The number of kernel functions sent to this method can be variable.\n   * You can send in one, two, etc.\n   *\n   * @name combineKernels\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Function} subKernels - Kernel function(s) to combine.\n   * @param {Function} rootKernel - Root kernel to combine kernels into\n   *\n   * @example\n   * \tcombineKernels(add, multiply, function(a,b,c){\n   *\t \treturn add(multiply(a,b), c)\n   *\t})\n   *\n   * @returns {Function} Callable kernel function\n   *\n   */\n\n\t}, {\n\t\tkey: 'combineKernels',\n\t\tvalue: function combineKernels() {\n\t\t\tvar lastKernel = arguments[arguments.length - 2];\n\t\t\tvar combinedKernel = arguments[arguments.length - 1];\n\t\t\tif (this.getMode() === 'cpu') return combinedKernel;\n\n\t\t\tvar canvas = arguments[0].getCanvas();\n\t\t\tvar webGl = arguments[0].getWebGl();\n\n\t\t\tfor (var i = 0; i < arguments.length - 1; i++) {\n\t\t\t\targuments[i].setCanvas(canvas).setWebGl(webGl).setOutputToTexture(true);\n\t\t\t}\n\n\t\t\treturn function () {\n\t\t\t\tcombinedKernel.apply(null, arguments);\n\t\t\t\tvar texSize = lastKernel.texSize;\n\t\t\t\tvar gl = lastKernel.getWebGl();\n\t\t\t\tvar threadDim = lastKernel.threadDim;\n\t\t\t\tvar result = void 0;\n\t\t\t\tif (lastKernel.floatOutput) {\n\t\t\t\t\tresult = new Float32Array(texSize[0] * texSize[1] * 4);\n\t\t\t\t\tgl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.FLOAT, result);\n\t\t\t\t} else {\n\t\t\t\t\tvar bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n\t\t\t\t\tgl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, bytes);\n\t\t\t\t\tresult = new Float32Array(bytes.buffer);\n\t\t\t\t}\n\n\t\t\t\tresult = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n\t\t\t\tif (lastKernel.output.length === 1) {\n\t\t\t\t\treturn result;\n\t\t\t\t} else if (lastKernel.output.length === 2) {\n\t\t\t\t\treturn utils.splitArray(result, lastKernel.output[0]);\n\t\t\t\t} else if (lastKernel.output.length === 3) {\n\t\t\t\t\tvar cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n\t\t\t\t\treturn cube.map(function (x) {\n\t\t\t\t\t\treturn utils.splitArray(x, lastKernel.output[0]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: 'getGPURunner',\n\t\tvalue: function getGPURunner() {\n\t\t\tif (typeof WebGL2RenderingContext !== 'undefined') return WebGL2Runner;\n\t\t\tif (typeof WebGLRenderingContext !== 'undefined') return WebGLRunner;\n\t\t}\n\n\t\t/**\n   *\n   * Adds additional functions, that the kernel may call.\n   *\n   * @name addFunction\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Function|String} fn - JS Function to do conversion\n   * @param {String[]|Object} paramTypes - Parameter type array, assumes all parameters are 'float' if null\n   * @param {String} returnType - The return type, assumes 'float' if null\n   *\n   * @returns {GPU} returns itself\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(fn, paramTypes, returnType) {\n\t\t\tthis._runner.functionBuilder.addFunction(null, fn, paramTypes, returnType);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   *\n   * Adds additional native functions, that the kernel may call.\n   *\n   * @name addNativeFunction\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {String} name - native function name, used for reverse lookup\n   * @param {String} nativeFunction - the native function implementation, as it would be defined in it's entirety\n   *\n   * @returns {GPU} returns itself\n   *\n   */\n\n\t}, {\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(name, nativeFunction) {\n\t\t\tthis._runner.functionBuilder.addNativeFunction(name, nativeFunction);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   *\n   * Return the current mode in which gpu.js is executing.\n   * @name getMode\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {String} The current mode, \"cpu\", \"webgl\", etc.\n   *\n   */\n\n\t}, {\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn this._runner.getMode();\n\t\t}\n\n\t\t/**\n   *\n   * Return TRUE, if browser supports WebGl AND Canvas\n   *\n   * @name get isWebGlSupported\n   * @function\n   * @memberOf GPU#\n   *\n   * Note: This function can also be called directly `GPU.isWebGlSupported()`\n   *\n   * @returns {Boolean} TRUE if browser supports webGl\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGlSupported',\n\t\tvalue: function isWebGlSupported() {\n\t\t\treturn utils.isWebGlSupported();\n\t\t}\n\n\t\t/**\n   *\n   * Return the canvas object bound to this gpu instance.\n   *\n   * @name getCanvas\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {Object} Canvas object if present\n   *\n   */\n\n\t}, {\n\t\tkey: 'getCanvas',\n\t\tvalue: function getCanvas() {\n\t\t\treturn this._canvas;\n\t\t}\n\n\t\t/**\n   *\n   * Return the webGl object bound to this gpu instance.\n   *\n   * @name getWebGl\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {Object} WebGl object if present\n   *\n   */\n\n\t}, {\n\t\tkey: 'getWebGl',\n\t\tvalue: function getWebGl() {\n\t\t\treturn this._webGl;\n\t\t}\n\t}]);\n\n\treturn GPU;\n}(GPUCore);\n\n;\n\n// This ensure static methods are \"inherited\"\n// See: https://stackoverflow.com/questions/5441508/how-to-inherit-static-methods-from-base-class-in-javascript\nObject.assign(GPU, GPUCore);\n\nmodule.exports = GPU;","'use strict';\n\nvar utils = require('./utils');\nmodule.exports = function alias(name, fn) {\n\tvar fnString = fn.toString();\n\treturn new Function('return function ' + name + ' (' + utils.getParamNamesFromString(fnString).join(', ') + ') {' + utils.getFunctionBodyFromString(fnString) + '}')();\n};","'use strict';\n\nvar GPU = require('./core/gpu');\nvar alias = require('./core/alias');\nvar utils = require('./core/utils');\nvar Input = require('./core/input');\nvar Texture = require('./core/texture');\n\nvar CPUFunctionBuilder = require('./backend/cpu/function-builder');\nvar CPUFunctionNode = require('./backend/cpu/function-node');\nvar CPUKernel = require('./backend/cpu/kernel');\nvar CPURunner = require('./backend/cpu/runner');\n\nvar WebGLFunctionBuilder = require('./backend/web-gl/function-builder');\nvar WebGLFunctionNode = require('./backend/web-gl/function-node');\nvar WebGLKernel = require('./backend/web-gl/kernel');\nvar WebGLRunner = require('./backend/web-gl/runner');\n\nvar WebGL2FunctionBuilder = require('./backend/web-gl2/function-builder');\nvar WebGL2FunctionNode = require('./backend/web-gl2/function-node');\nvar WebGL2Kernel = require('./backend/web-gl2/kernel');\nvar WebGL2Runner = require('./backend/web-gl2/runner');\n\nGPU.alias = alias;\nGPU.utils = utils;\nGPU.Texture = Texture;\nGPU.Input = Input;\nGPU.input = function (value, size) {\n\treturn new Input(value, size);\n};\n\nGPU.CPUFunctionBuilder = CPUFunctionBuilder;\nGPU.CPUFunctionNode = CPUFunctionNode;\nGPU.CPUKernel = CPUKernel;\nGPU.CPURunner = CPURunner;\n\nGPU.WebGLFunctionBuilder = WebGLFunctionBuilder;\nGPU.WebGLFunctionNode = WebGLFunctionNode;\nGPU.WebGLKernel = WebGLKernel;\nGPU.WebGLRunner = WebGLRunner;\n\nGPU.WebGL2FunctionBuilder = WebGL2FunctionBuilder;\nGPU.WebGL2FunctionNode = WebGL2FunctionNode;\nGPU.WebGL2Kernel = WebGL2Kernel;\nGPU.WebGL2Runner = WebGL2Runner;\n\nif (typeof module !== 'undefined') {\n\tmodule.exports = GPU;\n}\nif (typeof window !== 'undefined') {\n\twindow.GPU = GPU;\n}","import GPU from 'gpu.js';\r\nlet gpuInstance = null;\r\n\r\nexport default function(fn, settings) {\r\n  if (gpuInstance === null) {\r\n    setup(new GPU());\r\n  }\r\n  if (settings.hasOwnProperty('map')) {\r\n    return gpuInstance.createKernelMap(settings.map, fn, settings)\r\n      .setOutputToTexture(true);\r\n  } else {\r\n    return gpuInstance.createKernel(fn, settings)\r\n      .setOutputToTexture(true);\r\n  }\r\n};\r\n\r\nexport function setup(value) {\r\n  gpuInstance = value;\r\n}","export default function zeros(size) {\r\n  return new Float32Array(size);\r\n}\r\n","import zeros from './zeros';\r\n\r\nexport default function zeros2D(width, height) {\r\n  const result = new Array(height);\r\n  for (let y = 0; y < height; y++) {\r\n    result[y] = zeros(width);\r\n  }\r\n  return result;\r\n}","import zeros2D from '../utilities/zeros-2d';\r\n\r\nexport default class Base {\r\n  static get defaults() {\r\n    return {\r\n      width: 1,\r\n      height: 1,\r\n      weights: null,\r\n      deltas: null,\r\n      name: null\r\n    };\r\n  }\r\n\r\n  constructor(settings = {}) {\r\n    //size\r\n    this.width = null;\r\n    this.height = null;\r\n\r\n    //what matters :P\r\n    this.deltas = null;\r\n    this.weights = null;\r\n\r\n    this.praxis = null;\r\n    if (this.constructor !== Base) {\r\n      Object.assign(this, Base.defaults, settings);\r\n    }\r\n    Object.assign(this, this.constructor.defaults, settings);\r\n\r\n    // special settings\r\n    if (settings.hasOwnProperty('praxis')) {\r\n      this.praxis = settings.praxis(this);\r\n    }\r\n  }\r\n\r\n  /*\r\n  get weights() {\r\n    return this._weights;\r\n  }\r\n\r\n  set weights(value) {\r\n    if (value) {\r\n      if (value[0].length !== this.width) {\r\n        throw new Error(`${this.constructor.name}.weights being set with improper value width`);\r\n      }\r\n      if (value.length !== this.height) {\r\n        throw new Error(`${this.constructor.name}.weights being set with improper value height`);\r\n      }\r\n    }\r\n    this._weights = value;\r\n  }\r\n\r\n  get deltas() {\r\n    return this._deltas;\r\n  }\r\n\r\n  set deltas(value) {\r\n    if (value) {\r\n      if (value[0].length !== this.width) {\r\n        throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\r\n      }\r\n      if (value.length !== this.height) {\r\n        throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\r\n      }\r\n    }\r\n    this._deltas = value;\r\n  }*/\r\n\r\n  validate() {\r\n    if (isNaN(this.height)) {\r\n      throw new Error(`${this.constructor.name} layer height is not a number`)\r\n    }\r\n    if (isNaN(this.width)) {\r\n      throw new Error(`${this.constructor.name} layer width is not a number`)\r\n    }\r\n    if (this.height < 1) {\r\n      throw new Error(`${this.constructor.name} layer height is less than 1`);\r\n    }\r\n    if (this.width < 1) {\r\n      throw new Error(`${this.constructor.name} layer width is less than 1`);\r\n    }\r\n  }\r\n\r\n  setupKernels() {}\r\n  reuseKernels(layer) {\r\n    if (layer.width !== this.width) {\r\n      throw new Error(`${this.constructor.name} kernel width mismatch ${layer.width} is not ${this.width}`);\r\n    }\r\n    if (layer.height !== this.height) {\r\n      throw new Error(`${this.constructor.name} kernel width mismatch ${layer.height} is not ${this.height}`);\r\n    }\r\n    if (layer.hasOwnProperty('predictKernel')) {\r\n      this.predictKernel = layer.predictKernel;\r\n    }\r\n    if (layer.hasOwnProperty('compareKernel')) {\r\n      this.compareKernel = layer.compareKernel;\r\n    }\r\n    this.praxis = layer.praxis;\r\n  }\r\n\r\n  predict() {\r\n    throw new Error('`predict` not defined on Base layer');\r\n  }\r\n\r\n  compare(previousLayer, nextLayer) {\r\n    throw new Error('`compare` not defined on Base layer');\r\n  }\r\n\r\n  learn(previousLayer, nextLayer, learningRate) {\r\n    this.weights = this.praxis.run(previousLayer, nextLayer, learningRate);\r\n    this.deltas = zeros2D(this.width, this.height);\r\n  }\r\n\r\n  toArray() {\r\n    return this.weights.toArray();\r\n  }\r\n\r\n  toJSON() {\r\n    const jsonLayer = {};\r\n    const { defaults, name } = this.constructor;\r\n    if (this.constructor !== Base) {\r\n      Object.assign(defaults, Base.defaults, defaults);\r\n    }\r\n    const keys = Object.keys(defaults);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (key === 'deltas') continue;\r\n      if (key === 'name' && this[key] === null) continue;\r\n      jsonLayer[key] = this[key];\r\n    }\r\n    jsonLayer.type = name;\r\n    return jsonLayer;\r\n  }\r\n}","import makeKernel from '../utilities/make-kernel';\r\nimport Base from './base';\r\nimport zeros2D from '../utilities/zeros-2d';\r\n\r\nexport default class Add extends Base {\r\n  constructor(inputLayer1, inputLayer2) {\r\n    super();\r\n    this.inputLayer1 = inputLayer1;\r\n    this.inputLayer2 = inputLayer2;\r\n    this.width = this.inputLayer1.width;\r\n    this.height = this.inputLayer1.height;\r\n    this.validate();\r\n    this.weights = zeros2D(this.width, this.height);\r\n    this.deltas = zeros2D(this.width, this.height);\r\n  }\r\n\r\n  validate() {\r\n    super.validate();\r\n    if (this.inputLayer1.width !== this.inputLayer2.width) {\r\n      throw new Error(`Layer width mismatch of ${this.inputLayer1.width} and ${this.inputLayer2.width}`);\r\n    }\r\n\r\n    if (this.inputLayer1.height !== this.inputLayer2.height) {\r\n      throw new Error(`Layer height mismatch of ${this.inputLayer1.height} and ${this.inputLayer2.height}`);\r\n    }\r\n  }\r\n\r\n  setupKernels() {\r\n    this.predictKernel = makeKernel(predict, {\r\n      output: [this.width, this.height]\r\n    });\r\n  }\r\n\r\n  predict() {\r\n    this.weights = this.predictKernel(this.inputLayer1.weights, this.inputLayer2.weights);\r\n  }\r\n\r\n  compare(previousLayer, nextLayer, learningRate) {\r\n    this.inputLayer1.deltas = this.deltas;\r\n    this.inputLayer2.deltas = this.deltas;\r\n  }\r\n}\r\n\r\nexport function predict(inputWeights1, inputWeights2) {\r\n  return inputWeights1[this.thread.y][this.thread.x] + inputWeights2[this.thread.y][this.thread.x];\r\n}","export function setStride(layer, settings) {\r\n  const defaults = layer.constructor.defaults;\r\n  if (settings.hasOwnProperty('stride')) {\r\n    layer.strideX = settings.stride;\r\n    layer.strideY = settings.stride;\r\n  } else {\r\n    if (settings.hasOwnProperty('strideX')) {\r\n      layer.strideX = settings.strideX;\r\n    } else {\r\n      layer.strideX = defaults.stride;\r\n    }\r\n\r\n    if (settings.hasOwnProperty('strideY')) {\r\n      layer.strideY = settings.strideY;\r\n    } else {\r\n      layer.strideY = defaults.stride;\r\n    }\r\n  }\r\n}\r\n\r\nexport function setPadding(layer, settings) {\r\n  const defaults = layer.constructor.defaults;\r\n  if (settings.hasOwnProperty('padding')) {\r\n    layer.paddingX = settings.padding;\r\n    layer.paddingY = settings.padding;\r\n  } else {\r\n    if (settings.hasOwnProperty('paddingX')) {\r\n      layer.paddingX = settings.paddingX;\r\n    } else {\r\n      layer.paddingX = defaults.padding;\r\n    }\r\n\r\n    if (settings.hasOwnProperty('paddingY')) {\r\n      layer.paddingY = settings.paddingY;\r\n    } else {\r\n      layer.paddingY = defaults.padding;\r\n    }\r\n  }\r\n}\r\n","import Base from './base';\r\nimport makeKernel from '../utilities/make-kernel';\r\nimport { setStride, setPadding } from \"../utilities/layer-setup\"\r\nexport default class Convolution extends Base {\r\n  static get defaults() {\r\n    return {\r\n      stride: 0,\r\n      padding: 0,\r\n      bias: 0,\r\n      filterCount: 1,\r\n      filterWidth: 0,\r\n      filterHeight: 0\r\n    };\r\n  }\r\n\r\n  constructor(settings, inputLayer) {\r\n    super(settings);\r\n\r\n    this.stride = null;\r\n    this.strideX = null;\r\n    this.strideY = null;\r\n    setStride(this, settings);\r\n\r\n    this.padding = null;\r\n    this.paddingX = null;\r\n    this.paddingY = null;\r\n    setPadding(this, settings);\r\n\r\n    this.filterCount = settings.filterCount;\r\n    this.filterWidth = settings.filterWidth;\r\n    this.filterHeight = settings.filterHeight;\r\n\r\n    this.width = Math.floor((inputLayer.width + (this.paddingX * 2) - this.filterWidth) / this.strideX + 1);\r\n    this.height = Math.floor((inputLayer.height + (this.paddingY * 2) - this.filterHeight) / this.strideY + 1);\r\n    this.depth = this.filterCount;\r\n\r\n    this.bias = settings.bias;\r\n\r\n    this.filters = null;\r\n    this.filterDeltas = null;\r\n\r\n    this.learnFilters = null;\r\n    this.learnInputs = null;\r\n    this.inputLayer = inputLayer;\r\n    this.validate();\r\n  }\r\n\r\n  setupKernels() {\r\n    this.predictKernel = makeKernel(predict, {\r\n      constants: {\r\n        inputWidth: this.inputLayer.width,\r\n        inputHeight: this.inputLayer.height,\r\n        inputDepth: this.inputLayer.depth,\r\n        strideX: this.strideX,\r\n        strideY: this.strideY,\r\n        paddingX: this.paddingX,\r\n        paddingY: this.paddingY,\r\n        filterCount: this.filterCount,\r\n        filterWidth: this.filterWidth,\r\n        filterHeight: this.filterHeight\r\n      },\r\n      output: [this.width, this.height, this.depth]\r\n    });\r\n\r\n    this.compareKernel = makeKernel(compare, {\r\n      output: [this.width, this.height, this.depth]\r\n    });\r\n\r\n    this.compareInputsKernel = makeKernel(compareInputs, {\r\n      output: [this.inputLayer.width, this.inputLayer.height, this.inputLayer.depth]\r\n    });\r\n  }\r\n\r\n  predict() {\r\n    this.weights = this.predictKernel(this.inputLayer.weights, this.filters, this.biases);\r\n  }\r\n\r\n  compare() {\r\n    this.deltas = this.compareKernel(this.inputLayer.weights, this.deltas);\r\n    this.inputLayer.deltas = this.compareInputsKernel(this.filters, this.inputLayer.deltas);\r\n  }\r\n}\r\n\r\nexport function predict(inputs, filters, biases) {\r\n  const x = (((this.thread.x / this.output.x) * this.constants.inputWidth) * this.constants.strideX) - this.constants.paddingX;\r\n  const y = (((this.thread.y / this.output.y) * this.constants.inputHeight) * this.constants.strideY) - this.constants.paddingY;\r\n\r\n  // convolve centered at this particular location\r\n  let sum = 0;\r\n  for (let filterY = 0; filterY < this.constants.filterHeight; filterY++) {\r\n    // coordinates in the original input array coordinates\r\n    let inputY = filterY + y;\r\n    for (let filterX = 0; filterX < this.constants.filterWidth; filterX++) {\r\n      let inputX = filterX + x;\r\n      if (\r\n        inputY >= 0\r\n        && inputY < this.constants.inputHeight\r\n        && inputX >= 0\r\n        && inputX < this.constants.inputWidth\r\n      ) {\r\n        for (let inputIndex = 0; inputIndex < this.constants.inputDepth; inputIndex++) {\r\n          for (let filterIndex = 0; filterIndex < this.constants.filterCount; filterIndex++) {\r\n            sum += filters[filterIndex][filterY][filterX] * inputs[inputIndex][inputY][inputX];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return sum + biases[this.thread.z];\r\n}\r\n\r\nexport function compare(inputs, deltas) {\r\n  let sum = 0;\r\n  let delta = deltas[this.thread.z][this.thread.y * this.constants.paddingY][this.thread.x * this.constants.paddingX];\r\n  let inputXMax = this.constants.inputWidth + this.constants.paddingX;\r\n  let inputYMax = this.constants.inputHeight + this.constants.paddingY;\r\n  for (let inputY = this.thread.y - this.constants.paddingY; inputY < inputYMax; inputY += this.constants.strideY) {\r\n    for (let inputX = this.thread.x - this.constants.paddingX; inputX < inputXMax; inputX += this.constants.strideX) {\r\n      if (\r\n        inputY >= 0\r\n        && inputY < this.constants.inputHeight\r\n        && inputX >= 0\r\n        && inputX < this.constants.inputWidth\r\n      ) {\r\n        for (let inputIndex = 0; inputIndex < this.constants.inputDepth; inputIndex++) {\r\n          sum += inputs[inputIndex][inputY][inputX] * delta;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function compareInputs(filters, deltas) {\r\n  let sum = 0;\r\n  for (let filterY = 0; filterY <= this.thread.y; filterY++) {\r\n    let offsetY = this.thread.y - filterY;\r\n    for (let filterX = 0; filterX <= this.thread.x; filterX++) {\r\n      let offsetX = this.thread.x - filterX;\r\n      for (let filterIndex = 0; filterIndex < this.constants.filterCount; filterIndex++) {\r\n        sum += filters[filterIndex][offsetY][offsetX] * deltas[filterIndex][filterY][filterX];\r\n      }\r\n      offsetX--;\r\n    }\r\n    offsetY--;\r\n  }\r\n  return sum;\r\n}","import Base from './base';\r\nimport makeKernel from '../utilities/make-kernel';\r\n\r\nexport default class Dropout extends Base {\r\n  static get defaults() {\r\n    return {\r\n      width: 0,\r\n      height: 0,\r\n      depth: 0,\r\n      probability: 0.5,\r\n      isTraining: false\r\n    };\r\n  };\r\n\r\n  constructor(settings, inputLayer) {\r\n    super(settings);\r\n    this.inputLayer = inputLayer;\r\n    this.validate();\r\n  }\r\n\r\n  setupKernels() {\r\n    if (this.isTraining) {\r\n      this.predictKernel = makeKernel(trainingPredict, {\r\n        output: [this.width, this.height, this.depth]\r\n      });\r\n    } else {\r\n      this.predictKernel = makeKernel(predict, {\r\n        output: [this.width, this.height, this.depth]\r\n      });\r\n    }\r\n  }\r\n\r\n  predict() {\r\n    this.weights = this.predictKernel(this.inputLayer.weights);\r\n  }\r\n\r\n  compare() {\r\n    this.deltas = this.learnKernel(this.deltas);\r\n  }\r\n}\r\n\r\n//TODO: implement random in glsl in gpu.js\r\nexport function trainingPredict(inputs) {\r\n  if (Math.random() < this.constants.probability) {\r\n    return 0;\r\n  } else {\r\n    return inputs[this.thread.y][this.thread.x];\r\n  }\r\n}\r\n\r\nexport function predict(inputs) {\r\n  return inputs[this.thread.y][this.thread.x] * this.constants.probability;\r\n}\r\n","import {\r\n  add,\r\n  multiply,\r\n  random,\r\n  sigmoid\r\n} from './index';\r\n\r\nexport default function feedForward(settings, input) {\r\n  const { height } = settings;\r\n  const weights = random({ name: 'weights', height, width: input.height });\r\n  const biases = random({ name: 'biases', height });\r\n\r\n  return sigmoid(\r\n    add(\r\n      multiply(\r\n        weights,\r\n        input\r\n      ),\r\n      biases\r\n    )\r\n  );\r\n}","import Base from './base';\r\nimport makeKernel from '../utilities/make-kernel';\r\n\r\nexport default class FullyConnected extends Base {\r\n  constructor(settings, inputLayer) {\r\n    super(settings);\r\n\r\n    if (this.inputLayer.depth !== 1) {\r\n      //TODO: make go away and handle 3d, should be fairly easy\r\n      throw new Error('depth of 1 only supported at this time');\r\n    }\r\n\r\n    this.inputLayer = inputLayer;\r\n    this.learnInputsKernel = null;\r\n    this.learnFiltersKernel = null;\r\n    this.learnBiasKernel = null;\r\n\r\n    const { width, height, depth } = inputLayer;\r\n    this.width = width * height * depth;\r\n    this.validate();\r\n  }\r\n\r\n  setupKernels() {\r\n    this.predictKernel = makeKernel(predict, {\r\n      output: [this.width],\r\n      constants: {\r\n        inputDepth: this.inputLayer.depth,\r\n        inputHeight: this.inputLayer.height,\r\n        inputWidth: this.inputLayer.width\r\n      }\r\n    });\r\n\r\n    this.learnInputsKernel = makeKernel(learnInputs, {\r\n      output: [this.width],\r\n      constants: {\r\n        inputDepth: this.inputLayer.depth,\r\n        inputHeight: this.inputLayer.height,\r\n        inputWidth: this.inputLayer.width\r\n      }\r\n    });\r\n\r\n    this.learnFiltersKernel = makeKernel(learnFilters, {\r\n      output: [this.width],\r\n      constants: {\r\n        inputDepth: this.inputLayer.depth,\r\n        inputHeight: this.inputLayer.height,\r\n        inputWidth: this.inputLayer.width\r\n      }\r\n    });\r\n\r\n    this.learnBiasesKernel = makeKernel(learnBiases, {\r\n      output: [this.width],\r\n      constants: {\r\n        inputDepth: this.inputLayer.depth,\r\n        inputHeight: this.inputLayer.height,\r\n        inputWidth: this.inputLayer.width\r\n      }\r\n    });\r\n\r\n    this.learnKernel = () => {\r\n      this.learnInputsKernel(this.filters, this.deltas);\r\n      this.learnFiltersKernel(this.inputLayer.outputs, this.deltas);\r\n      this.learnBiasKernel(this.biases, this.deltas);\r\n    };\r\n  }\r\n\r\n  predict() {\r\n    this.weights = this.predictKernel(this.inputLayer.weights, this.filters, this.biases);\r\n  }\r\n\r\n  compare() {\r\n    this.filterDeltas = this.learnFilters(this.inputLayer, this.deltas);\r\n    this.biases = this.learnBiasesKernel(this.bias, this.deltas);\r\n    this.deltas = this.learnInputs(this.filters);\r\n  }\r\n}\r\n\r\nexport function predict(inputs, filters, biases) {\r\n  let output = 0;\r\n  for (let y = 0; y < this.constants.inputHeight; y++) {\r\n    for (let x = 0; x < this.constants.inputWidth; x++) {\r\n      output += inputs[y][x] * filters[y][x];\r\n    }\r\n  }\r\n  return output + biases[this.thread.x];\r\n}\r\n\r\nexport function learnInputs(filters, weights) {\r\n  let filterDelta = 0;\r\n  for (let y = 0; y < this.constants.inputWidth; y++) {\r\n    filterDelta += filters[this.thread.x][y] * weights[this.thread.x];\r\n  }\r\n  return filterDelta;\r\n}\r\n\r\nexport function learnFilters(inputs, weights) {\r\n  //0 here should probably be depth\r\n  return inputs[0][this.thread.y] * weights[this.thread.x];\r\n}\r\n\r\nexport function learnBiases(biases, deltas) {\r\n  return biases[this.output.x] * deltas[this.output.x];\r\n}","import {\r\n  add,\r\n  negative,\r\n  multiply,\r\n  multiplyElement,\r\n  ones,\r\n  sigmoid,\r\n  random,\r\n  tanh,\r\n  zeros\r\n} from './';\r\n\r\nexport default (settings, recurrentInput, input) => {\r\n  const { height } = settings;\r\n  const updateGateWeights = random({ height, width: input.height });\r\n  const updateGatePeepholes = random({ width: height, height });\r\n  const updateGateBias = zeros({ height });\r\n  const updateGate = sigmoid(\r\n    add(\r\n      add(\r\n        multiply(\r\n          updateGateWeights,\r\n          input\r\n        ),\r\n        multiply(\r\n          updateGatePeepholes,\r\n          recurrentInput\r\n        )\r\n      ),\r\n      updateGateBias\r\n    )\r\n  );\r\n\r\n  const resetGateWeights = random({ height, width: input.height });\r\n  const resetGatePeepholes = random({ width: height, height });\r\n  const resetGateBias = zeros({ height });\r\n  let resetGate = sigmoid(\r\n    add(\r\n      add(\r\n        multiply(\r\n          resetGateWeights,\r\n          input\r\n        ),\r\n        multiply(\r\n          resetGatePeepholes,\r\n          recurrentInput\r\n        )\r\n      ),\r\n      resetGateBias\r\n    )\r\n  );\r\n\r\n  const cellWeights = random({ height, width: input.height });\r\n  const cellPeepholes = random({ width: height, height });\r\n  const cellBias = zeros({ height });\r\n  let cell = tanh(\r\n    add(\r\n      add(\r\n        multiply(\r\n          cellWeights,\r\n          input\r\n        ),\r\n        multiply(\r\n          cellPeepholes,\r\n          multiplyElement(\r\n            resetGate,\r\n            recurrentInput\r\n          )\r\n        )\r\n      ),\r\n      cellBias\r\n    )\r\n  );\r\n\r\n  // compute hidden state as gated, saturated cell activations\r\n  // negate updateGate\r\n  return add(\r\n    multiplyElement(\r\n      add(\r\n        ones(updateGate.rows, updateGate.columns),\r\n        negative(updateGate)\r\n      ),\r\n      cell\r\n    ),\r\n    multiplyElement(\r\n      recurrentInput,\r\n      updateGate\r\n    )\r\n  );\r\n}","import Base from './base';\r\nimport zeros2D from '../utilities/zeros-2d';\r\n\r\nexport default class Input extends Base {\r\n  constructor(settings) {\r\n    super(settings);\r\n    if (this.width === 1) {\r\n      this.predict = this.predict1D;\r\n    }\r\n    this.validate();\r\n    this.weights = null;\r\n    this.deltas = zeros2D(this.width, this.height);\r\n  }\r\n\r\n  predict(inputs) {\r\n    this.weights = inputs;\r\n  }\r\n\r\n  predict1D(inputs) {\r\n    const weights = [];\r\n    for (let x = 0; x < inputs.length; x++) {\r\n      weights.push([inputs[x]]);\r\n    }\r\n    this.weights = weights;\r\n  }\r\n\r\n  compare() {}\r\n  learn() {\r\n    this.deltas = zeros2D(this.width, this.height);\r\n  }\r\n\r\n  toJSON() {\r\n    const jsonLayer = {};\r\n    const { defaults, name } = this.constructor;\r\n    const keys = Object.keys(defaults);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      switch (key) {\r\n        case 'deltas':\r\n        case 'weights':\r\n          continue;\r\n      }\r\n      jsonLayer[key] = this[key];\r\n    }\r\n    jsonLayer.type = name;\r\n    return jsonLayer;\r\n  }\r\n}","/**\r\n * Leaky Relu Activation, aka Leaky Rectified Linear Unit Activation\r\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\r\n * @param weight\r\n * @returns {number}\r\n */\r\nexport function activate(weight) {\r\n  return weight > 0 ? weight : 0.01 * weight;\r\n}\r\n\r\n/**\r\n * Leaky Relu derivative\r\n * @param weight\r\n * @param delta\r\n * @returns {number}\r\n */\r\nexport function measure(weight, error) {\r\n  return weight > 0 ? error : 0.01 * error;\r\n}","import Base from './base';\r\nimport makeKernel from '../utilities/make-kernel';\r\nimport { activate, measure } from '../activation/leaky-relu';\r\n\r\nexport default class LeakyRelu extends Base {\r\n  constructor(inputLayer) {\r\n    super();\r\n    this.inputLayer = inputLayer;\r\n    const { width, height, depth } = inputLayer;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.depth = depth;\r\n    this.validate();\r\n  }\r\n  setupKernels() {\r\n    this.predictKernel = makeKernel(predict, {\r\n      functions: [activate]\r\n    });\r\n\r\n    this.learnKernel = makeKernel(learn, {\r\n      functions: [measure]\r\n    });\r\n  }\r\n\r\n  predict() {\r\n    this.weights = this.predictKernel(this.inputLayer.weights);\r\n  }\r\n\r\n  compare() {\r\n    this.deltas = this.learnKernel(this.weights, this.deltas);\r\n  }\r\n}\r\n\r\nexport function predict(inputs) {\r\n  return activate(inputs[this.thread.y][this.thread.x]);\r\n}\r\n\r\nexport function learn(weights, deltas) {\r\n  return measure(weights[this.thread.y][this.thread.x], deltas[this.thread.y][this.thread.x]);\r\n}","import {\r\n  add,\r\n  multiply,\r\n  multiplyElement,\r\n  random,\r\n  sigmoid,\r\n  tanh,\r\n  zeros\r\n} from './index';\r\n\r\nexport default (settings, recurrentInput, input) => {\r\n  const { height } = settings;\r\n  const inputGateWeights = random({ height, width: input.height });\r\n  const inputGatePeepholes = random({ width: height, height });\r\n  const inputGateBias = zeros({ height });\r\n  const inputGate = sigmoid(\r\n    add(\r\n      add(\r\n        multiply(\r\n          inputGateWeights,\r\n          input\r\n        ),\r\n        multiply(\r\n          inputGatePeepholes,\r\n          recurrentInput\r\n        )\r\n      ),\r\n      inputGateBias\r\n    )\r\n  );\r\n\r\n  const forgetGateWeights = random({ height, width: input.height });\r\n  const forgetGatePeepholes = random({ width: height, height });\r\n  const forgetGateBias = zeros({ height });\r\n  const forgetGate = sigmoid(\r\n    add(\r\n      add(\r\n        multiply(\r\n          forgetGateWeights,\r\n          input\r\n        ),\r\n        multiply(\r\n          forgetGatePeepholes,\r\n          recurrentInput\r\n        )\r\n      ),\r\n      forgetGateBias\r\n    )\r\n  );\r\n\r\n  const outputGateWeights = random({ height, width: input.height });\r\n  const outputGatePeepholes = random({ width: height, height });\r\n  const outputGateBias = zeros({ height });\r\n  const outputGate = sigmoid(\r\n    add(\r\n      add(\r\n        multiply(\r\n          outputGateWeights,\r\n          input\r\n        ),\r\n        multiply(\r\n          outputGatePeepholes,\r\n          recurrentInput\r\n        )\r\n      ),\r\n      outputGateBias\r\n    )\r\n  );\r\n\r\n  const memoryWeights = random({ height, width: input.height });\r\n  const memoryPeepholes = random({ width: height, height });\r\n  const memoryBias = zeros({ height });\r\n  const memory = tanh(\r\n    add(\r\n      add(\r\n        multiply(\r\n          memoryWeights,\r\n          input\r\n        ),\r\n        multiply(\r\n          memoryPeepholes,\r\n          recurrentInput\r\n        )\r\n      ),\r\n      memoryBias\r\n    )\r\n  );\r\n\r\n  // compute new cell activation\r\n  const retainCell = multiplyElement(forgetGate, input); // what do we keep from cell\r\n  const writeCell = multiplyElement(inputGate, memory); // what do we write to cell\r\n  const cell = add(retainCell, writeCell); // new cell contents\r\n\r\n  // compute hidden state as gated, saturated cell activations\r\n  return multiplyElement(\r\n    outputGate,\r\n    tanh(cell)\r\n  );\r\n}","import makeKernel from '../utilities/make-kernel';\r\nimport Base from './base';\r\nimport zeros2D from '../utilities/zeros-2d';\r\n\r\nexport default class Multiply extends Base {\r\n  constructor(inputLayer1, inputLayer2) {\r\n    super();\r\n    this.inputLayer1 = inputLayer1;\r\n    this.inputLayer2 = inputLayer2;\r\n    this.compareKernel1 = null;\r\n    this.compareKernel2 = null;\r\n\r\n    this.width = inputLayer2.width;\r\n    this.height = inputLayer1.height;\r\n    this.validate();\r\n    this.weights = zeros2D(this.width, this.height);\r\n    this.deltas = zeros2D(this.width, this.height);\r\n  }\r\n\r\n  validate() {\r\n    super.validate();\r\n    if (this.inputLayer1.width !== this.inputLayer2.height) {\r\n      throw new Error(`Layer width mismatch of ${this.inputLayer1.width} and ${this.inputLayer2.height}`);\r\n    }\r\n  }\r\n\r\n  setupKernels() {\r\n    this.predictKernel = makeKernel(predict, {\r\n      output: [this.width, this.height],\r\n      constants: {\r\n        size: this.inputLayer2.height\r\n      }\r\n    });\r\n    this.compareKernel1 = makeKernel(compareFromX, {\r\n      output: [this.inputLayer1.width, this.inputLayer1.height],\r\n      constants: {\r\n        size: this.inputLayer2.width\r\n      }\r\n    });\r\n    this.compareKernel2 = makeKernel(compareFromY, {\r\n      output: [this.inputLayer2.width, this.inputLayer2.height],\r\n      constants: {\r\n        size: this.inputLayer1.height\r\n      }\r\n    });\r\n    this.compareKernel2.myName = this.inputLayer2.constructor.name;\r\n  }\r\n  reuseKernels(layer) {\r\n    super.reuseKernels(layer);\r\n    this.compareKernel1 = layer.compareKernel1;\r\n    this.compareKernel2 = layer.compareKernel2;\r\n  }\r\n\r\n  predict() {\r\n    this.weights = this.predictKernel(this.inputLayer1.weights, this.inputLayer2.weights);\r\n  }\r\n\r\n  compare() {\r\n    const newDeltas1 = this.compareKernel1(this.deltas, this.inputLayer1.deltas, this.inputLayer2.weights);\r\n    const newDeltas2 = this.compareKernel2(this.deltas, this.inputLayer2.deltas, this.inputLayer1.weights);\r\n    this.inputLayer2.deltas = newDeltas2;\r\n    this.inputLayer1.deltas = newDeltas1;\r\n  }\r\n}\r\n\r\nexport function predict(weights1, weights2) {\r\n  let sum = 0;\r\n  for(let i = 0; i < this.constants.size; i++) {\r\n    sum += weights1[this.thread.y][i] * weights2[i][this.thread.x];\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function compareFromX(deltas, inputDeltas, inputWeights) {\r\n  let sum = inputDeltas[this.thread.y][this.thread.x];\r\n  for(let i = 0; i < this.constants.size; i++) {\r\n    sum += deltas[this.thread.y][i] * inputWeights[this.thread.x][i];\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function compareFromY(deltas, inputDeltas, inputWeights) {\r\n  let sum = inputDeltas[this.thread.y][this.thread.x];\r\n  for(let i = 0; i < this.constants.size; i++) {\r\n    sum += deltas[i][this.thread.x] * inputWeights[i][this.thread.y];\r\n  }\r\n  return sum;\r\n}","export default function randomWeight() {\r\n  return Math.random() * 0.4 - 0.2;\r\n}","import randomWeight from './random-weight';\r\n\r\nexport default function randos(size) {\r\n  let array = new Float32Array(size);\r\n  for (let i = 0; i < size; i++) {\r\n    array[i] = randomWeight();\r\n  }\r\n  return array;\r\n}\r\n","import randos from './randos';\r\n\r\nexport default function randos2D(width, height) {\r\n  const result = new Array(height);\r\n  for (let y = 0; y < height; y++) {\r\n    result[y] = randos(width);\r\n  }\r\n  return result;\r\n}","import makeKernel from '../utilities/make-kernel';\r\nimport Base from './base';\r\nimport randos2D from \"../utilities/randos-2d\";\r\nimport zeros2D from \"../utilities/zeros-2d\";\r\n\r\nexport default class MultiplyElement extends Base {\r\n  constructor(inputLayer1, inputLayer2) {\r\n    super();\r\n    this.inputLayer1 = inputLayer1;\r\n    this.inputLayer2 = inputLayer2;\r\n\r\n    this.width = inputLayer1.width;\r\n    this.height = inputLayer1.height;\r\n    this.validate();\r\n    this.weights = zeros2D(this.width, this.height);\r\n    this.deltas = zeros2D(this.width, this.height);\r\n  }\r\n\r\n  validate() {\r\n    super.validate();\r\n    if (this.inputLayer1.width !== this.inputLayer2.width) {\r\n      throw new Error(`Layer width mismatch of ${this.inputLayer1.width} and ${this.inputLayer2.width}`);\r\n    }\r\n\r\n    if (this.inputLayer1.height !== this.inputLayer2.height) {\r\n      throw new Error(`Layer height mismatch of ${this.inputLayer1.height} and ${this.inputLayer2.height}`);\r\n    }\r\n  }\r\n\r\n  setupKernels() {\r\n    this.predictKernel = makeKernel(predict, {\r\n      output: [this.width, this.height]\r\n    });\r\n\r\n    this.compareKernel = makeKernel(compare, {\r\n      output: [this.width, this.height]\r\n    });\r\n  }\r\n\r\n  predict() {\r\n    this.weights = this.predictKernel(this.weights, this.inputLayer.weights);\r\n  }\r\n\r\n  compare() {\r\n    this.deltas = this.compareKernel(this.weights, this.deltas);\r\n  }\r\n}\r\n\r\nfunction predict(weights, inputLayerWeights) {\r\n  return weights[this.thread.y][this.thread.x] * inputLayerWeights[this.thread.y][this.thread.x];\r\n}\r\n\r\nfunction compare(weights, deltas) {\r\n  return weights[this.thread.y][this.thread.x] * deltas[this.thread.y][this.thread.x];\r\n}","import makeKernel from '../utilities/make-kernel';\r\nimport Base from './base';\r\n\r\nexport default class Negative extends Base {\r\n  constructor(settings, inputLayer) {\r\n    super(settings);\r\n    this.inputLayer = inputLayer;\r\n    this.validate();\r\n  }\r\n\r\n  setupKernels() {\r\n    this.predictKernel = makeKernel(predict, {\r\n      output: [this.width, this.height]\r\n    });\r\n  }\r\n\r\n  predict() {\r\n    this.weights = this.predictKernel(this.inputLayer.weights);\r\n  }\r\n}\r\n\r\nfunction predict(weights) {\r\n  return -weights[this.thread.y][this.thread.x];\r\n}","export default function ones(size) {\r\n  return new Float32Array(size).fill(1);\r\n}\r\n","import ones from './ones';\r\n\r\nexport default function ones2D(width, height) {\r\n  const result = new Array(height);\r\n  for (let y = 0; y < height; y++) {\r\n    result[y] = ones(width);\r\n  }\r\n  return result;\r\n}","import ones2D from '../utilities/ones-2d';\r\nimport zeros2D from '../utilities/zeros-2d';\r\nimport Base from './base';\r\n\r\nexport default class Ones extends Base {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.validate();\r\n    this.weights = ones2D(this.width, this.height);\r\n    this.deltas = zeros2D(this.width, this.height);\r\n  }\r\n}","import { multiply, random, target } from './index';\r\nexport default (settings, inputLayer) => {\r\n  const { height } = settings;\r\n  const outputGate = random({ height, width: inputLayer.height });\r\n  const outputGateConnector = multiply(\r\n    outputGate,\r\n    inputLayer\r\n  );\r\n  return target(settings, outputGateConnector);\r\n}\r\n","import Base from './base';\r\nimport makeKernel from '../utilities/make-kernel';\r\nimport { setPadding, setStride } from '../utilities/layer-setup';\r\nexport default class Pool extends Base {\r\n  static get defaults() {\r\n    return {\r\n      stride: 0,\r\n      padding: 0,\r\n      bias: 0,\r\n      filterWidth: 0,\r\n      filterHeight: 0\r\n    };\r\n  }\r\n\r\n  constructor(settings, inputLayer) {\r\n    super(settings);\r\n    this.inputLayer = inputLayer;\r\n\r\n    setPadding(this, settings);\r\n    setStride(this, settings);\r\n\r\n    this.switchX = null;\r\n    this.switchY = null;\r\n    this.validate();\r\n  }\r\n\r\n  setupKernels() {\r\n    this.predictKernel = makeKernel(predict, {\r\n      output: [this.width, this.height, this.depth],\r\n      map: {\r\n        switchX: setSwitchX,\r\n        switchY: setSwitchY\r\n      }\r\n    });\r\n\r\n    this.learnKernel = makeKernel(learn, {\r\n      output: [this.width, this.height, this.depth]\r\n    });\r\n  }\r\n\r\n  predict() {\r\n    const weights = this.predictKernel(this.inputLayer);\r\n    this.switchX = weights.switchX;\r\n    this.switchY = weights.switchY;\r\n    return this.weights = weights;\r\n  }\r\n}\r\n\r\nexport function predict(inputs) {\r\n  const x = ((this.thread.x / this.output.x) * this.constants.inputWidth) - this.constants.paddingX;\r\n  const y = ((this.thread.y / this.output.y) * this.constants.inputHeight) - this.constants.paddingY;\r\n  let largestValue = -Infinity;\r\n  let largestX = -1;\r\n  let largestY = -1;\r\n\r\n  // convolve centered at this particular location\r\n  for (let filterY = 0; filterY < this.constants.filterHeight; filterY++) {\r\n    // coordinates in the original input array coordinates\r\n    let inputY = filterY + y;\r\n    for (let filterX = 0; filterX < this.constants.filterWidth; filterX++) {\r\n      let inputX = filterX + x;\r\n      if (\r\n        inputY >= 0\r\n        && inputY < this.constants.inputHeight\r\n        && inputX >= 0\r\n        && inputX < this.constants.inputWidth\r\n      ) {\r\n        const input = inputs[this.output.z][inputY][inputX];\r\n        if (input > largestValue) {\r\n          largestValue = input;\r\n          largestY = inputY;\r\n          largestX = inputX;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  setSwitchY(largestY);\r\n  setSwitchX(largestX);\r\n  return largestValue;\r\n}\r\n\r\nfunction setSwitchY(value) {\r\n  return value;\r\n}\r\n\r\nfunction setSwitchX(value) {\r\n  return value;\r\n}\r\n\r\nexport function learn(deltas, switchY, switchX) {\r\n  const x = Math.floor(((this.thread.x / this.output.x) * this.constants.outputWidth) - this.constants.paddingX);\r\n  const y = Math.floor(((this.thread.y / this.output.y) * this.constants.outputHeight) - this.constants.paddingY);\r\n  const deltaXIndex = switchX[y][x];\r\n  const deltaYIndex = switchY[y][x];\r\n\r\n  if (deltaXIndex !== this.thread.y) return 0;\r\n  if (deltaYIndex !== this.thread.x) return 0;\r\n\r\n  return deltas[y][x];\r\n}\r\n","import Base from './base';\r\nimport randos2D from '../utilities/randos-2d';\r\nimport zeros2D from '../utilities/zeros-2d';\r\n\r\nexport default class Random extends Base {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.validate();\r\n    this.weights = randos2D(this.width, this.height);\r\n    this.deltas = zeros2D(this.width, this.height);\r\n  }\r\n  predict() {}\r\n  compare() {}\r\n}","import { relu, add, multiply, random } from './';\r\n\r\nexport default (settings, input, recurrentInput) => {\r\n  const { height } = settings;\r\n\r\n  recurrentInput.setDimensions(1, height);\r\n\r\n  //wxh\r\n  const weight = random({ height, width: input.height });\r\n  //whh\r\n  const transition = random({ height, width: height });\r\n  //bhh\r\n  const bias = random({ height });\r\n\r\n  return relu(\r\n    add(\r\n      add(\r\n        multiply(\r\n          weight,\r\n          input\r\n        ),\r\n        multiply(\r\n          transition,\r\n          recurrentInput\r\n        )\r\n      ),\r\n      bias\r\n    )\r\n  );\r\n}","import Base from './base';\r\n\r\nclass Regression extends Base {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.validate();\r\n  }\r\n  predict() {\r\n    this.weights = this.inputs;\r\n  }\r\n\r\n  learn() {\r\n\r\n  }\r\n}\r\n\r\nfunction learn(inputs, targets) {\r\n  return inputs[this.thread.x] - targets[this.thread.x];\r\n}\r\n\r\n//TODO: handle `loss += 0.5*dy*dy;` total and sum in learn","/**\r\n * Relu Activation, aka Rectified Linear Unit Activation\r\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\r\n * @param weight\r\n * @returns {number}\r\n */\r\nexport function activate(weight) {\r\n  return Math.max(0, weight);\r\n}\r\n\r\n/**\r\n * Leaky Relu derivative\r\n * @param weight\r\n * @param delta\r\n * @returns {number}\r\n */\r\nexport function measure(weight, delta) {\r\n  if (weight <= 0) {\r\n    return 0;\r\n  } else {\r\n    return delta;\r\n  }\r\n}","import Base from './base';\r\nimport makeKernel from '../utilities/make-kernel';\r\nimport { activate, measure } from '../activation/relu';\r\nimport zeros2D from '../utilities/zeros-2d';\r\n\r\nexport default class Relu extends Base {\r\n  constructor(inputLayer) {\r\n    super();\r\n    this.inputLayer = inputLayer;\r\n\r\n    const { width, height } = inputLayer;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.validate();\r\n    this.weights = zeros2D(this.width, this.height);\r\n    this.deltas = zeros2D(this.width, this.height);\r\n  }\r\n\r\n  setupKernels() {\r\n    this.predictKernel = makeKernel(predict, {\r\n      output: [this.width, this.height],\r\n      functions: [activate]\r\n    });\r\n\r\n    this.compareKernel = makeKernel(compare, {\r\n      output: [this.width, this.height],\r\n      functions: [measure]\r\n    });\r\n  }\r\n\r\n  predict() {\r\n    this.weights = this.predictKernel(this.inputLayer.weights);\r\n  }\r\n\r\n  compare() {\r\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\r\n  }\r\n}\r\n\r\nexport function predict(inputs) {\r\n  return activate(inputs[this.thread.y][this.thread.x]);\r\n}\r\n\r\nexport function compare(weights, deltas) {\r\n  return measure(weights[this.thread.y][this.thread.x], deltas[this.thread.y][this.thread.x]);\r\n}","/**\r\n * sigmoid activation\r\n * @param value\r\n * @returns {number}\r\n */\r\nexport function activate(value) {\r\n  return 1 / (1 + Math.exp(-value));\r\n}\r\n\r\n/**\r\n * sigmoid derivative\r\n * @param weight\r\n * @param error\r\n * @returns {number}\r\n */\r\nexport function measure(weight, error) {\r\n  return weight * (1 - weight) * error;\r\n}","import Base from './base';\r\nimport makeKernel from '../utilities/make-kernel';\r\nimport { activate, measure } from '../activation/sigmoid';\r\nimport zeros2D from '../utilities/zeros-2d';\r\n\r\nexport default class Sigmoid extends Base {\r\n  constructor(inputLayer) {\r\n    super();\r\n    this.inputLayer = inputLayer;\r\n\r\n    const { width, height } = inputLayer;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.validate();\r\n    this.weights = zeros2D(this.width, this.height);\r\n    this.deltas = zeros2D(this.width, this.height);\r\n  }\r\n\r\n  setupKernels() {\r\n    this.predictKernel = makeKernel(predict, {\r\n      output: [this.width, this.height],\r\n      functions: [activate]\r\n    });\r\n\r\n    this.compareKernel = makeKernel(compare, {\r\n      output: [this.width, this.height],\r\n      functions: [measure]\r\n    });\r\n  }\r\n\r\n  predict() {\r\n    this.weights = this.predictKernel(this.inputLayer.weights);\r\n  }\r\n\r\n  compare(previousLayer, nextLayer) {\r\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\r\n  }\r\n}\r\n\r\nexport function predict(inputs) {\r\n  return activate(inputs[this.thread.y][this.thread.x]);\r\n}\r\n\r\nexport function compare(weights, deltas) {\r\n  let weight = weights[this.thread.y][this.thread.x];\r\n  let delta = deltas[this.thread.y][this.thread.x];\r\n  return measure(weight, delta);\r\n}","import Base from './base';\r\n\r\nexport default class SoftMax extends Base {\r\n  constructor(settings, inputLayer) {\r\n    super(settings);\r\n    this.inputLayer = inputLayer;\r\n    this.validate();\r\n  }\r\n}\r\n\r\nfunction getMaxInput(inputs) {\r\n  let maxInput = -Infinity;\r\n  for (let z = 0; z < this.constants.inputDepth; z++) {\r\n    for (let y = 0; y < this.constants.inputHeight; y++) {\r\n      for (let x = 0; x < this.constants.inputWidth; x++) {\r\n        const input = inputs[z][y][x];\r\n        if (input > maxInput) {\r\n          maxInput = input;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return maxInput;\r\n}\r\n\r\nfunction getExponentialSum(inputs, maxInput) {\r\n  let exponentialSum = 0;\r\n  for (let z = 0; z < this.constants.inputDepth; z++) {\r\n    for (let y = 0; y < this.constants.inputHeight; y++) {\r\n      for (let x = 0; x < this.constants.inputWidth; x++) {\r\n        exponentialSum += Math.exp(inputs[z][y][x] - maxInput);\r\n      }\r\n    }\r\n  }\r\n  return exponentialSum;\r\n}\r\n\r\nfunction getExponential(inputs, maxInput) {\r\n  return Math.exp(inputs[this.thread.z][this.thread.y][this.thread.x] - maxInput);\r\n}\r\n\r\nfunction predict(exponentials, exponentialSum) {\r\n  return exponentials[this.thread.z][this.thread.y][this.thread.x] /= exponentialSum;\r\n}\r\n\r\nfunction learn(target, exponentials) {\r\n  const indicator = this.thread.x === target ? 1 : 0;\r\n  return -(indicator - exponentials[target]);\r\n}\r\n\r\n//TODO: handle: `return -Math.log(this.es[y]);` in learn","import Base from './base';\r\n\r\nclass Regression extends Base {\r\n  predict() {\r\n    this.weights = this.inputs;\r\n    this.validate();\r\n  }\r\n\r\n  learn() {\r\n\r\n  }\r\n}\r\n\r\nfunction learn(target) {\r\n  // if(y === i) { continue; }\r\n  // var ydiff = -yscore + x.w[i] + margin;\r\n  // if(ydiff > 0) {\r\n  //   // violating dimension, apply loss\r\n  //   x.dw[i] += 1;\r\n  //   x.dw[y] -= 1;\r\n  //   loss += ydiff;\r\n  // }\r\n}","/**\r\n *\r\n * @param weight\r\n * @returns {number}\r\n */\r\nexport function tanh(weight) {\r\n  return Math.tanh(weight);\r\n}\r\n\r\n/**\r\n * @description grad for z = tanh(x) is (1 - z^2)\r\n * @param weight\r\n * @param error\r\n * @returns {number}\r\n */\r\nexport function tanhDerivative(weight, error) {\r\n  return (1 - weight * weight) * error;\r\n}\r\n","import Base from './base';\r\nimport makeKernel from '../utilities/make-kernel';\r\nimport { tanh, tanhDerivative } from '../activation/tanh';\r\n\r\nexport default class Tanh extends Base {\r\n  constructor(inputLayer) {\r\n    super();\r\n    this.inputLayer = inputLayer;\r\n\r\n    const { width, height, depth } = this.inputLayer;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.depth = depth;\r\n    this.validate();\r\n  }\r\n\r\n  setupKernels() {\r\n    this.predictKernel = makeKernel(predict);\r\n\r\n    this.learnKernel = makeKernel(learn, {\r\n      functions: [tanhDerivative]\r\n    });\r\n  }\r\n\r\n  predict() {\r\n    this.weights = this.predictKernel(this.inputLayer.weights);\r\n  }\r\n\r\n  compare() {\r\n    this.deltas = this.learnKernel(this.weights, this.errors);\r\n  }\r\n}\r\n\r\nexport function predict(inputs) {\r\n  return Math.tanh(inputs[this.thread.y][this.thread.x]);\r\n}\r\n\r\nexport function learn(weights, errors) {\r\n  return tanhDerivative(weights[this.thread.y][this.thread.x], errors[this.thread.y][this.thread.x]);\r\n}","import makeKernel from '../utilities/make-kernel';\r\nimport zeros2D from '../utilities/zeros-2d';\r\nimport Base from './base';\r\n\r\nexport default class Target extends Base {\r\n  constructor(settings, inputLayer) {\r\n    super(settings);\r\n    this.compareKernelOutput = null;\r\n    this.inputLayer = inputLayer;\r\n\r\n    // TODO: properly handle dimensions\r\n    this.width = inputLayer.width;\r\n    this.height = inputLayer.height;\r\n    this.validate();\r\n    this.weights = zeros2D(this.width, this.height);\r\n    this.deltas = zeros2D(this.width, this.height);\r\n    this.errors = zeros2D(this.width, this.height);\r\n  }\r\n\r\n  setupKernels() {\r\n    const compareFn = this.width === 1\r\n      ? compare1D\r\n      : compare2D;\r\n    this.compareKernel = makeKernel(compareFn, {\r\n      output: [this.width, this.height]\r\n    });\r\n    this.compareKernelOutput = makeKernel(compareOutput, {\r\n      output: [this.inputLayer.width, this.inputLayer.height],\r\n      constants: {\r\n        size: this.height\r\n      }\r\n    });\r\n  }\r\n\r\n  reuseKernels(layer) {\r\n    super.reuseKernels(layer);\r\n    this.compareKernelOutput = layer.compareKernelOutput;\r\n  }\r\n\r\n  predict() {\r\n    // NOTE: this looks like it shouldn't be, but the weights are immutable, and this is where they are reused.\r\n    this.weights = this.inputLayer.weights;\r\n  }\r\n\r\n  compare(targetValues) {\r\n    // this is where weights attach to deltas\r\n    // deltas will be zero on learn, so save it in error for comparing to mse later\r\n    this.deltas = this.errors = this.compareKernel(this.weights, targetValues);\r\n    this.inputLayer.deltas = this.compareKernelOutput(this.weights, this.deltas);\r\n  }\r\n}\r\n\r\nfunction compare1D(weights, targetValues) {\r\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.x];\r\n}\r\n\r\nfunction compare2D(weights, targetValues) {\r\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.y][this.thread.x];\r\n}\r\n\r\nfunction compareOutput(outputWeights, outputDeltas) {\r\n  let sum = 0;\r\n  for (let i = 0; i < this.constants.size; i++) {\r\n    sum += outputWeights[i][this.thread.x] * outputDeltas[i][this.thread.x];\r\n  }\r\n  return sum;\r\n}","import Base from './base';\r\nimport makeKernel from '../utilities/make-kernel';\r\n\r\nexport default class Transpose extends Base {\r\n  constructor(inputLayer) {\r\n    super();\r\n    this.inputLayer = inputLayer;\r\n    this.width = this.inputLayer.height;\r\n    this.height = this.inputLayer.width;\r\n    this.validate();\r\n  }\r\n\r\n  setupKernels() {\r\n    this.predictKernel = makeKernel(transpose, {\r\n      output: [this.height, this.width]\r\n    });\r\n    this.compareKernel = makeKernel(transpose, {\r\n      output: [this.width, this.height]\r\n    })\r\n  }\r\n\r\n  predict() {\r\n    this.weights = this.predictKernel(this.inputLayer.weights);\r\n  }\r\n\r\n  compare() {\r\n    this.inputLayer.deltas = this.predictKernel(this.deltas);\r\n  }\r\n}\r\n\r\nfunction transpose(array) {\r\n  return array[this.thread.x][this.thread.y];\r\n}","import zeros2D from '../utilities/zeros-2d';\r\nimport Base from './base';\r\n\r\nexport default class Zeros extends Base {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.validate();\r\n    this.weights = zeros2D(this.width, this.height);\r\n    this.deltas = zeros2D(this.width, this.height);\r\n  }\r\n  predict() {}\r\n  compare() {}\r\n}","import Add from './add';\r\nimport Base from './base';\r\nimport Convolution from './convolution';\r\nimport Dropout from './dropout';\r\nimport feedForward from './feed-forward';\r\nimport FullyConnected from './fully-connected';\r\nimport gru from './gru';\r\nimport Input from './input';\r\nimport LeakyRelu from './leaky-relu';\r\nimport lstm from './lstm';\r\nimport Multiply from './multiply';\r\nimport MultiplyElement from './multiply-element';\r\nimport Negative from './negative';\r\nimport Ones from './ones';\r\nimport output from './output';\r\nimport Pool from './pool';\r\nimport Random from './random';\r\nimport recurrent from './recurrent';\r\nimport Regression from './regression';\r\nimport Relu from './relu';\r\nimport Sigmoid from './sigmoid';\r\nimport SoftMax from './soft-max';\r\nimport SVM from './svm';\r\nimport Tanh from './tanh';\r\nimport Target from './target';\r\nimport Transpose from './transpose';\r\nimport Zeros from './zeros';\r\n\r\nfunction add(inputLayer1, inputLayer2) {\r\n  return new Add(inputLayer1, inputLayer2);\r\n}\r\nfunction convolution(settings, inputLayer) {\r\n  return new Convolution(settings, inputLayer);\r\n}\r\nfunction dropout(settings, inputLayer) {\r\n  return new Dropout(settings, inputLayer);\r\n}\r\nfunction fullyConnected(settings, inputLayer) {\r\n  return new FullyConnected(settings, inputLayer);\r\n}\r\nfunction input(settings) {\r\n  return new Input(settings);\r\n}\r\nfunction leakyRelu(inputLayer) {\r\n  return new LeakyRelu(inputLayer);\r\n}\r\nfunction multiply(inputLayer1, inputLayer2) {\r\n  return new Multiply(inputLayer1, inputLayer2);\r\n}\r\nfunction multiplyElement(inputLayer1, inputLayer2) {\r\n  return new MultiplyElement(inputLayer1, inputLayer2);\r\n}\r\nfunction negative(settings, inputLayer) {\r\n  return new Negative(settings, inputLayer);\r\n}\r\nfunction ones(settings) {\r\n  return new Ones(settings);\r\n}\r\nfunction pool(settings, inputLayer) {\r\n  return new Pool(settings, inputLayer);\r\n}\r\nfunction random(settings) {\r\n  return new Random(settings);\r\n}\r\nfunction regression(settings, inputLayer) {\r\n  return new Regression(settings, inputLayer);\r\n}\r\nfunction relu(inputLayer) {\r\n  return new Relu(inputLayer);\r\n}\r\nfunction sigmoid(inputLayer) {\r\n  return new Sigmoid(inputLayer);\r\n}\r\nfunction softMax(settings, inputLayer) {\r\n  return new SoftMax(settings, inputLayer);\r\n}\r\nfunction svm(settings, inputLayer) {\r\n  return new SVM(settings, inputLayer);\r\n}\r\nfunction tanh(inputLayer) {\r\n  return new Tanh(inputLayer);\r\n}\r\nfunction target(settings, inputLayer) {\r\n  return new Target(settings, inputLayer);\r\n}\r\nfunction transpose(inputLayer) {\r\n  return new Transpose(inputLayer);\r\n}\r\nfunction zeros(settings) {\r\n  return new Zeros(settings);\r\n}\r\nexport {\r\n  Add,\r\n  add,\r\n  Base,\r\n  Convolution,\r\n  convolution,\r\n  Dropout,\r\n  dropout,\r\n  feedForward,\r\n  FullyConnected,\r\n  fullyConnected,\r\n  gru,\r\n  Input,\r\n  input,\r\n  LeakyRelu,\r\n  leakyRelu,\r\n  lstm,\r\n  Multiply,\r\n  multiply,\r\n  MultiplyElement,\r\n  multiplyElement,\r\n  Negative,\r\n  negative,\r\n  Ones,\r\n  ones,\r\n  output,\r\n  Pool,\r\n  pool,\r\n  Random,\r\n  random,\r\n  recurrent,\r\n  Regression,\r\n  regression,\r\n  Relu,\r\n  relu,\r\n  Sigmoid,\r\n  sigmoid,\r\n  SoftMax,\r\n  softMax,\r\n  SVM,\r\n  svm,\r\n  Tanh,\r\n  tanh,\r\n  Target,\r\n  target,\r\n  Transpose,\r\n  transpose,\r\n  Zeros,\r\n  zeros,\r\n};","import * as leakyRelu from './leaky-relu';\r\nimport * as relu from './relu';\r\nimport * as sigmoid from './sigmoid';\r\nimport * as tanh from './tanh';\r\n\r\nexport {\r\n  leakyRelu,\r\n  relu,\r\n  sigmoid,\r\n  tanh\r\n};","/**\r\n *\r\n * @param {*} input\r\n * @param {NeuralNetwork} net\r\n * @returns {*}\r\n */\r\nexport default function likely(input, net) {\r\n  let output = net.run(input);\r\n  let maxProp = null;\r\n  let maxValue = -1;\r\n  for (let prop in output) {\r\n    let value = output[prop];\r\n    if (value > maxValue) {\r\n      maxProp = prop;\r\n      maxValue = value\r\n    }\r\n  }\r\n  return maxProp;\r\n}\r\n","/* Functions for turning sparse hashes into arrays and vice versa */\r\nexport default class lookup {\r\n  /**\r\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\r\n   * @param {Object} hashes\r\n   * @returns {Object}\r\n   */\r\n  static buildLookup(hashes) {\r\n    let hash = hashes.reduce((memo, hash) => {\r\n      return Object.assign(memo, hash);\r\n    }, {});\r\n\r\n    return lookup.lookupFromHash(hash);\r\n  }\r\n\r\n  /**\r\n   * performs `{a: 6, b: 7} -> {a: 0, b: 1}`\r\n   * @param {Object} hash\r\n   * @returns {Object}\r\n   */\r\n  static lookupFromHash(hash) {\r\n    let lookup = {};\r\n    let index = 0;\r\n    for (let i in hash) {\r\n      lookup[i] = index++;\r\n    }\r\n    return lookup;\r\n  }\r\n\r\n  /**\r\n   * performs `{a: 0, b: 1}, {a: 6} -> [6, 0]`\r\n   * @param {*} lookup\r\n   * @param {*} hash\r\n   * @returns {Array}\r\n   */\r\n  static toArray(lookup, hash) {\r\n    let array = [];\r\n    for (let i in lookup) {\r\n      array[lookup[i]] = hash[i] || 0;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * performs `{a: 0, b: 1}, [6, 7] -> {a: 6, b: 7}`\r\n   * @param {Object} lookup\r\n   * @param {Array} array\r\n   * @returns {Object}\r\n   */\r\n  static toHash(lookup, array) {\r\n    let hash = {};\r\n    for (let i in lookup) {\r\n      hash[i] = array[lookup[i]];\r\n    }\r\n    return hash;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Array} array\r\n   * @returns {*}\r\n   */\r\n  static lookupFromArray(array) {\r\n    let lookup = {};\r\n    let z = 0;\r\n    let i = array.length;\r\n    while (i-- > 0) {\r\n      lookup[array[i]] = z++;\r\n    }\r\n    return lookup;\r\n  }\r\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = require('stream');\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","import { Writable } from 'stream';\r\nimport lookup from './lookup';\r\n\r\n/**\r\n *\r\n * @param opts\r\n * @returns {TrainStream}\r\n * @constructor\r\n */\r\nexport default class TrainStream extends Writable {\r\n  constructor(opts) {\r\n    super({\r\n      objectMode: true\r\n    });\r\n\r\n    opts = opts || {};\r\n\r\n    // require the neuralNetwork\r\n    if (!opts.neuralNetwork) {\r\n      throw new Error('no neural network specified');\r\n    }\r\n\r\n    this.neuralNetwork = opts.neuralNetwork;\r\n    this.dataFormatDetermined = false;\r\n\r\n    this.inputKeys = [];\r\n    this.outputKeys = []; // keeps track of keys seen\r\n    this.i = 0; // keep track of the for loop i variable that we got rid of\r\n    this.iterations = opts.iterations || 20000;\r\n    this.errorThresh = opts.errorThresh || 0.005;\r\n    this.log = opts.log ? (typeof opts.log === 'function' ? opts.log : console.log) : false;\r\n    this.logPeriod = opts.logPeriod || 10;\r\n    this.callback = opts.callback;\r\n    this.callbackPeriod = opts.callbackPeriod || 10;\r\n    this.floodCallback = opts.floodCallback;\r\n    this.doneTrainingCallback = opts.doneTrainingCallback;\r\n\r\n    this.size = 0;\r\n    this.count = 0;\r\n\r\n    this.sum = 0;\r\n\r\n    this.on('finish', this.finishStreamIteration.bind(this));\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * _write expects data to be in the form of a datum. ie. {input: {a: 1 b: 0}, output: {z: 0}}\r\n   * @param chunk\r\n   * @param enc\r\n   * @param next\r\n   * @returns {*}\r\n   * @private\r\n   */\r\n  _write(chunk, enc, next) {\r\n    if (!chunk) { // check for the end of one iteration of the stream\r\n      this.emit('finish');\r\n      return next();\r\n    }\r\n\r\n    if (!this.dataFormatDetermined) {\r\n      this.size++;\r\n      this.inputKeys = uniques(this.inputKeys.slice(0).concat(Object.keys(chunk.input)));\r\n      this.outputKeys = uniques(this.outputKeys.slice(0).concat(Object.keys(chunk.output)));\r\n      this.firstDatum = this.firstDatum || chunk;\r\n      return next();\r\n    }\r\n\r\n    this.count++;\r\n\r\n    let data = this.neuralNetwork.formatData(chunk);\r\n    this.trainDatum(data[0]);\r\n\r\n    // tell the Readable Stream that we are ready for more data\r\n    next();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param datum\r\n   */\r\n  trainDatum(datum) {\r\n    let err = this.neuralNetwork.trainPattern(datum.input, datum.output);\r\n    this.sum += err;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {*}\r\n   */\r\n  finishStreamIteration() {\r\n    if (this.dataFormatDetermined && this.size !== this.count) {\r\n      this.log('This iteration\\'s data length was different from the first.');\r\n    }\r\n\r\n    if (!this.dataFormatDetermined) {\r\n      // create the lookup\r\n      this.neuralNetwork.inputLookup = lookup.lookupFromArray(this.inputKeys);\r\n      if(!Array.isArray(this.firstDatum.output)){\r\n        this.neuralNetwork.outputLookup = lookup.lookupFromArray(this.outputKeys);\r\n      }\r\n\r\n      let data = this.neuralNetwork.formatData(this.firstDatum);\r\n      let sizes = [];\r\n      let inputSize = data[0].input.length;\r\n      let outputSize = data[0].output.length;\r\n      let hiddenSizes = this.hiddenSizes;\r\n      if (!hiddenSizes) {\r\n        sizes.push(Math.max(3, Math.floor(inputSize / 2)));\r\n      } else {\r\n        hiddenSizes.forEach(size => {\r\n          sizes.push(size);\r\n        });\r\n      }\r\n\r\n      sizes.unshift(inputSize);\r\n      sizes.push(outputSize);\r\n\r\n      this.dataFormatDetermined = true;\r\n      this.neuralNetwork.initialize(sizes);\r\n\r\n      if (typeof this.floodCallback === 'function') {\r\n        this.floodCallback();\r\n      }\r\n      return;\r\n    }\r\n\r\n    let error = this.sum / this.size;\r\n\r\n    if (this.log && (this.i % this.logPeriod == 0)) {\r\n      this.log('iterations:', this.i, 'training error:', error);\r\n    }\r\n    if (this.callback && (this.i % this.callbackPeriod == 0)) {\r\n      this.callback({\r\n        error: error,\r\n        iterations: this.i\r\n      });\r\n    }\r\n\r\n    this.sum = 0;\r\n    this.count = 0;\r\n    // update the iterations\r\n    this.i++;\r\n\r\n    // do a check here to see if we need the stream again\r\n    if (this.i < this.iterations && error > this.errorThresh) {\r\n      if (typeof this.floodCallback === 'function') {\r\n        return this.floodCallback();\r\n      }\r\n    } else {\r\n      // done training\r\n      if (typeof this.doneTrainingCallback === 'function') {\r\n        return this.doneTrainingCallback({\r\n          error: error,\r\n          iterations: this.i\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * https://gist.github.com/telekosmos/3b62a31a5c43f40849bb\r\n * @param arr\r\n * @returns {Array}\r\n */\r\nfunction uniques(arr) {\r\n  // Sets cannot contain duplicate elements, which is what we want\r\n  return [...new Set(arr)];\r\n}\r\n","/**\r\n *\r\n * @param values\r\n * @returns {*}\r\n */\r\nexport default function toArray(values) {\r\n  if (Array.isArray(values)) {\r\n    return values;\r\n  } else {\r\n    const keys = Object.keys(values);\r\n    const result = new Float32Array(keys.length);\r\n    for (let i in keys) {\r\n      result[i] = values[keys[i]];\r\n    }\r\n    return result;\r\n  }\r\n}","import toArray from './to-array';\r\n/**\r\n *\r\n * @param values\r\n * @returns {number}\r\n */\r\nexport default function max(values) {\r\n  return Math.max.apply(Math, toArray(values));\r\n}","export default function mse(errors) {\r\n  // mean squared error\r\n  let sum = 0;\r\n  for (let i = 0; i < errors.length; i++) {\r\n    sum += Math.pow(errors[i], 2);\r\n  }\r\n  return sum / errors.length;\r\n}\r\n","/**\r\n *\r\n * @param start\r\n * @param end\r\n * @returns {Array}\r\n */\r\nexport default function range(start, end) {\r\n  let result = [];\r\n  for (; start < end; start++) {\r\n    result.push(start);\r\n  }\r\n  return result;\r\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.thaw = thaw;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//private variables\nvar thawing = false;\nvar thaws = [];\n\n/**\n * thaw an array of items\n * @param {Array} items\n * @param {Object} [options]\n * @constructor\n */\n\nvar Thaw = function () {\n  _createClass(Thaw, null, [{\n    key: \"stopAll\",\n\n\n    /**\n     * Stops all Thaw instances\n     */\n    value: function stopAll() {\n      for (var i = 0; i < thaws.length; i++) {\n        thaws[i].stop();\n      }\n    }\n  }, {\n    key: \"defaultSettings\",\n\n    /**\n     *\n     * @type {{each: null, done: null}}\n     */\n    get: function get() {\n      return {\n        each: null,\n        done: null\n      };\n    }\n\n    /**\n     * returns if Thaw.js is thawing\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isThawing\",\n    get: function get() {\n      return thawing;\n    }\n  }]);\n\n  function Thaw(items) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Thaw);\n\n    var _constructor$defaultS = _extends({}, this.constructor.defaultSettings, options),\n        each = _constructor$defaultS.each,\n        done = _constructor$defaultS.done;\n\n    this.items = items;\n    this.i = 0;\n    this.options = options;\n    var tick = this.tick = function () {\n      if (_this.i < 0) return;\n\n      _this.timeout = setTimeout(tick, 0);\n\n      if (thawing) return;\n      var item = items[_this.i];\n      if (_this.i >= items.length) {\n        if (done !== null) {\n          thawing = true;\n          done(item, _this.i);\n          thawing = false;\n        }\n\n        _this.i = -1;\n        clearTimeout(_this.timeout);\n        return;\n      }\n      if (each !== null) {\n        thawing = true;\n        each(item, _this.i);\n        thawing = false;\n      } else if (item !== undefined) {\n        item();\n      }\n      _this.i++;\n    };\n\n    thaws.push(this);\n    if (!options.delay) {\n      tick();\n    }\n  }\n\n  /**\n   * readies thaw to continue\n   * @returns {boolean} if had to get ready\n   */\n\n\n  _createClass(Thaw, [{\n    key: \"makeReady\",\n    value: function makeReady() {\n      if (this.i < 0) {\n        this.i = this.items.length;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Adds an item to the end of this instance of Thaw and readies Thaw to process it\n     * @param item\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(item) {\n      var doTick = this.makeReady();\n\n      this.items.push(item);\n\n      if (doTick) {\n        this.tick();\n      }\n      return this;\n    }\n\n    /**\n     * Inserts an item just after the current item being processed in Thaw and readies Thaw to process it\n     * @param item\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(item) {\n      var doTick = this.makeReady();\n\n      this.items.splice(this.i, 0, item);\n\n      if (doTick) {\n        this.tick();\n      }\n\n      return this;\n    }\n\n    /**\n     * Adds an Array to the end of this instance of Thaw and readies Thaw to process it\n     * @param {Array} items\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"addArray\",\n    value: function addArray(items) {\n      var doTick = this.makeReady();\n\n      this.items = this.items.concat(items);\n\n      if (doTick) {\n        this.tick();\n      }\n\n      return this;\n    }\n\n    /**\n     * Inserts an Array just after the current item being processed in Thaw and readies Thaw to process them\n     * @param {Array} items\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"insertArray\",\n    value: function insertArray(items) {\n      var doTick = this.makeReady();\n      var left = this.items;\n      var middle = items;\n      var right = this.items.splice(this.i, this.items.length - this.i + 1);\n\n      this.items = left.concat(middle, right);\n\n      if (doTick) {\n        this.tick();\n      }\n      return this;\n    }\n\n    /**\n     * Stops this instance of Thaw\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.i = -1;\n      clearTimeout(this.timeout);\n      if (this.options.done) {\n        this.options.done();\n      }\n      return this;\n    }\n  }]);\n\n  return Thaw;\n}();\n\n/**\n * simple thaw\n * @param {Array} items\n * @param {Object} [options]\n * @returns Thaw\n */\n\n\nexports.default = Thaw;\nfunction thaw(items) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return new Thaw(items, options);\n}\n//# sourceMappingURL=thaw.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ = require('./');\n\nvar _2 = _interopRequireDefault(_);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *\n * @param {Object} [options]\n * @param {Number} [count]\n * @constructor\n */\nvar Block = function () {\n  function Block(options, count) {\n    _classCallCheck(this, Block);\n\n    this.index = 0;\n    this.thaws = [];\n    this.count = count || 200;\n    this.options = options;\n  }\n\n  /**\n   * add an item to the end of items\n   * @param item\n   * @returns {Block}\n   */\n\n\n  _createClass(Block, [{\n    key: 'add',\n    value: function add(item) {\n      var next = this._next();\n      next.add(item);\n\n      return this;\n    }\n\n    /**\n     * add an Array to the end of items\n     * @param items\n     * @returns {Block}\n     */\n\n  }, {\n    key: 'addArray',\n    value: function addArray(items) {\n      var next = this._next();\n      next.addArray(items);\n\n      return this;\n    }\n\n    /**\n     * insert an item into items @ current position\n     * @param item\n     * @returns {Block}\n     */\n\n  }, {\n    key: 'insert',\n    value: function insert(item) {\n      var next = this._next();\n      next.insert(item);\n\n      return this;\n    }\n\n    /**\n     * insert and array into items @ current position\n     * @param items\n     * @returns {Block}\n     */\n\n  }, {\n    key: 'insertArray',\n    value: function insertArray(items) {\n      var next = this._next();\n      next.insertArray(items);\n\n      return this;\n    }\n\n    /**\n     * Stops all thaws in this block\n     * @returns {Block}\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      for (var i = 0; i < this.thaws.length; i++) {\n        this.thaws[i].stop();\n      }\n      return this;\n    }\n\n    /**\n     * Get next available in block\n     * @returns {*}\n     * @private\n     */\n\n  }, {\n    key: '_next',\n    value: function _next() {\n      var thaw = null;\n      var thaws = this.thaws;\n\n      if (thaws.length < this.count) {\n        thaws.push(thaw = new _2.default([], this.options));\n      } else {\n        thaw = thaws[this.index];\n      }\n      this.index++;\n      if (this.index >= this.count) {\n        this.index = 0;\n      }\n\n      return thaw;\n    }\n  }]);\n\n  return Block;\n}();\n\nexports.default = Block;\n;\n//# sourceMappingURL=block.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Block = undefined;\n\nvar _thaw = require('./thaw');\n\nvar _thaw2 = _interopRequireDefault(_thaw);\n\nvar _block = require('./block');\n\nvar _block2 = _interopRequireDefault(_block);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _thaw2.default;\nexports.Block = _block2.default;\n\n\nif (typeof window !== 'undefined') {\n  window.Thaw = _thaw2.default;\n  window.Thaw.Block = _block2.default;\n}\n//# sourceMappingURL=index.js.map","import lookup from './lookup';\r\nimport TrainStream from './train-stream';\r\nimport max from './utilities/max';\r\nimport mse from './utilities/mse';\r\nimport randos from './utilities/randos';\r\nimport range from './utilities/range';\r\nimport toArray from './utilities/to-array';\r\nimport zeros from './utilities/zeros';\r\nimport Thaw from 'thaw.js';\r\n\r\n/**\r\n * @param {object} options\r\n * @constructor\r\n */\r\nexport default class NeuralNetwork {\r\n  static get trainDefaults() {\r\n    return {\r\n      iterations: 20000,    // the maximum times to iterate the training data\r\n      errorThresh: 0.005,   // the acceptable error percentage from training data\r\n      log: false,           // true to use console.log, when a function is supplied it is used\r\n      logPeriod: 10,        // iterations between logging out\r\n      learningRate: 0.3,    // multiply's against the input and the delta then adds to momentum\r\n      momentum: 0.1,        // multiply's against the specified \"change\" then adds to learning rate for change\r\n      callback: null,       // a periodic call back that can be triggered while training\r\n      callbackPeriod: 10,   // the number of iterations through the training data between callback calls\r\n      timeout: Infinity     // the max number of milliseconds to train for\r\n    };\r\n  }\r\n\r\n  static get defaults() {\r\n    return {\r\n      binaryThresh: 0.5,     // ¯\\_(ツ)_/¯\r\n      hiddenLayers: [3],     // array of ints for the sizes of the hidden layers in the network\r\n      activation: 'sigmoid'  // Supported activation types ['sigmoid', 'relu', 'leaky-relu', 'tanh']\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param options\r\n   * @private\r\n   */\r\n  static _validateTrainingOptions(options) {\r\n    const validations = {\r\n      iterations: (val) => { return typeof val === 'number' && val > 0; },\r\n      errorThresh: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\r\n      log: (val) => { return typeof val === 'function' || typeof val === 'boolean'; },\r\n      logPeriod: (val) => { return typeof val === 'number' && val > 0; },\r\n      learningRate: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\r\n      momentum: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\r\n      callback: (val) => { return typeof val === 'function' || val === null },\r\n      callbackPeriod: (val) => { return typeof val === 'number' && val > 0; },\r\n      timeout: (val) => { return typeof val === 'number' && val > 0 }\r\n    };\r\n    Object.keys(NeuralNetwork.trainDefaults).forEach(key => {\r\n      if (validations.hasOwnProperty(key) && !validations[key](options[key])) {\r\n        throw new Error(`[${key}, ${options[key]}] is out of normal training range, your network will probably not train.`);\r\n      }\r\n    });\r\n  }\r\n\r\n  constructor(options = {}) {\r\n    Object.assign(this, this.constructor.defaults, options);\r\n    this.hiddenSizes = options.hiddenLayers;\r\n    this.trainOpts = {};\r\n    this._updateTrainingOptions(Object.assign({}, this.constructor.trainDefaults, options));\r\n\r\n    this.sizes = null;\r\n    this.outputLayer = null;\r\n    this.biases = null; // weights for bias nodes\r\n    this.weights = null;\r\n    this.outputs = null;\r\n\r\n    // state for training\r\n    this.deltas = null;\r\n    this.changes = null; // for momentum\r\n    this.errors = null;\r\n    this.errorCheckInterval = 1;\r\n    if (!this.constructor.prototype.hasOwnProperty('runInput')) {\r\n      this.runInput = null;\r\n    }\r\n    if (!this.constructor.prototype.hasOwnProperty('calculateDeltas')) {\r\n      this.calculateDeltas = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Expects this.sizes to have been set\r\n   */\r\n  _initialize() {\r\n    if (!this.sizes) throw new Error ('Sizes must be set before initializing');\r\n\r\n    this.outputLayer = this.sizes.length - 1;\r\n    this.biases = []; // weights for bias nodes\r\n    this.weights = [];\r\n    this.outputs = [];\r\n\r\n    // state for training\r\n    this.deltas = [];\r\n    this.changes = []; // for momentum\r\n    this.errors = [];\r\n\r\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\r\n      let size = this.sizes[layer];\r\n      this.deltas[layer] = zeros(size);\r\n      this.errors[layer] = zeros(size);\r\n      this.outputs[layer] = zeros(size);\r\n\r\n      if (layer > 0) {\r\n        this.biases[layer] = randos(size);\r\n        this.weights[layer] = new Array(size);\r\n        this.changes[layer] = new Array(size);\r\n\r\n        for (let node = 0; node < size; node++) {\r\n          let prevSize = this.sizes[layer - 1];\r\n          this.weights[layer][node] = randos(prevSize);\r\n          this.changes[layer][node] = zeros(prevSize);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setActivation();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param activation supported inputs: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\r\n   */\r\n  setActivation(activation) {\r\n    this.activation = (activation) ? activation : this.activation;\r\n    switch (this.activation) {\r\n      case 'sigmoid':\r\n        this.runInput = this.runInput || this._runInputSigmoid;\r\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasSigmoid;\r\n        break;\r\n      case 'relu':\r\n        this.runInput = this.runInput || this._runInputRelu;\r\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasRelu;\r\n        break;\r\n      case 'leaky-relu':\r\n        this.runInput = this.runInput || this._runInputLeakyRelu;\r\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasLeakyRelu;\r\n        break;\r\n      case 'tanh':\r\n        this.runInput = this.runInput || this._runInputTanh;\r\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasTanh;\r\n        break;\r\n      default:\r\n        throw new Error('unknown activation ' + this.activation + ', The activation should be one of [\\'sigmoid\\', \\'relu\\', \\'leaky-relu\\', \\'tanh\\']');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns boolean\r\n   */\r\n  get isRunnable(){\r\n    if(!this.runInput){\r\n      console.error('Activation function has not been initialized, did you run train()?');\r\n      return false;\r\n    }\r\n\r\n    const checkFns = [\r\n      'sizes',\r\n      'outputLayer',\r\n      'biases',\r\n      'weights',\r\n      'outputs',\r\n      'deltas',\r\n      'changes',\r\n      'errors',\r\n    ].filter(c => this[c] === null);\r\n\r\n    if(checkFns.length > 0){\r\n      console.error(`Some settings have not been initialized correctly, did you run train()? Found issues with: ${checkFns.join(', ')}`);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param input\r\n   * @returns {*}\r\n   */\r\n  run(input) {\r\n    if (!this.isRunnable) return null;\r\n    if (this.inputLookup) {\r\n      input = lookup.toArray(this.inputLookup, input);\r\n    }\r\n\r\n    let output = [...this.runInput(input)];\r\n\r\n    if (this.outputLookup) {\r\n      output = lookup.toHash(this.outputLookup, output);\r\n    }\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * trains via sigmoid\r\n   * @param input\r\n   * @returns {*}\r\n   */\r\n  _runInputSigmoid(input) {\r\n    this.outputs[0] = input;  // set output state of input layer\r\n\r\n    let output = null;\r\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\r\n      for (let node = 0; node < this.sizes[layer]; node++) {\r\n        let weights = this.weights[layer][node];\r\n\r\n        let sum = this.biases[layer][node];\r\n        for (let k = 0; k < weights.length; k++) {\r\n          sum += weights[k] * input[k];\r\n        }\r\n        //sigmoid\r\n        this.outputs[layer][node] = 1 / (1 + Math.exp(-sum));\r\n      }\r\n      output = input = this.outputs[layer];\r\n    }\r\n    return output;\r\n  }\r\n\r\n  _runInputRelu(input) {\r\n    this.outputs[0] = input;  // set output state of input layer\r\n\r\n    let output = null;\r\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\r\n      for (let node = 0; node < this.sizes[layer]; node++) {\r\n        let weights = this.weights[layer][node];\r\n\r\n        let sum = this.biases[layer][node];\r\n        for (let k = 0; k < weights.length; k++) {\r\n          sum += weights[k] * input[k];\r\n        }\r\n        //relu\r\n        this.outputs[layer][node] = (sum < 0 ? 0 : sum);\r\n      }\r\n      output = input = this.outputs[layer];\r\n    }\r\n    return output;\r\n  }\r\n\r\n  _runInputLeakyRelu(input) {\r\n    this.outputs[0] = input;  // set output state of input layer\r\n\r\n    let output = null;\r\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\r\n      for (let node = 0; node < this.sizes[layer]; node++) {\r\n        let weights = this.weights[layer][node];\r\n\r\n        let sum = this.biases[layer][node];\r\n        for (let k = 0; k < weights.length; k++) {\r\n          sum += weights[k] * input[k];\r\n        }\r\n        //leaky relu\r\n        this.outputs[layer][node] = (sum < 0 ? 0 : 0.01 * sum);\r\n      }\r\n      output = input = this.outputs[layer];\r\n    }\r\n    return output;\r\n  }\r\n\r\n  _runInputTanh(input) {\r\n    this.outputs[0] = input;  // set output state of input layer\r\n\r\n    let output = null;\r\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\r\n      for (let node = 0; node < this.sizes[layer]; node++) {\r\n        let weights = this.weights[layer][node];\r\n\r\n        let sum = this.biases[layer][node];\r\n        for (let k = 0; k < weights.length; k++) {\r\n          sum += weights[k] * input[k];\r\n        }\r\n        //tanh\r\n        this.outputs[layer][node] = Math.tanh(sum);\r\n      }\r\n      output = input = this.outputs[layer];\r\n    }\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * Verifies network sizes are initilaized\r\n   * If they are not it will initialize them based off the data set.\r\n   */\r\n  _verifyIsInitialized(data) {\r\n    if (this.sizes) return;\r\n\r\n    this.sizes = [];\r\n    this.sizes.push(data[0].input.length);\r\n    if (!this.hiddenSizes) {\r\n      this.sizes.push(Math.max(3, Math.floor(data[0].input.length / 2)));\r\n    } else {\r\n      this.hiddenSizes.forEach(size => {\r\n        this.sizes.push(size);\r\n      });\r\n    }\r\n    this.sizes.push(data[0].output.length);\r\n\r\n    this._initialize();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param opts\r\n   *    Supports all `trainDefaults` properties\r\n   *    also supports:\r\n   *       learningRate: (number),\r\n   *       momentum: (number),\r\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\r\n   */\r\n  _updateTrainingOptions(opts) {\r\n    Object.keys(NeuralNetwork.trainDefaults).forEach(opt => this.trainOpts[opt] = (opts.hasOwnProperty(opt)) ? opts[opt] : this.trainOpts[opt]);\r\n    NeuralNetwork._validateTrainingOptions(this.trainOpts);\r\n    this._setLogMethod(opts.log || this.trainOpts.log);\r\n    this.activation = opts.activation || this.activation;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *  Gets JSON of trainOpts object\r\n   *    NOTE: Activation is stored directly on JSON object and not in the training options\r\n   */\r\n  _getTrainOptsJSON() {\r\n    return Object.keys(NeuralNetwork.trainDefaults)\r\n      .reduce((opts, opt) => {\r\n        if (opt === 'timeout' && this.trainOpts[opt] === Infinity) return opts;\r\n        if (this.trainOpts[opt]) opts[opt] = this.trainOpts[opt];\r\n        if (opt === 'log') opts.log = typeof opts.log === 'function';\r\n        return opts;\r\n      }, {});\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param log\r\n   * if a method is passed in method is used\r\n   * if false passed in nothing is logged\r\n   * @returns error\r\n   */\r\n  _setLogMethod(log) {\r\n    if (typeof log === 'function'){\r\n      this.trainOpts.log = log;\r\n    } else if (log) {\r\n      this.trainOpts.log = console.log;\r\n    } else {\r\n      this.trainOpts.log = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @returns {Number} error\r\n   */\r\n  _calculateTrainingError(data) {\r\n    let sum = 0;\r\n    for (let i = 0; i < data.length; ++i) {\r\n      sum += this._trainPattern(data[i].input, data[i].output, true);\r\n    }\r\n    return sum / data.length;\r\n  }\r\n\r\n  /**\r\n   * @param data\r\n   * @private\r\n   */\r\n  _trainPatterns(data) {\r\n    for (let i = 0; i < data.length; ++i) {\r\n      this._trainPattern(data[i].input, data[i].output, false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {object} data\r\n   * @param {object} status { iterations: number, error: number }\r\n   * @param endTime\r\n   */\r\n  _trainingTick(data, status, endTime) {\r\n    if (status.iterations >= this.trainOpts.iterations || status.error <= this.trainOpts.errorThresh || Date.now() >= endTime) {\r\n      return false;\r\n    }\r\n\r\n    status.iterations++;\r\n\r\n    if (this.trainOpts.log && (status.iterations % this.trainOpts.logPeriod === 0)) {\r\n      status.error = this._calculateTrainingError(data);\r\n      this.trainOpts.log(`iterations: ${status.iterations}, training error: ${status.error}`);\r\n    } else {\r\n      if (status.iterations % this.errorCheckInterval === 0) {\r\n        status.error = this._calculateTrainingError(data);\r\n      } else {\r\n        this._trainPatterns(data);\r\n      }\r\n    }\r\n\r\n    if (this.trainOpts.callback && (status.iterations % this.trainOpts.callbackPeriod === 0)) {\r\n      this.trainOpts.callback(Object.assign(status));\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @param options\r\n   * @protected\r\n   * @return { data, status, endTime }\r\n   */\r\n  _prepTraining(data, options) {\r\n    this._updateTrainingOptions(options);\r\n    data = this._formatData(data);\r\n    const endTime = Date.now() + this.trainOpts.timeout;\r\n\r\n    const status = {\r\n      error: 1,\r\n      iterations: 0\r\n    };\r\n\r\n    this._verifyIsInitialized(data);\r\n\r\n    return {\r\n      data,\r\n      status,\r\n      endTime\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @param options\r\n   * @returns {{error: number, iterations: number}}\r\n   */\r\n  train(data, options = {}) {\r\n    let status, endTime;\r\n    ({ data, status, endTime } = this._prepTraining(data, options));\r\n\r\n    while (this._trainingTick(data, status, endTime));\r\n    return status;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @param options\r\n   * @returns {Promise}\r\n   * @resolves {{error: number, iterations: number}}\r\n   * @rejects {{trainError: string, status: {error: number, iterations: number}}\r\n   */\r\n  trainAsync(data, options = {}) {\r\n    let status, endTime;\r\n    ({ data, status, endTime } = this._prepTraining(data, options));\r\n\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const thawedTrain = new Thaw(new Array(this.trainOpts.iterations), {\r\n          delay: true,\r\n          each: () => this._trainingTick(data, status, endTime) || thawedTrain.stop(),\r\n          done: () => resolve(status)\r\n        });\r\n        thawedTrain.tick();\r\n      } catch (trainError) {\r\n        reject({trainError, status});\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param input\r\n   * @param target\r\n   */\r\n  _trainPattern(input, target, logErrorRate) {\r\n\r\n    // forward propagate\r\n    this.runInput(input);\r\n\r\n    // back propagate\r\n    this.calculateDeltas(target);\r\n    this._adjustWeights();\r\n\r\n    if  (logErrorRate) {\r\n      return mse(this.errors[this.outputLayer]);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param target\r\n   */\r\n  _calculateDeltasSigmoid(target) {\r\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\r\n      for (let node = 0; node < this.sizes[layer]; node++) {\r\n        let output = this.outputs[layer][node];\r\n\r\n        let error = 0;\r\n        if (layer === this.outputLayer) {\r\n          error = target[node] - output;\r\n        }\r\n        else {\r\n          let deltas = this.deltas[layer + 1];\r\n          for (let k = 0; k < deltas.length; k++) {\r\n            error += deltas[k] * this.weights[layer + 1][k][node];\r\n          }\r\n        }\r\n        this.errors[layer][node] = error;\r\n        this.deltas[layer][node] = error * output * (1 - output);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param target\r\n   */\r\n  _calculateDeltasRelu(target) {\r\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\r\n      for (let node = 0; node < this.sizes[layer]; node++) {\r\n        let output = this.outputs[layer][node];\r\n\r\n        let error = 0;\r\n        if (layer === this.outputLayer) {\r\n          error = target[node] - output;\r\n        }\r\n        else {\r\n          let deltas = this.deltas[layer + 1];\r\n          for (let k = 0; k < deltas.length; k++) {\r\n            error += deltas[k] * this.weights[layer + 1][k][node];\r\n          }\r\n        }\r\n        this.errors[layer][node] = error;\r\n        this.deltas[layer][node] = output > 0 ? error : 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param target\r\n   */\r\n  _calculateDeltasLeakyRelu(target) {\r\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\r\n      for (let node = 0; node < this.sizes[layer]; node++) {\r\n        let output = this.outputs[layer][node];\r\n\r\n        let error = 0;\r\n        if (layer === this.outputLayer) {\r\n          error = target[node] - output;\r\n        }\r\n        else {\r\n          let deltas = this.deltas[layer + 1];\r\n          for (let k = 0; k < deltas.length; k++) {\r\n            error += deltas[k] * this.weights[layer + 1][k][node];\r\n          }\r\n        }\r\n        this.errors[layer][node] = error;\r\n        this.deltas[layer][node] = output > 0 ? error : 0.01 * error;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param target\r\n   */\r\n  _calculateDeltasTanh(target) {\r\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\r\n      for (let node = 0; node < this.sizes[layer]; node++) {\r\n        let output = this.outputs[layer][node];\r\n\r\n        let error = 0;\r\n        if (layer === this.outputLayer) {\r\n          error = target[node] - output;\r\n        }\r\n        else {\r\n          let deltas = this.deltas[layer + 1];\r\n          for (let k = 0; k < deltas.length; k++) {\r\n            error += deltas[k] * this.weights[layer + 1][k][node];\r\n          }\r\n        }\r\n        this.errors[layer][node] = error;\r\n        this.deltas[layer][node] = (1 - output * output) * error;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Changes weights of networks\r\n   */\r\n  _adjustWeights() {\r\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\r\n      let incoming = this.outputs[layer - 1];\r\n\r\n      for (let node = 0; node < this.sizes[layer]; node++) {\r\n        let delta = this.deltas[layer][node];\r\n\r\n        for (let k = 0; k < incoming.length; k++) {\r\n          let change = this.changes[layer][node][k];\r\n\r\n          change = (this.trainOpts.learningRate * delta * incoming[k])\r\n            + (this.trainOpts.momentum * change);\r\n\r\n          this.changes[layer][node][k] = change;\r\n          this.weights[layer][node][k] += change;\r\n        }\r\n        this.biases[layer][node] += this.trainOpts.learningRate * delta;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @returns {*}\r\n   */\r\n  _formatData(data) {\r\n    if (!Array.isArray(data)) { // turn stream datum into array\r\n      let tmp = [];\r\n      tmp.push(data);\r\n      data = tmp;\r\n    }\r\n    // turn sparse hash input into arrays with 0s as filler\r\n    let datum = data[0].input;\r\n    if (!Array.isArray(datum) && !(datum instanceof Float32Array)) {\r\n      if (!this.inputLookup) {\r\n        this.inputLookup = lookup.buildLookup(data.map(value => value['input']));\r\n      }\r\n      data = data.map(datum => {\r\n        let array = lookup.toArray(this.inputLookup, datum.input);\r\n        return Object.assign({}, datum, { input: array });\r\n      }, this);\r\n    }\r\n\r\n    if (!Array.isArray(data[0].output)) {\r\n      if (!this.outputLookup) {\r\n        this.outputLookup = lookup.buildLookup(data.map(value => value['output']));\r\n      }\r\n      data = data.map(datum => {\r\n        let array = lookup.toArray(this.outputLookup, datum.output);\r\n        return Object.assign({}, datum, { output: array });\r\n      }, this);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @returns {\r\n   *  {\r\n   *    error: number,\r\n   *    misclasses: Array\r\n   *  }\r\n   * }\r\n   */\r\n  test(data) {\r\n    data = this._formatData(data);\r\n\r\n    // for binary classification problems with one output node\r\n    let isBinary = data[0].output.length === 1;\r\n    let falsePos = 0;\r\n    let falseNeg = 0;\r\n    let truePos = 0;\r\n    let trueNeg = 0;\r\n\r\n    // for classification problems\r\n    let misclasses = [];\r\n\r\n    // run each pattern through the trained network and collect\r\n    // error and misclassification statistics\r\n    let sum = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      let output = this.runInput(data[i].input);\r\n      let target = data[i].output;\r\n\r\n      let actual, expected;\r\n      if (isBinary) {\r\n        actual = output[0] > this.binaryThresh ? 1 : 0;\r\n        expected = target[0];\r\n      }\r\n      else {\r\n        actual = output.indexOf(max(output));\r\n        expected = target.indexOf(max(target));\r\n      }\r\n\r\n      if (actual !== expected) {\r\n        let misclass = data[i];\r\n        Object.assign(misclass, {\r\n          actual: actual,\r\n          expected: expected\r\n        });\r\n        misclasses.push(misclass);\r\n      }\r\n\r\n      if (isBinary) {\r\n        if (actual === 0 && expected === 0) {\r\n          trueNeg++;\r\n        } else if (actual === 1 && expected === 1) {\r\n          truePos++;\r\n        } else if (actual === 0 && expected === 1) {\r\n          falseNeg++;\r\n        } else if (actual === 1 && expected === 0) {\r\n          falsePos++;\r\n        }\r\n      }\r\n\r\n      let errors = output.map((value, i) => {\r\n        return target[i] - value;\r\n      });\r\n      sum += mse(errors);\r\n    }\r\n    let error = sum / data.length;\r\n\r\n    let stats = {\r\n      error: error,\r\n      misclasses: misclasses\r\n    };\r\n\r\n    if (isBinary) {\r\n      Object.assign(stats, {\r\n        trueNeg: trueNeg,\r\n        truePos: truePos,\r\n        falseNeg: falseNeg,\r\n        falsePos: falsePos,\r\n        total: data.length,\r\n        precision: truePos / (truePos + falsePos),\r\n        recall: truePos / (truePos + falseNeg),\r\n        accuracy: (trueNeg + truePos) / data.length\r\n      });\r\n    }\r\n    return stats;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns\r\n   *  {\r\n   *    layers: [\r\n   *      {\r\n   *        x: {},\r\n   *        y: {}\r\n   *      },\r\n   *      {\r\n   *        '0': {\r\n   *          bias: -0.98771313,\r\n   *          weights: {\r\n   *            x: 0.8374838,\r\n   *            y: 1.245858\r\n   *          },\r\n   *        '1': {\r\n   *          bias: 3.48192004,\r\n   *          weights: {\r\n   *            x: 1.7825821,\r\n   *            y: -2.67899\r\n   *          }\r\n   *        }\r\n   *      },\r\n   *      {\r\n   *        f: {\r\n   *          bias: 0.27205739,\r\n   *          weights: {\r\n   *            '0': 1.3161821,\r\n   *            '1': 2.00436\r\n   *          }\r\n   *        }\r\n   *      }\r\n   *    ]\r\n   *  }\r\n   */\r\n  toJSON() {\r\n    let layers = [];\r\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\r\n      layers[layer] = [];\r\n\r\n      let nodes;\r\n      // turn any internal arrays back into hashes for readable json\r\n      if (layer === 0 && this.inputLookup) {\r\n        nodes = Object.keys(this.inputLookup);\r\n      }\r\n      else if (layer === this.outputLayer && this.outputLookup) {\r\n        nodes = Object.keys(this.outputLookup);\r\n      }\r\n      else {\r\n        nodes = range(0, this.sizes[layer]);\r\n      }\r\n\r\n      for (let j = 0; j < nodes.length; j++) {\r\n        let node = nodes[j];\r\n        layers[layer][node] = {};\r\n\r\n        if (layer > 0) {\r\n          layers[layer][node].bias = this.biases[layer][j];\r\n          layers[layer][node].weights = [];\r\n          for (let k in layers[layer - 1]) {\r\n            let index = k;\r\n            if (layer === 1 && this.inputLookup) {\r\n              index = this.inputLookup[k];\r\n            }\r\n            layers[layer][node].weights[k] = this.weights[layer][j][index];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      sizes: this.sizes,\r\n      layers,\r\n      outputLookup:!!this.outputLookup,\r\n      inputLookup:!!this.inputLookup,\r\n      activation: this.activation,\r\n      trainOpts: this._getTrainOptsJSON()\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param json\r\n   * @returns {NeuralNetwork}\r\n   */\r\n  fromJSON(json) {\r\n    this.sizes = json.sizes;\r\n    this._initialize();\r\n\r\n    for (let i = 0; i <= this.outputLayer; i++) {\r\n      let layer = json.layers[i];\r\n      if (i === 0 && (!layer[0] || json.inputLookup)) {\r\n        this.inputLookup = lookup.lookupFromHash(layer);\r\n      }\r\n      else if (i === this.outputLayer && (!layer[0] || json.outputLookup)) {\r\n        this.outputLookup = lookup.lookupFromHash(layer);\r\n      }\r\n      if (i > 0) {\r\n        const nodes = Object.keys(layer);\r\n        this.sizes[i] = nodes.length;\r\n        for (let j in nodes) {\r\n          const node = nodes[j];\r\n          this.biases[i][j] = layer[node].bias;\r\n          this.weights[i][j] = toArray(layer[node].weights);\r\n        }\r\n      }\r\n    }\r\n    if (json.hasOwnProperty('trainOpts')) {\r\n      this._updateTrainingOptions(json.trainOpts);\r\n    }\r\n    this.setActivation(this.activation || 'sigmoid');\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Function}\r\n   */\r\n  toFunction() {\r\n    const activation = this.activation;\r\n    function nodeHandle(layers, layerNumber, nodeKey) {\r\n      if (layerNumber === 0) {\r\n        return (typeof nodeKey === 'string'\r\n          ? `input['${nodeKey}']`\r\n          : `input[${nodeKey}]`);\r\n      }\r\n\r\n      const layer = layers[layerNumber];\r\n      const node = layer[nodeKey];\r\n      let result = [node.bias];\r\n      for (let w in node.weights) {\r\n        if (node.weights[w] < 0) {\r\n          result.push(`${node.weights[w]}*(${nodeHandle(layers, layerNumber - 1, w)})`);\r\n        } else {\r\n          result.push(`+${node.weights[w]}*(${nodeHandle(layers, layerNumber - 1, w)})`);\r\n        }\r\n      }\r\n\r\n      switch (activation) {\r\n        case 'sigmoid':\r\n          return `1/(1+1/Math.exp(${result.join('')}))`;\r\n        case 'relu':\r\n          return `var sum = ${result.join('')};(sum < 0 ? 0 : sum);`;\r\n        case 'leaky-relu':\r\n          return `var sum = ${result.join('')};(sum < 0 ? 0 : 0.01 * sum);`;\r\n        case 'tanh':\r\n          return `Math.tanh(${result.join('')});`;\r\n        default:\r\n          throw new Error('unknown activation type ' + activation);\r\n      }\r\n    }\r\n\r\n    const layers = this.toJSON().layers;\r\n    const layersAsMath = [];\r\n    let result;\r\n    for (let i in layers[layers.length - 1]) {\r\n      layersAsMath.push(nodeHandle(layers, layers.length - 1, i));\r\n    }\r\n    if (this.outputLookup) {\r\n      result = `{${\r\n        Object.keys(this.outputLookup)\r\n          .map((key, i) => `'${key}':${layersAsMath[i]}`)\r\n      }}`;\r\n    } else {\r\n      result = `[${layersAsMath.join(',')}]`;\r\n    }\r\n    return new Function('input', `return ${result}`);\r\n  }\r\n\r\n  /**\r\n   * This will create a TrainStream (WriteStream) for us to send the training data to.\r\n   * @param opts training options\r\n   * @returns {TrainStream|*}\r\n   */\r\n  createTrainStream(opts) {\r\n    opts = opts || {};\r\n    opts.neuralNetwork = this;\r\n    this.setActivation();\r\n    this.trainStream = new TrainStream(opts);\r\n    return this.trainStream;\r\n  }\r\n}","import NeuralNetwork from './neural-network';\r\nimport lookup from './lookup';\r\nimport GPU from 'gpu.js';\r\n\r\n/**\r\n *\r\n * @param {object} options\r\n * @constructor\r\n */\r\nexport default class NeuralNetworkGPU extends NeuralNetwork {\r\n  constructor(options = {}) {\r\n    super(options);\r\n    this.forwardPropagate = [];\r\n    this.backwardPropagate = [];\r\n    this.changesPropagate = [];\r\n    this.biasesPropagate = [];\r\n    this.biasCopies = [];\r\n    this.copyBias = [];\r\n    this.changesCopies = [];\r\n    this.copyChanges = [];\r\n    this.weightsCopies = [];\r\n    this.copyWeights = [];\r\n    this.errorCheckInterval = 100;\r\n    this.gpu = new GPU({mode: options.mode});\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  _initialize() {\r\n    super._initialize();\r\n    this.buildRunInput();\r\n    this.buildCalculateDeltas();\r\n    this.buildGetChanges();\r\n    this.buildChangeBiases();\r\n    this.buildGetMSE();\r\n  }\r\n\r\n  setActivation() {}\r\n\r\n  /**\r\n   *\r\n   * @param input\r\n   * @param target\r\n   * @param logErrorRate\r\n   */\r\n  _trainPattern(input, target, logErrorRate) {\r\n    // forward propagate\r\n    this.runInput(input);\r\n\r\n    // backward propagate\r\n    this.calculateDeltas(target);\r\n    this.getChanges();\r\n    this.changeBiases();\r\n\r\n    if (logErrorRate) {\r\n      return this.getMSE(this.errors[this.outputLayer])[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  buildRunInput() {\r\n    let weightedSum = null;\r\n\r\n    switch (this.activation) {\r\n      case 'sigmoid':\r\n        weightedSum = weightedSumSigmoid;\r\n        break;\r\n      case 'relu':\r\n        weightedSum = weightedSumRelu;\r\n        break;\r\n      case 'leaky-relu':\r\n        weightedSum = weightedSumLeakyRelu;\r\n        break;\r\n      case 'tanh':\r\n        weightedSum = weightedSumTanh;\r\n        break;\r\n      default:\r\n        throw new Error('unknown activation ' + this.activation);\r\n    }\r\n\r\n    for(let layer = 1; layer <= this.outputLayer; layer++){\r\n      this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\r\n        output: [this.sizes[layer]],\r\n        outputToTexture: true,\r\n        hardcodeConstants: true,\r\n        constants: {\r\n          size: this.sizes[layer - 1]\r\n        }\r\n      });\r\n    }\r\n\r\n    this._texturizeInputData = this.gpu.createKernel(function(value) {\r\n      return value[this.thread.x];\r\n    }, {\r\n      output: [this.sizes[1]],\r\n      outputToTexture: true,\r\n      hardcodeConstants: true,\r\n      outputImmutable: true\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param input\r\n   * @returns {*}\r\n   */\r\n  runInput(input) {\r\n    let output;\r\n    this.outputs[0] = input;\r\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\r\n      this.outputs[layer] = this.forwardPropagate[layer](\r\n        this.weights[layer], \r\n        this.biases[layer], \r\n        input\r\n      );\r\n      output = input = this.outputs[layer];\r\n    }\r\n    return output;\r\n  }\r\n\r\n  buildCalculateDeltas() {\r\n    let calcDeltas = null;\r\n\r\n    switch (this.activation) {\r\n      case 'sigmoid':\r\n        calcDeltas = calcDeltasSigmoid;\r\n        break;\r\n      case 'relu':\r\n        calcDeltas = calcDeltasRelu;\r\n        break;\r\n      case 'leaky-relu':\r\n        calcDeltas = calcDeltasLeakyRelu;\r\n        break;\r\n      case 'tanh':\r\n        calcDeltas = calcDeltasTanh;\r\n        break;\r\n      default:\r\n        throw new Error('unknown activation ' + this.activation);\r\n    }\r\n\r\n    for (let layer = this.outputLayer; layer > 0; layer--) {\r\n      if (layer === this.outputLayer) {\r\n        this.backwardPropagate[layer] = this.gpu.createKernelMap({\r\n            error: GPU.alias('calcErrorOutput', calcErrorOutput),\r\n            deltas: GPU.alias('calcDeltas', calcDeltas)\r\n          }, function(outputs, targets) {\r\n            const output = outputs[this.thread.x];\r\n            return calcDeltas(calcErrorOutput(output, targets), output);\r\n          }, {\r\n            output: [this.sizes[layer]],\r\n            outputToTexture: true,\r\n            hardcodeConstants: true\r\n          });\r\n      } else {\r\n        this.backwardPropagate[layer] = this.gpu.createKernelMap({\r\n            error: GPU.alias('calcError', calcError),\r\n            deltas: GPU.alias('calcDeltas', calcDeltas),\r\n          }, function(nextWeights, outputs, nextDeltas){\r\n            let output = outputs[this.thread.x];\r\n            return calcDeltas(calcError(nextWeights, nextDeltas), output);\r\n          }, {\r\n            output: [this.sizes[layer]],\r\n            outputToTexture: true,\r\n            hardcodeConstants: true,\r\n            constants: {\r\n              size: this.deltas[layer + 1].length\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateDeltas(target) {\r\n    for (let layer = this.outputLayer; layer > 0; layer--) {\r\n      let output;\r\n\r\n      if (layer === this.outputLayer) {\r\n        output = this.backwardPropagate[layer](\r\n          this.outputs[layer],\r\n          target);\r\n      } else {\r\n        output = this.backwardPropagate[layer](\r\n          this.weights[layer + 1],\r\n          this.outputs[layer],\r\n          this.deltas[layer + 1],\r\n        );\r\n      }\r\n\r\n      this.deltas[layer] = output.deltas;\r\n      this.errors[layer] = output.error;\r\n    }\r\n  }\r\n\r\n  buildGetChanges() {\r\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\r\n      this.changesPropagate[layer] = this.gpu.createKernelMap({\r\n          weights: GPU.alias('addWeights', addWeights),\r\n          changes: GPU.alias('calcChanges', calcChanges)\r\n        },\r\n        function(previousOutputs, deltas, weights, changes) {\r\n          let change = calcChanges(\r\n            changes,\r\n            deltas,\r\n            previousOutputs);\r\n\r\n            return addWeights(change, weights);\r\n        }, {\r\n          output: [this.sizes[layer - 1], this.sizes[layer]],\r\n          outputToTexture: true,\r\n          hardcodeConstants: true,\r\n          constants:{\r\n            size: this.outputs[layer - 1].length,\r\n            learningRate: this.trainOpts.learningRate,\r\n            momentum: this.trainOpts.momentum\r\n          }\r\n        });\r\n\r\n      this.copyChanges[layer] = this.gpu.createKernel(function(value) {\r\n        return value[this.thread.y][this.thread.x];\r\n      }, {\r\n        output: this.changesPropagate[layer].output,\r\n        outputToTexture: true,\r\n        hardCodeConstants: true\r\n      });\r\n\r\n      this.copyWeights[layer] = this.gpu.createKernel(function(value) {\r\n        return value[this.thread.y][this.thread.x];\r\n      }, {\r\n        output: this.changesPropagate[layer].output,\r\n        outputToTexture: true,\r\n        hardCodeConstants: true\r\n      });\r\n    }    \r\n  }\r\n  \r\n  getChanges() {\r\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\r\n      let output = this.changesPropagate[layer](\r\n        this.outputs[layer - 1],\r\n        this.deltas[layer],\r\n        this.weightsCopies[layer] || this.weights[layer],\r\n        this.changesCopies[layer] || this.changes[layer]\r\n      );\r\n      this.changes[layer] = output.changes;\r\n      this.weights[layer] = output.weights;\r\n\r\n      this.changesCopies[layer] = this.copyChanges[layer](output.changes);\r\n      this.weightsCopies[layer] = this.copyWeights[layer](output.weights);\r\n    }\r\n  }\r\n\r\n  buildChangeBiases() {\r\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\r\n      this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\r\n        output: [this.sizes[layer]],\r\n        outputToTexture: true,\r\n        hardcodeConstants: true,\r\n        constants: {\r\n          learningRate: this.trainOpts.learningRate\r\n        }\r\n      });\r\n      this.copyBias[layer] = this.gpu.createKernel(function(value) {\r\n        return value[this.thread.x];\r\n      }, {\r\n        output: this.biasesPropagate[layer].output,\r\n        outputToTexture: true,\r\n        hardCodeConstants: true\r\n      });\r\n    }\r\n  }\r\n\r\n  changeBiases() {\r\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\r\n      this.biases[layer] = this.biasesPropagate[layer](\r\n        this.biasCopies[layer] || this.biases[layer],\r\n        this.deltas[layer]\r\n      );\r\n      this.biasCopies[layer] = this.copyBias[layer](this.biases[layer]);\r\n    }\r\n  }\r\n\r\n  buildGetMSE() {\r\n    this.getMSE = this.gpu.createKernel(mse, {\r\n      output: [1],\r\n      hardcodeConstants: true,\r\n      constants: {\r\n        size: this.sizes[this.outputLayer]\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param input\r\n   * @returns {*}\r\n   */\r\n  run(input) {\r\n    if (!this.isRunnable) return null;\r\n    if (this.inputLookup) {\r\n      input = lookup.toArray(this.inputLookup, input);\r\n    }\r\n    const inputTexture = this._texturizeInputData(input);\r\n    const outputTextures = this.runInput(inputTexture);\r\n    let output = outputTextures.toArray(this.gpu);\r\n\r\n    if (this.outputLookup) {\r\n      output = lookup.toHash(this.outputLookup, output);\r\n    }\r\n    return output;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * Verifies network sizes are initilaized\r\n   * If they are not it will initialize them based off the data set.\r\n   */\r\n  _verifyIsInitialized(data) {\r\n    if (this.sizes) return;\r\n\r\n    this.sizes = [];\r\n    if (!data[0].size) {\r\n      data[0].size = { input: data[0].input.length, output: data[0].output.length };\r\n    }\r\n\r\n    this.sizes.push(data[0].size.input);\r\n    if (!this.hiddenSizes) {\r\n      this.sizes.push(Math.max(3, Math.floor(data[0].size.input / 2)));\r\n    } else {\r\n      this.hiddenSizes.forEach(size => {\r\n        this.sizes.push(size);\r\n      });\r\n    }\r\n    this.sizes.push(data[0].size.output);\r\n\r\n    this._initialize();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @param options\r\n   * @protected\r\n   * @return { data, status, endTime }\r\n   */\r\n  _prepTraining(data, options) {\r\n    this._updateTrainingOptions(options);\r\n    data = this._formatData(data);\r\n    const endTime = Date.now() + this.trainOpts.timeout;\r\n\r\n    const status = {\r\n      error: 1,\r\n      iterations: 0\r\n    };\r\n\r\n    this._verifyIsInitialized(data);\r\n\r\n    const texturizeOutputData = this.gpu.createKernel(function(value) {\r\n      return value[this.thread.x];\r\n    }, {\r\n      output: [data[0].output.length],\r\n      outputToTexture: true,\r\n      hardcodeConstants: true,\r\n      outputImmutable: true\r\n    });\r\n\r\n    return {\r\n      data: data.map((set) => {\r\n        return {\r\n          size: set.size,\r\n          input: this._texturizeInputData(set.input),\r\n          output: texturizeOutputData(set.output)\r\n        }\r\n      }),\r\n      status,\r\n      endTime\r\n    };\r\n  }\r\n\r\n  toFunction() {\r\n    throw new Error('not implemented on NeuralNetworkGPU');\r\n  }\r\n\r\n}\r\n\r\nfunction weightedSumSigmoid(weights, biases, inputs) {\r\n  let sum = biases[this.thread.x];\r\n  for (let k = 0; k < this.constants.size; k++) {\r\n    sum += weights[this.thread.x][k] * inputs[k];\r\n  }\r\n  //sigmoid\r\n  return 1 / (1 + Math.exp(-sum));\r\n}\r\n\r\nfunction weightedSumRelu(weights, biases, inputs) {\r\n  let sum = biases[this.thread.x];\r\n  for (let k = 0; k < this.constants.size; k++) {\r\n    sum += weights[this.thread.x][k] * inputs[k];\r\n  }\r\n  //relu\r\n  return (sum < 0 ? 0 : sum);\r\n}\r\n\r\nfunction weightedSumLeakyRelu(weights, biases, inputs) {\r\n  let sum = biases[this.thread.x];\r\n  for (let k = 0; k < this.constants.size; k++) {\r\n    sum += weights[this.thread.x][k] * inputs[k];\r\n  }\r\n  //leaky relu\r\n  return (sum < 0 ? 0 : 0.01 * sum);\r\n}\r\n\r\nfunction weightedSumTanh(weights, biases, inputs) {\r\n  let sum = biases[this.thread.x];\r\n  for (let k = 0; k < this.constants.size; k++) {\r\n    sum += weights[this.thread.x][k] * inputs[k];\r\n  }\r\n  //tanh\r\n  return Math.tanh(sum);\r\n}\r\n\r\nfunction calcErrorOutput(output, targets) {\r\n  return targets[this.thread.x] - output;\r\n}\r\n\r\nfunction calcDeltasSigmoid(error, output) {\r\n  //sigmoid derivative\r\n  return error * output * (1 - output);\r\n}\r\n\r\nfunction calcDeltasRelu(error, output) {\r\n  //relu derivative\r\n  return output > 0 ? error : 0;\r\n}\r\n\r\nfunction calcDeltasLeakyRelu(error, output) {\r\n  //leaky relu derivative\r\n  return output > 0 ? error : 0.01 * error;\r\n}\r\n\r\nfunction calcDeltasTanh(error, output) {\r\n  //tanh derivative\r\n  return (1 - output * output) * error;\r\n}\r\n\r\nfunction calcError(nextWeights, nextDeltas){\r\n  let error = 0;\r\n  for(let k = 0; k < this.constants.size; k++){\r\n    error += nextDeltas[k] * nextWeights[k][this.thread.x];\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction calcChanges(\r\n  previousChanges,\r\n  deltas,\r\n  previousOutputs\r\n) {\r\n  return (this.constants.learningRate * deltas[this.thread.y] * previousOutputs[this.thread.x])\r\n      + (this.constants.momentum * previousChanges[this.thread.y][this.thread.x]);\r\n}\r\n\r\nfunction addWeights(change, weights){\r\n  return change + weights[this.thread.y][this.thread.x];\r\n}\r\n\r\nfunction addBiases(biases, deltas){\r\n  return biases[this.thread.x] + (deltas[this.thread.x] * this.constants.learningRate);\r\n}\r\n\r\n// mean squared error, reimplemented for GPU\r\nfunction mse(errors) {\r\n  let sum = 0;\r\n  for (let i = 0; i < this.constants.size; i++) {\r\n    sum += Math.pow(errors[i], 2);\r\n  }\r\n  return sum / this.constants.size;\r\n}","import zeros from '../../utilities/zeros';\r\n\r\n/**\r\n * A matrix\r\n * @param {Number} [rows]\r\n * @param {Number} [columns]\r\n * @constructor\r\n */\r\nexport default class Matrix {\r\n  constructor(rows, columns) {\r\n    if (rows === undefined) return;\r\n    if (columns === undefined) return;\r\n\r\n    this.rows = rows;\r\n    this.columns = columns;\r\n    this.weights = zeros(rows * columns);\r\n    this.deltas = zeros(rows * columns);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Number} row\r\n   * @param {Number} col\r\n   * @returns {Float32Array|Array}\r\n   */\r\n  getWeights(row, col) {\r\n    // slow but careful accessor function\r\n    // we want row-major order\r\n    let ix = (this.columns * row) + col;\r\n    if (ix < 0 && ix >= this.weights.length) throw new Error('get accessor is skewed');\r\n    return this.weights[ix];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Number} row\r\n   * @param {Number} col\r\n   * @param v\r\n   * @returns {Matrix}\r\n   */\r\n  setWeight(row, col, v) {\r\n    // slow but careful accessor function\r\n    let ix = (this.columns * row) + col;\r\n    if (ix < 0 && ix >= this.weights.length) throw new Error('set accessor is skewed');\r\n    this.weights[ix] = v;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Number} row\r\n   * @param {Number} col\r\n   * @param v\r\n   * @returns {Matrix}\r\n   */\r\n  setDeltas(row, col, v) {\r\n    // slow but careful accessor function\r\n    let ix = (this.columns * row) + col;\r\n    if (ix < 0 && ix >= this.weights.length) throw new Error('set accessor is skewed');\r\n    this.deltas[ix] = v;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {{rows: *, columns: *, weights: Array}}\r\n   */\r\n  toJSON() {\r\n    return {\r\n      rows: this.rows,\r\n      columns: this.columns,\r\n      weights: this.weights.slice(0)\r\n    };\r\n  }\r\n\r\n  static fromJSON(json) {\r\n    let matrix = new Matrix(json.rows, json.columns);\r\n    for (let i = 0, max = json.rows * json.columns; i < max; i++) {\r\n      matrix.weights[i] = json.weights[i]; // copy over weights\r\n    }\r\n    return matrix;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param weightRows\r\n   * @param [deltasRows]\r\n   * @returns {Matrix}\r\n   */\r\n  static fromArray(weightRows, deltasRows) {\r\n    const rows = weightRows.length;\r\n    const columns = weightRows[0].length;\r\n    const m = new Matrix(rows, columns);\r\n\r\n    deltasRows = deltasRows || weightRows;\r\n\r\n    for (let rowIndex = 0; rowIndex < rows; rowIndex++) {\r\n      const weightValues = weightRows[rowIndex];\r\n      const deltasValues = deltasRows[rowIndex];\r\n      for (let columnIndex = 0; columnIndex < columns; columnIndex++) {\r\n        m.setWeight(rowIndex, columnIndex, weightValues[columnIndex]);\r\n        m.setDeltas(rowIndex, columnIndex, deltasValues[columnIndex]);\r\n      }\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n  weightsToArray() {\r\n    const deltas = [];\r\n    let row = 0;\r\n    let column = 0;\r\n    for (let i = 0; i < this.weights.length; i++) {\r\n      if (column === 0) {\r\n        deltas.push([]);\r\n      }\r\n      deltas[row].push(this.weights[i]);\r\n      column++;\r\n      if (column >= this.columns) {\r\n        column = 0;\r\n        row++;\r\n      }\r\n    }\r\n    return deltas;\r\n  }\r\n\r\n  deltasToArray() {\r\n    const deltas = [];\r\n    let row = 0;\r\n    let column = 0;\r\n    for (let i = 0; i < this.deltas.length; i++) {\r\n      if (column === 0) {\r\n        deltas.push([]);\r\n      }\r\n      deltas[row].push(this.deltas[i]);\r\n      column++;\r\n      if (column >= this.columns) {\r\n        column = 0;\r\n        row++;\r\n      }\r\n    }\r\n    return deltas;\r\n  }\r\n}\r\n","export function randomFloat(a, b) {\r\n  return Math.random() * (b - a) + a;\r\n}\r\n\r\nexport function randomInteger(a, b) {\r\n  return Math.floor(Math.random() * (b - a) + a);\r\n}\r\n\r\nexport function randomN(mu, std) {\r\n  return mu + gaussRandom() * std;\r\n}\r\n\r\n// Random numbers utils\r\nfunction gaussRandom() {\r\n  if (gaussRandom.returnV) {\r\n    gaussRandom.returnV = false;\r\n    return gaussRandom.vVal;\r\n  }\r\n  let u = 2 * Math.random() - 1;\r\n  let v = 2 * Math.random() - 1;\r\n  let r = u * u + v * v;\r\n  if (r == 0 || r > 1) {\r\n    return gaussRandom();\r\n  }\r\n  let c = Math.sqrt(-2 * Math.log(r) / r);\r\n  gaussRandom.vVal = v * c; // cache this\r\n  gaussRandom.returnV = true;\r\n  return u * c;\r\n}\r\ngaussRandom.returnV = false;\r\ngaussRandom.vVal = 0;\r\n","import Matrix from './';\r\nimport { randomFloat } from '../../utilities/random';\r\n\r\n/** return Matrix but filled with random numbers from gaussian\r\n * @param {Number} [rows]\r\n * @param {Number} [columns]\r\n * @param std\r\n * @constructor\r\n */\r\nexport default class RandomMatrix extends Matrix {\r\n  constructor(rows, columns, std) {\r\n    super(rows, columns);\r\n    this.rows = rows;\r\n    this.columns = columns;\r\n    this.std = std;\r\n    for(let i = 0, max = this.weights.length; i < max; i++) {\r\n      this.weights[i] = randomFloat(-std, std);\r\n    }\r\n  }\r\n}\r\n","import Matrix from './';\r\nimport ones from '../../utilities/ones';\r\n\r\n/** return Matrix but filled with random numbers from gaussian\r\n * @param {Number} [rows]\r\n * @param {Number} [columns]\r\n * @constructor\r\n */\r\nexport default class OnesMatrix extends Matrix {\r\n  constructor(rows, columns) {\r\n    super(rows, columns);\r\n    this.rows = rows;\r\n    this.columns = columns;\r\n    this.weights = ones(rows * columns);\r\n    this.deltas = ones(rows * columns);\r\n  }\r\n}\r\n","/*\r\n *\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n */\r\nexport default function copy(product, left) {\r\n  product.rows = parseInt(left.rows);\r\n  product.columns = parseInt(left.columns);\r\n  product.weights = left.weights.slice(0);\r\n  product.deltas = left.deltas.slice(0);\r\n}\r\n","/**\r\n *\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n */\r\nexport default function cloneNegative(product, left) {\r\n  product.rows = parseInt(left.rows);\r\n  product.columns = parseInt(left.columns);\r\n  product.weights = left.weights.slice(0);\r\n  product.deltas = left.deltas.slice(0);\r\n  for (let i = 0; i < left.weights.length; i++) {\r\n    product.weights[i] = -left.weights[i];\r\n    product.deltas[i] = 0;\r\n  }\r\n}\r\n","/**\r\n * add {left} and {right} matrix weights into {into}\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n * @param {Matrix} right\r\n */\r\nexport default function add(product, left, right) {\r\n  for(let i = 0; i < left.weights.length; i++) {\r\n    product.weights[i] = left.weights[i] + right.weights[i];\r\n    product.deltas[i] = 0;\r\n  }\r\n}","/**\r\n * adds {from} deltas to {left} and {right} deltas\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n * @param {Matrix} right\r\n */\r\nexport default function addB(product, left, right) {\r\n  for(let i = 0; i < product.deltas.length; i++) {\r\n    left.deltas[i] = product.deltas[i];\r\n    right.deltas[i] = product.deltas[i];\r\n  }\r\n}\r\n","/**\r\n * makes matrix weights and deltas all ones\r\n * @param {Matrix} product\r\n */\r\nexport default function allOnes(product) {\r\n  for(let i = 0; i < product.weights.length; i++) {\r\n    product.weights[i] = 1;\r\n    product.deltas[i] = 0;\r\n  }\r\n}\r\n","/**\r\n * multiply {left} and {right} matrix weights to {into}\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n * @param {Matrix} right\r\n */\r\nexport default function multiply(product, left, right) {\r\n  let leftRows = left.rows;\r\n  let leftColumns = left.columns;\r\n  let rightColumns = right.columns;\r\n\r\n  // loop over rows of left\r\n  for(let leftRow = 0; leftRow < leftRows; leftRow++) {\r\n    const leftRowBase = leftColumns * leftRow;\r\n    const rightRowBase = rightColumns * leftRow;\r\n    // loop over cols of right\r\n    for(let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\r\n\r\n      // dot product loop\r\n      let dot = 0;\r\n      //loop over columns of left\r\n      for(let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\r\n        const rightColumnBase = rightColumns * leftColumn;\r\n        const leftIndex = leftRowBase + leftColumn;\r\n        const rightIndex = rightColumnBase + rightColumn;\r\n        dot +=\r\n            left.weights[leftIndex]\r\n          * right.weights[rightIndex];\r\n        left.deltas[leftIndex] = 0;\r\n        right.deltas[rightIndex] = 0;\r\n      }\r\n      product.weights[rightRowBase + rightColumn] = dot;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * multiplies {from} deltas to {left} and {right}\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n * @param {Matrix} right\r\n */\r\nexport default function multiplyB(product, left, right) {\r\n  const leftRows = left.rows;\r\n  const leftColumns = left.columns;\r\n  const rightColumns = right.columns;\r\n\r\n  // loop over rows of left\r\n  for(let leftRow = 0; leftRow < leftRows; leftRow++) {\r\n    const leftRowBase = leftColumns * leftRow;\r\n    const rightRowBase = rightColumns * leftRow;\r\n    // loop over cols of right\r\n    for(let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\r\n\r\n      //loop over columns of left\r\n      for(let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\r\n        const rightColumnBase = rightColumns * leftColumn;\r\n        const leftRow = leftRowBase + leftColumn;\r\n        const rightRow = rightColumnBase + rightColumn;\r\n        const backPropagateValue = product.deltas[rightRowBase + rightColumn];\r\n        left.deltas[leftRow] += right.weights[rightRow] * backPropagateValue;\r\n        right.deltas[rightRow] += left.weights[leftRow] * backPropagateValue;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n * @param {Matrix} right\r\n */\r\nexport default function multiplyElement(product, left, right) {\r\n  const { weights } = left;\r\n  for(let i = 0; i < weights.length; i++) {\r\n    product.weights[i] = left.weights[i] * right.weights[i];\r\n    product.deltas[i] = 0;\r\n  }\r\n}\r\n","/**\r\n * multiplies {left} and {right} weight by {from} deltas into {left} and {right} deltas\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n * @param {Matrix} right\r\n */\r\nexport default function multiplyElementB(product, left, right) {\r\n  for(let i = 0; i < left.weights.length; i++) {\r\n    left.deltas[i] = right.weights[i] * product.deltas[i];\r\n    right.deltas[i] = left.weights[i] * product.deltas[i];\r\n  }\r\n}\r\n","/**\r\n *\r\n * relu {m} weights to {into} weights\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n */\r\nexport default function relu(product, left) {\r\n  for(let i = 0; i < left.weights.length; i++) {\r\n    product.weights[i] = Math.max(0, left.weights[i]); // relu\r\n    product.deltas[i] = 0;\r\n  }\r\n}\r\n","/**\r\n * adds {from} deltas to {m} deltas when {m} weights are above other a threshold of 0\r\n * @param {Matrix} product\r\n * @param {Matrix} m\r\n */\r\nexport default function reluB(product, left) {\r\n  for(let i = 0; i < product.deltas.length; i++) {\r\n    left.deltas[i] = left.weights[i] > 0 ? product.deltas[i] : 0;\r\n  }\r\n}\r\n","/**\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n * @param {Number} rowPluckIndex\r\n */\r\nexport default function rowPluck(product, left, rowPluckIndex) {\r\n  const columns = left.columns;\r\n  const rowBase = columns * rowPluckIndex;\r\n  for (let column = 0; column < columns; column++) {\r\n    product.weights[column] = left.weights[rowBase + column];\r\n    product.deltas[column] = 0;\r\n  }\r\n}\r\n","/**\r\n * adds {from} deltas into {m} deltas\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n * @param {Number} rowIndex\r\n */\r\nexport default function rowPluckB(product, left, rowIndex) {\r\n  const columns = left.columns;\r\n  const rowBase = columns * rowIndex;\r\n  for (let column = 0; column < columns; column++) {\r\n    left.deltas[rowBase + column] = product.deltas[column];\r\n  }\r\n}\r\n","/**\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n */\r\nexport default function sigmoid(product, left) {\r\n  // sigmoid nonlinearity\r\n  for(let i=0; i < left.weights.length; i++) {\r\n    product.weights[i] = 1 / ( 1 + Math.exp(-left.weights[i]));\r\n    product.deltas[i] = 0;\r\n  }\r\n}\r\n\r\n\r\nfunction sig(x) {\r\n  // helper function for computing sigmoid\r\n  return 1 / (1 + Math.exp(-x));\r\n}","/**\r\n *\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n */\r\nexport default function sigmoidB(product, left) {\r\n  for(let i = 0; i < product.deltas.length; i++) {\r\n    let mwi = product.weights[i];\r\n    left.deltas[i] = mwi * (1 - mwi) * product.deltas[i];\r\n  }\r\n}\r\n","/**\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n */\r\nexport default function tanh(product, left) {\r\n  // tanh nonlinearity\r\n  for(let i = 0; i < left.weights.length; i++) {\r\n    product.weights[i] = Math.tanh(left.weights[i]);\r\n    product.deltas[i] = 0;\r\n  }\r\n}\r\n","/**\r\n *\r\n * @param {Matrix} product\r\n * @param {Matrix} left\r\n */\r\nexport default function tanhB(product, left) {\r\n  for(let i = 0; i < product.deltas.length; i++) {\r\n    // grad for z = tanh(x) is (1 - z^2)\r\n    let mwi = product.weights[i];\r\n    left.deltas[i] = (1 - mwi * mwi) * product.deltas[i];\r\n  }\r\n}\r\n","import Matrix from './';\r\nimport OnesMatrix from './ones-matrix';\r\nimport copy from './copy';\r\nimport cloneNegative from './clone-negative';\r\nimport add from './add';\r\nimport addB from './add-b';\r\nimport allOnes from './all-ones';\r\nimport multiply from './multiply';\r\nimport multiplyB from './multiply-b';\r\nimport multiplyElement from './multiply-element';\r\nimport multiplyElementB from './multiply-element-b';\r\nimport relu from './relu';\r\nimport reluB from './relu-b';\r\nimport rowPluck from './row-pluck';\r\nimport rowPluckB from './row-pluck-b';\r\nimport sigmoid from './sigmoid';\r\nimport sigmoidB from './sigmoid-b';\r\nimport tanh from './tanh';\r\nimport tanhB from './tanh-b';\r\n\r\nexport default class Equation {\r\n  constructor() {\r\n    this.inputRow = 0;\r\n    this.inputValue = null;\r\n    this.states = [];\r\n  }\r\n\r\n  /**\r\n   * connects two matrices together by add\r\n   * @param {Matrix} left\r\n   * @param {Matrix} right\r\n   * @returns {Matrix}\r\n   */\r\n  add(left, right) {\r\n    if (left.weights.length !== right.weights.length) {\r\n      throw new Error('misaligned matrices');\r\n    }\r\n    let product = new Matrix(left.rows, left.columns);\r\n    this.states.push({\r\n      left: left,\r\n      right: right,\r\n      product: product,\r\n      forwardFn: add,\r\n      backpropagationFn: addB\r\n    });\r\n    return product;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Number} rows\r\n   * @param {Number} columns\r\n   * @returns {Matrix}\r\n   */\r\n  allOnes(rows, columns) {\r\n    let product = new Matrix(rows, columns);\r\n    this.states.push({\r\n      left: product,\r\n      product: product,\r\n      forwardFn: allOnes\r\n    });\r\n    return product;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Matrix} m\r\n   * @returns {Matrix}\r\n   */\r\n  cloneNegative(m) {\r\n    let product = new Matrix(m.rows, m.columns);\r\n    this.states.push({\r\n      left: m,\r\n      product: product,\r\n      forwardFn: cloneNegative\r\n    });\r\n    return product;\r\n  }\r\n\r\n  /**\r\n   * connects two matrices together by subtract\r\n   * @param {Matrix} left\r\n   * @param {Matrix} right\r\n   * @returns {Matrix}\r\n   */\r\n  subtract(left, right) {\r\n    if (left.weights.length !== right.weights.length) {\r\n      throw new Error('misaligned matrices');\r\n    }\r\n    return this.add(this.add(this.allOnes(left.rows, left.columns), this.cloneNegative(left)), right);\r\n  }\r\n\r\n  /**\r\n   * connects two matrices together by multiply\r\n   * @param {Matrix} left\r\n   * @param {Matrix} right\r\n   * @returns {Matrix}\r\n   */\r\n  multiply(left, right) {\r\n    if (left.columns !== right.rows) {\r\n      throw new Error('misaligned matrices');\r\n    }\r\n    let product = new Matrix(left.rows, right.columns);\r\n    this.states.push({\r\n      left: left,\r\n      right: right,\r\n      product: product,\r\n      forwardFn: multiply,\r\n      backpropagationFn: multiplyB\r\n    });\r\n    return product;\r\n  }\r\n\r\n  /**\r\n   * connects two matrices together by multiplyElement\r\n   * @param {Matrix} left\r\n   * @param {Matrix} right\r\n   * @returns {Matrix}\r\n   */\r\n  multiplyElement(left, right) {\r\n    if (left.weights.length !== right.weights.length) {\r\n      throw new Error('misaligned matrices');\r\n    }\r\n    let product = new Matrix(left.rows, left.columns);\r\n    this.states.push({\r\n      left: left,\r\n      right: right,\r\n      product: product,\r\n      forwardFn: multiplyElement,\r\n      backpropagationFn: multiplyElementB\r\n    });\r\n    return product;\r\n  }\r\n\r\n  /**\r\n   * connects a matrix to relu\r\n   * @param {Matrix} m\r\n   * @returns {Matrix}\r\n   */\r\n  relu(m) {\r\n    let product = new Matrix(m.rows, m.columns);\r\n    this.states.push({\r\n      left: m,\r\n      product: product,\r\n      forwardFn: relu,\r\n      backpropagationFn: reluB\r\n    });\r\n    return product;\r\n  }\r\n\r\n  /**\r\n   * copy a matrix\r\n   * @param {Matrix} input\r\n   * @returns {Matrix}\r\n   */\r\n  input(input) {\r\n    const self = this;\r\n    this.states.push({\r\n      product: input,\r\n      forwardFn: () => {\r\n        input.weights = self.inputValue;\r\n      }\r\n    });\r\n    return input;\r\n  }\r\n\r\n  /**\r\n   * connects a matrix via a row\r\n   * @param {Matrix} m\r\n   * @returns {Matrix}\r\n   */\r\n  inputMatrixToRow(m) {\r\n    let self = this;\r\n    let product = new Matrix(m.columns, 1);\r\n    this.states.push({\r\n      left: m,\r\n      get right () {\r\n        return self.inputRow;\r\n      },\r\n      product: product,\r\n      forwardFn: rowPluck,\r\n      backpropagationFn: rowPluckB\r\n    });\r\n    return product;\r\n  }\r\n\r\n  /**\r\n   * connects a matrix to sigmoid\r\n   * @param {Matrix} m\r\n   * @returns {Matrix}\r\n   */\r\n  sigmoid(m) {\r\n    let product = new Matrix(m.rows, m.columns);\r\n    this.states.push({\r\n      left: m,\r\n      product: product,\r\n      forwardFn: sigmoid,\r\n      backpropagationFn: sigmoidB\r\n    });\r\n    return product;\r\n  }\r\n\r\n  /**\r\n   * connects a matrix to tanh\r\n   * @param {Matrix} m\r\n   * @returns {Matrix}\r\n   */\r\n  tanh(m) {\r\n    let product = new Matrix(m.rows, m.columns);\r\n    this.states.push({\r\n      left: m,\r\n      product: product,\r\n      forwardFn: tanh,\r\n      backpropagationFn: tanhB\r\n    });\r\n    return product;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param m\r\n   * @returns {Matrix}\r\n   */\r\n  observe(m) {\r\n    let iForward = 0;\r\n    let iBackpropagate = 0;\r\n    this.states.push({\r\n      forwardFn: function() {\r\n        iForward++;\r\n      },\r\n      backpropagationFn: function() {\r\n        iBackpropagate++;\r\n      }\r\n    });\r\n    return m;\r\n  }\r\n\r\n  /**\r\n   * @patam {Number} [rowIndex]\r\n   * @output {Matrix}\r\n   */\r\n  run(rowIndex = 0) {\r\n    this.inputRow = rowIndex;\r\n    let state;\r\n    for (let i = 0, max = this.states.length; i < max; i++) {\r\n      state = this.states[i];\r\n      if (!state.hasOwnProperty('forwardFn')) {\r\n        continue;\r\n      }\r\n      state.forwardFn(state.product, state.left, state.right);\r\n    }\r\n\r\n    return state.product;\r\n  }\r\n\r\n  /**\r\n   * @patam {Number} [rowIndex]\r\n   * @output {Matrix}\r\n   */\r\n  runInput(inputValue) {\r\n    this.inputValue = inputValue;\r\n    let state;\r\n    for (let i = 0, max = this.states.length; i < max; i++) {\r\n      state = this.states[i];\r\n      if (!state.hasOwnProperty('forwardFn')) {\r\n        continue;\r\n      }\r\n      state.forwardFn(state.product, state.left, state.right);\r\n    }\r\n\r\n    return state.product;\r\n  }\r\n\r\n  /**\r\n   * @patam {Number} [rowIndex]\r\n   * @output {Matrix}\r\n   */\r\n  runBackpropagate(rowIndex = 0) {\r\n    this.inputRow = rowIndex;\r\n\r\n    let i = this.states.length;\r\n    let state;\r\n    while (i-- > 0) {\r\n      state = this.states[i];\r\n      if (!state.hasOwnProperty('backpropagationFn')) {\r\n        continue;\r\n      }\r\n      state.backpropagationFn(state.product, state.left, state.right);\r\n    }\r\n\r\n    return state.product;\r\n  }\r\n}\r\n","import { randomF as _randomF } from '../../utilities/random';\r\n\r\n//prevent parser from renaming when calling toString() method later\r\nconst randomF = _randomF;\r\n/**\r\n *\r\n * @param {Matrix} m\r\n * @returns {number}\r\n */\r\nexport default function sampleI(m) {\r\n  // sample argmax from w, assuming w are\r\n  // probabilities that sum to one\r\n  let r = randomF(0, 1);\r\n  let x = 0;\r\n  let i = 0;\r\n  let w = m.weights;\r\n\r\n  while (true) {\r\n    x += w[i];\r\n    if(x > r) {\r\n      return i;\r\n    }\r\n    i++;\r\n  }\r\n}","/**\r\n *\r\n * @param {Matrix} m\r\n * @returns {number}\r\n */\r\nexport default function maxI(m) {\r\n  // argmax of array w\r\n  let { weights } = m;\r\n  let maxv = weights[0];\r\n  let maxix = 0;\r\n  for (let i = 1; i < weights.length; i++) {\r\n    let v = weights[i];\r\n    if (v < maxv) continue;\r\n\r\n    maxix = i;\r\n    maxv = v;\r\n  }\r\n  return maxix;\r\n};\r\n","import Matrix from './';\r\n\r\n/**\r\n *\r\n * @param {Matrix} m\r\n * @returns {Matrix}\r\n */\r\nexport default function softmax(m) {\r\n  let result = new Matrix(m.rows, m.columns); // probability volume\r\n  let maxVal = -999999;\r\n  for (let i = 0; i < m.weights.length; i++) {\r\n    if(m.weights[i] > maxVal) {\r\n      maxVal = m.weights[i];\r\n    }\r\n  }\r\n\r\n  let s = 0;\r\n  for (let i = 0; i < m.weights.length; i++) {\r\n    result.weights[i] = Math.exp(m.weights[i] - maxVal);\r\n    s += result.weights[i];\r\n  }\r\n\r\n  for (let i = 0; i < m.weights.length; i++) {\r\n    result.weights[i] /= s;\r\n  }\r\n\r\n  // no backward pass here needed\r\n  // since we will use the computed probabilities outside\r\n  // to set gradients directly on m\r\n  return result;\r\n}\r\n","/**\r\n *\r\n * @param {String[]|Number[]} values\r\n * @param maxThreshold\r\n * @constructor\r\n */\r\nexport default class DataFormatter {\r\n  constructor(values, maxThreshold = 0) {\r\n    if (values === undefined) return;\r\n\r\n    this.values = values;\r\n    // go over all characters and keep track of all unique ones seen\r\n    // count up all characters\r\n    this.indexTable = {};\r\n    this.characterTable = {};\r\n    this.characters = [];\r\n    this.buildCharactersFromIterable(values);\r\n    this.buildTables(maxThreshold);\r\n  }\r\n\r\n  buildCharactersFromIterable(values) {\r\n    let tempCharactersTable = {};\r\n    for (let dataFormatterIndex = 0, dataFormatterLength = values.length; dataFormatterIndex < dataFormatterLength; dataFormatterIndex++) {\r\n      let characters = values[dataFormatterIndex];\r\n\r\n      if (characters.hasOwnProperty('length')) {\r\n        for (let characterIndex = 0, charactersLength = characters.length; characterIndex < charactersLength; characterIndex++) {\r\n          let character = characters[characterIndex];\r\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\r\n          tempCharactersTable[character] = true;\r\n          this.characters.push(character);\r\n        }\r\n      } else {\r\n        let character = values[dataFormatterIndex];\r\n        if (tempCharactersTable.hasOwnProperty(character)) continue;\r\n        tempCharactersTable[dataFormatterIndex] = true;\r\n        this.characters.push(character);\r\n      }\r\n    }\r\n  }\r\n\r\n  buildTables(maxThreshold) {\r\n    // filter by count threshold and create pointers\r\n    let charactersLength = this.characters.length;\r\n    for(let characterIndex = 0; characterIndex < charactersLength; characterIndex++) {\r\n      let character = this.characters[characterIndex];\r\n      if(characterIndex >= maxThreshold) {\r\n        // add character to dataFormatter\r\n        this.indexTable[character] = characterIndex;\r\n        this.characterTable[characterIndex] = character;\r\n      }\r\n    }\r\n  }\r\n\r\n  toIndexes(value, maxThreshold = 0) {\r\n    let result = [];\r\n    let indexTable = this.indexTable;\r\n\r\n    for (let i = 0, max = value.length; i < max; i++) {\r\n      let character = value[i];\r\n      let index = indexTable[character];\r\n      if (index === undefined) {\r\n        throw new Error(`unrecognized character \"${ character }\"`);\r\n      }\r\n      if (index < maxThreshold) continue;\r\n      result.push(index);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  toIndexesInputOutput(value1, value2 = null, maxThreshold = 0) {\r\n    let result;\r\n    if (typeof value1 === 'string') {\r\n      result = this.toIndexes(value1.split('').concat(['stop-input', 'start-output']), maxThreshold);\r\n    } else {\r\n      result = this.toIndexes(value1.concat(['stop-input', 'start-output']), maxThreshold);\r\n    }\r\n    \r\n    if (value2 === null) return result;\r\n\r\n    if (typeof value2 === 'string') {\r\n      return result.concat(this.toIndexes(value2.split(''), maxThreshold));\r\n    } else {\r\n      return result.concat(this.toIndexes(value2, maxThreshold));\r\n    }\r\n  }\r\n\r\n  toCharacters(indices, maxThreshold = 0) {\r\n    let result = [];\r\n    let characterTable = this.characterTable;\r\n\r\n    for (let i = 0, max = indices.length; i < max; i++) {\r\n      let index = indices[i];\r\n      if (index < maxThreshold) continue;\r\n      let character = characterTable[index];\r\n      if (character === undefined) {\r\n        throw new Error(`unrecognized index \"${ index }\"`);\r\n      }\r\n      result.push(character);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  toString(indices, maxThreshold) {\r\n    return this.toCharacters(indices, maxThreshold).join('');\r\n  }\r\n\r\n  addInputOutput() {\r\n    this.addSpecial('stop-input');\r\n    this.addSpecial('start-output');\r\n  }\r\n\r\n  static fromAllPrintable(maxThreshold, values = ['\\n']) {\r\n    for(let i = 32; i <= 126; i++) {\r\n      values.push(String.fromCharCode(i));\r\n    }\r\n    return new DataFormatter(values, maxThreshold);\r\n  }\r\n\r\n  static fromAllPrintableInputOutput(maxThreshold, values = ['\\n']) {\r\n    const dataFormatter = DataFormatter.fromAllPrintable(maxThreshold, values);\r\n    dataFormatter.addInputOutput();\r\n    return dataFormatter;\r\n  }\r\n\r\n  static fromStringInputOutput(string, maxThreshold) {\r\n    const values = String.prototype.concat(...new Set(string));\r\n    const dataFormatter = new DataFormatter(values, maxThreshold);\r\n    dataFormatter.addInputOutput();\r\n    return dataFormatter;\r\n  }\r\n\r\n  static fromArrayInputOutput(array, maxThreshold) {\r\n    const dataFormatter = new DataFormatter(array.filter((v, i, a) => a.indexOf(v) === i).sort(), maxThreshold);\r\n    dataFormatter.addInputOutput();\r\n    return dataFormatter;\r\n  }\r\n\r\n  static fromString(string, maxThreshold) {\r\n    const values = String.prototype.concat(...new Set(string));\r\n    return new DataFormatter(values, maxThreshold);\r\n  }\r\n\r\n  static fromJSON(json) {\r\n    const dataFormatter = new DataFormatter();\r\n    dataFormatter.indexTable = json.indexTable;\r\n    dataFormatter.characterTable = json.characterTable;\r\n    dataFormatter.values = json.values;\r\n    dataFormatter.characters = json.characters;\r\n    return dataFormatter;\r\n  }\r\n\r\n  addSpecial() {\r\n    for (let i = 0; i < arguments.length; i++) {\r\n      const special = arguments[i];\r\n      let specialIndex = this.indexTable[special] = this.characters.length;\r\n      this.characterTable[specialIndex] = special;\r\n      this.characters.push(special);\r\n    }\r\n  }\r\n\r\n  toFunctionString() {\r\n    return `\r\nvar characterTable = ${ JSON.stringify(this.characterTable) };\r\nvar indexTable = ${ JSON.stringify(this.indexTable) };\r\nvar characters = ${ JSON.stringify(this.characters) };\r\n${ this.toIndexes.toString()\r\n      .replace(/(let|var) indexTable = this[.]indexTable;\\n/, '')\r\n      .replace(/this[.]/g, '') }\r\n${ this.toIndexesInputOutput.toString().replace(/this[.]/g, '') }\r\n${ this.toCharacters.toString()\r\n      .replace(/(let|var) characterTable = this[.]characterTable;\\n/g, '')\r\n      .replace(/this[.]/, '') }\r\n`;\r\n  }\r\n}\r\n","import Matrix from './matrix';\r\nimport RandomMatrix from './matrix/random-matrix';\r\nimport Equation from './matrix/equation';\r\nimport sampleI from './matrix/sample-i';\r\nimport maxI from './matrix/max-i';\r\nimport softmax from './matrix/softmax';\r\nimport copy from './matrix/copy';\r\nimport { randomF } from '../utilities/random';\r\nimport zeros from '../utilities/zeros';\r\nimport DataFormatter from '../utilities/data-formatter';\r\n\r\nexport default class RNN {\r\n  constructor(options = {}) {\r\n    const defaults = this.constructor.defaults;\r\n\r\n    Object.assign(this, defaults, options)\r\n\r\n    this.stepCache = {};\r\n    this.runs = 0;\r\n    this.totalCost = null;\r\n    this.ratioClipped = null;\r\n    this.model = null;\r\n\r\n    this.initialLayerInputs = this.hiddenSizes.map((size) => new Matrix(this.hiddenSizes[0], 1));\r\n    this.inputLookup = null;\r\n    this.outputLookup = null;\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.model = {\r\n      input: null,\r\n      hiddenLayers: [],\r\n      output: null,\r\n      equations: [],\r\n      allMatrices: [],\r\n      equationConnections: []\r\n    };\r\n\r\n    if (this.dataFormatter !== null) {\r\n      this.inputSize =\r\n      this.inputRange =\r\n      this.outputSize = this.dataFormatter.characters.length;\r\n    }\r\n\r\n    if (this.json) {\r\n      this.fromJSON(this.json);\r\n    } else {\r\n      this.mapModel();\r\n    }\r\n  }\r\n\r\n  createHiddenLayers() {\r\n    let hiddenSizes = this.hiddenSizes;\r\n    let model = this.model;\r\n    let hiddenLayers = model.hiddenLayers;\r\n    //0 is end, so add 1 to offset\r\n    hiddenLayers.push(this.getModel(hiddenSizes[0], this.inputSize));\r\n    let prevSize = hiddenSizes[0];\r\n\r\n    for (let d = 1; d < hiddenSizes.length; d++) { // loop over depths\r\n      let hiddenSize = hiddenSizes[d];\r\n      hiddenLayers.push(this.getModel(hiddenSize, prevSize));\r\n      prevSize = hiddenSize;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Number} hiddenSize\r\n   * @param {Number} prevSize\r\n   * @returns {object}\r\n   */\r\n  getModel(hiddenSize, prevSize) {\r\n    return {\r\n      //wxh\r\n      weight: new RandomMatrix(hiddenSize, prevSize, 0.08),\r\n      //whh\r\n      transition: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\r\n      //bhh\r\n      bias: new Matrix(hiddenSize, 1)\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Equation} equation\r\n   * @param {Matrix} inputMatrix\r\n   * @param {Matrix} previousResult\r\n   * @param {Object} hiddenLayer\r\n   * @returns {Matrix}\r\n   */\r\n  getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\r\n    let relu = equation.relu.bind(equation);\r\n    let add = equation.add.bind(equation);\r\n    let multiply = equation.multiply.bind(equation);\r\n\r\n    return relu(\r\n      add(\r\n        add(\r\n          multiply(\r\n            hiddenLayer.weight,\r\n            inputMatrix\r\n          ),\r\n          multiply(\r\n            hiddenLayer.transition,\r\n            previousResult\r\n          )\r\n        ),\r\n        hiddenLayer.bias\r\n      )\r\n    );\r\n  }\r\n\r\n  createInputMatrix() {\r\n    //0 is end, so add 1 to offset\r\n    this.model.input = new RandomMatrix(this.inputRange + 1, this.inputSize, 0.08);\r\n  }\r\n\r\n  createOutputMatrix() {\r\n    let model = this.model;\r\n    let outputSize = this.outputSize;\r\n    let lastHiddenSize = this.hiddenSizes[this.hiddenSizes.length - 1];\r\n\r\n    //0 is end, so add 1 to offset\r\n    //whd\r\n    model.outputConnector = new RandomMatrix(outputSize + 1, lastHiddenSize, 0.08);\r\n    //0 is end, so add 1 to offset\r\n    //bd\r\n    model.output = new Matrix(outputSize + 1, 1);\r\n  }\r\n\r\n  bindEquation() {\r\n    let model = this.model;\r\n    let hiddenSizes = this.hiddenSizes;\r\n    let hiddenLayers = model.hiddenLayers;\r\n    let equation = new Equation();\r\n    let outputs = [];\r\n    let equationConnection = model.equationConnections.length > 0\r\n      ? model.equationConnections[model.equationConnections.length - 1]\r\n      : this.initialLayerInputs\r\n      ;\r\n\r\n      // 0 index\r\n    let output = this.getEquation(equation, equation.inputMatrixToRow(model.input), equationConnection[0], hiddenLayers[0]);\r\n    outputs.push(output);\r\n    // 1+ indices\r\n    for (let i = 1, max = hiddenSizes.length; i < max; i++) {\r\n      output = this.getEquation(equation, output, equationConnection[i], hiddenLayers[i]);\r\n      outputs.push(output);\r\n    }\r\n\r\n    model.equationConnections.push(outputs);\r\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\r\n    model.equations.push(equation);\r\n  }\r\n\r\n  mapModel() {\r\n    let model = this.model;\r\n    let hiddenLayers = model.hiddenLayers;\r\n    let allMatrices = model.allMatrices;\r\n\r\n    this.createInputMatrix();\r\n    if (!model.input) throw new Error('net.model.input not set');\r\n    allMatrices.push(model.input);\r\n\r\n    this.createHiddenLayers();\r\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\r\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\r\n      let hiddenMatrix = hiddenLayers[i];\r\n      for (let property in hiddenMatrix) {\r\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\r\n        allMatrices.push(hiddenMatrix[property]);\r\n      }\r\n    }\r\n\r\n    this.createOutputMatrix();\r\n    if (!model.outputConnector) throw new Error('net.model.outputConnector not set');\r\n    if (!model.output) throw new Error('net.model.output not set');\r\n\r\n    allMatrices.push(model.outputConnector);\r\n    allMatrices.push(model.output);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Number[]} input\r\n   * @param {Number} [learningRate]\r\n   * @returns {number}\r\n   */\r\n  trainPattern(input, learningRate = null) {\r\n    const error = this.runInput(input);\r\n    this.runBackpropagate(input);\r\n    this.step(learningRate);\r\n    return error;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Number[]} input\r\n   * @returns {number}\r\n   */\r\n  runInput(input) {\r\n    this.runs++;\r\n    let model = this.model;\r\n    let max = input.length;\r\n    let log2ppl = 0;\r\n    let cost = 0;\r\n    let equation;\r\n    while (model.equations.length <= input.length + 1) {//last is zero\r\n      this.bindEquation();\r\n    }\r\n    for (let inputIndex = -1, inputMax = input.length; inputIndex < inputMax; inputIndex++) {\r\n      // start and end tokens are zeros\r\n      let equationIndex = inputIndex + 1;\r\n      equation = model.equations[equationIndex];\r\n\r\n      let source = (inputIndex === -1 ? 0 : input[inputIndex] + 1); // first step: start with START token\r\n      let target = (inputIndex === max - 1 ? 0 : input[inputIndex + 1] + 1); // last step: end with END token\r\n      let output = equation.run(source);\r\n      // set gradients into log probabilities\r\n      let logProbabilities = output; // interpret output as log probabilities\r\n      let probabilities = softmax(output); // compute the softmax probabilities\r\n\r\n      log2ppl += -Math.log2(probabilities.weights[target]); // accumulate base 2 log prob and do smoothing\r\n      cost += -Math.log(probabilities.weights[target]);\r\n      // write gradients into log probabilities\r\n      logProbabilities.deltas = probabilities.weights.slice(0);\r\n      logProbabilities.deltas[target] -= 1;\r\n    }\r\n\r\n    this.totalCost = cost;\r\n    return Math.pow(2, log2ppl / (max - 1));\r\n  }\r\n\r\n  /**\r\n   * @param {Number[]} input\r\n   */\r\n  runBackpropagate(input) {\r\n    let i = input.length;\r\n    let model = this.model;\r\n    let equations = model.equations;\r\n    while(i > 0) {\r\n      equations[i].runBackpropagate(input[i - 1] + 1);\r\n      i--;\r\n    }\r\n    equations[0].runBackpropagate(0);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Number} [learningRate]\r\n   */\r\n  step(learningRate = null) {\r\n    // perform parameter update\r\n    //TODO: still not sure if this is ready for learningRate\r\n    let stepSize = this.learningRate;\r\n    let regc = this.regc;\r\n    let clipval = this.clipval;\r\n    let model = this.model;\r\n    let numClipped = 0;\r\n    let numTot = 0;\r\n    let allMatrices = model.allMatrices;\r\n    for (let matrixIndex = 0; matrixIndex < allMatrices.length; matrixIndex++) {\r\n      const matrix = allMatrices[matrixIndex];\r\n      const { weights, deltas }  = matrix;\r\n      if (!(matrixIndex in this.stepCache)) {\r\n        this.stepCache[matrixIndex] = zeros(matrix.rows * matrix.columns);\r\n      }\r\n      const cache = this.stepCache[matrixIndex];\r\n      for (let i = 0; i < weights.length; i++) {\r\n        let r = deltas[i];\r\n        let w = weights[i];\r\n        // rmsprop adaptive learning rate\r\n        cache[i] = cache[i] * this.decayRate + (1 - this.decayRate) * r * r;\r\n        // gradient clip\r\n        if (r > clipval) {\r\n          r = clipval;\r\n          numClipped++;\r\n        }\r\n        if (r < -clipval) {\r\n          r = -clipval;\r\n          numClipped++;\r\n        }\r\n        numTot++;\r\n        // update (and regularize)\r\n        weights[i] = w + -stepSize * r / Math.sqrt(cache[i] + this.smoothEps) - regc * w;\r\n      }\r\n    }\r\n    this.ratioClipped = numClipped / numTot;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @returns boolean\r\n   */\r\n  get isRunnable(){\r\n    if(this.model.equations.length === 0){\r\n      console.error(`No equations bound, did you run train()?`);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  /**\r\n   *\r\n   * @param {Number[]|*} [rawInput]\r\n   * @param {Number} [maxPredictionLength]\r\n   * @param {Boolean} [isSampleI]\r\n   * @param {Number} temperature\r\n   * @returns {*}\r\n   */\r\n  run(rawInput = [], maxPredictionLength = 100, isSampleI = false, temperature = 1) {\r\n    if (!this.isRunnable) return null;\r\n    const input = this.formatDataIn(rawInput);\r\n    const model = this.model;\r\n    const output = [];\r\n    let i = 0;\r\n    while (model.equations.length < maxPredictionLength) {\r\n      this.bindEquation();\r\n    }\r\n    while (true) {\r\n      let previousIndex = (i === 0\r\n        ? 0\r\n        : i < input.length\r\n          ? input[i - 1] + 1\r\n          : output[i - 1])\r\n          ;\r\n      let equation = model.equations[i];\r\n      // sample predicted letter\r\n      let outputMatrix = equation.run(previousIndex);\r\n      let logProbabilities = new Matrix(model.output.rows, model.output.columns);\r\n      copy(logProbabilities, outputMatrix);\r\n      if (temperature !== 1 && isSampleI) {\r\n        /**\r\n         * scale log probabilities by temperature and re-normalize\r\n         * if temperature is high, logProbabilities will go towards zero\r\n         * and the softmax outputs will be more diffuse. if temperature is\r\n         * very low, the softmax outputs will be more peaky\r\n         */\r\n        for (let j = 0, max = logProbabilities.weights.length; j < max; j++) {\r\n          logProbabilities.weights[j] /= temperature;\r\n        }\r\n      }\r\n\r\n      let probs = softmax(logProbabilities);\r\n      let nextIndex = (isSampleI ? sampleI(probs) : maxI(probs));\r\n\r\n      i++;\r\n      if (nextIndex === 0) {\r\n        // END token predicted, break out\r\n        break;\r\n      }\r\n      if (i >= maxPredictionLength) {\r\n        // something is wrong\r\n        break;\r\n      }\r\n\r\n      output.push(nextIndex);\r\n    }\r\n\r\n    /**\r\n     * we slice the input length here, not because output contains it, but it will be erroneous as we are sending the\r\n     * network what is contained in input, so the data is essentially guessed by the network what could be next, till it\r\n     * locks in on a value.\r\n     * Kind of like this, values are from input:\r\n     * 0 -> 4 (or in English: \"beginning on input\" -> \"I have no idea? I'll guess what they want next!\")\r\n     * 2 -> 2 (oh how interesting, I've narrowed down values...)\r\n     * 1 -> 9 (oh how interesting, I've now know what the values are...)\r\n     * then the output looks like: [4, 2, 9,...]\r\n     * so we then remove the erroneous data to get our true output\r\n     */\r\n    return this.formatDataOut(\r\n      input,\r\n      output\r\n        .slice(input.length)\r\n        .map(value => value - 1)\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\r\n   * @param {Object} [options]\r\n   * @returns {{error: number, iterations: number}}\r\n   */\r\n  train(data, options = {}) {\r\n    options = Object.assign({}, this.constructor.trainDefaults, options);\r\n    let iterations = options.iterations;\r\n    let errorThresh = options.errorThresh;\r\n    let log = options.log === true ? console.log : options.log;\r\n    let logPeriod = options.logPeriod;\r\n    let learningRate = options.learningRate || this.learningRate;\r\n    let callback = options.callback;\r\n    let callbackPeriod = options.callbackPeriod;\r\n    let error = Infinity;\r\n    let i;\r\n\r\n    if (this.hasOwnProperty('setupData')) {\r\n      data = this.setupData(data);\r\n    }\r\n\r\n    if (!options.keepNetworkIntact) {\r\n      this.initialize();\r\n    }\r\n\r\n    for (i = 0; i < iterations && error > errorThresh; i++) {\r\n      let sum = 0;\r\n      for (let j = 0; j < data.length; j++) {\r\n        let err = this.trainPattern(data[j], learningRate);\r\n        sum += err;\r\n      }\r\n      error = sum / data.length;\r\n\r\n      if (isNaN(error)) throw new Error('network error rate is unexpected NaN, check network configurations and try again');\r\n      if (log && (i % logPeriod == 0)) {\r\n        log('iterations:', i, 'training error:', error);\r\n      }\r\n      if (callback && (i % callbackPeriod == 0)) {\r\n        callback({ error: error, iterations: i });\r\n      }\r\n    }\r\n\r\n    return {\r\n      error: error,\r\n      iterations: i\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @returns {\r\n   *  {\r\n   *    error: number,\r\n   *    misclasses: Array\r\n   *  }\r\n   * }\r\n   */\r\n  test(data) {\r\n    throw new Error('not yet implemented');\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Object}\r\n   */\r\n  toJSON() {\r\n    const defaults = this.constructor.defaults;\r\n    let model = this.model;\r\n    let options = {};\r\n    for (let p in defaults) {\r\n      options[p] = this[p];\r\n    }\r\n\r\n    return {\r\n      type: this.constructor.name,\r\n      options: options,\r\n      input: model.input.toJSON(),\r\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\r\n        let layers = {};\r\n        for (let p in hiddenLayer) {\r\n          layers[p] = hiddenLayer[p].toJSON();\r\n        }\r\n        return layers;\r\n      }),\r\n      outputConnector: this.model.outputConnector.toJSON(),\r\n      output: this.model.output.toJSON()\r\n    };\r\n  }\r\n\r\n  toJSONString() {\r\n    return JSON.stringify(this.toJSON());\r\n  }\r\n\r\n  fromJSON(json) {\r\n    this.json = json;\r\n    const defaults = this.constructor.defaults;\r\n    let model = this.model;\r\n    let options = json.options;\r\n    let allMatrices = model.allMatrices;\r\n    model.input = Matrix.fromJSON(json.input);\r\n    allMatrices.push(model.input);\r\n    model.hiddenLayers = json.hiddenLayers.map((hiddenLayer) => {\r\n      let layers = {};\r\n      for (let p in hiddenLayer) {\r\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\r\n        allMatrices.push(layers[p]);\r\n      }\r\n      return layers;\r\n    });\r\n    model.outputConnector = Matrix.fromJSON(json.outputConnector);\r\n    model.output = Matrix.fromJSON(json.output);\r\n    allMatrices.push(model.outputConnector);\r\n    allMatrices.push(model.output);\r\n\r\n    for (let p in defaults) {\r\n      if (!defaults.hasOwnProperty(p)) continue;\r\n      this[p] = options.hasOwnProperty(p) ? options[p] : defaults[p];\r\n    }\r\n\r\n    if (options.hasOwnProperty('dataFormatter') && options.dataFormatter !== null) {\r\n      this.dataFormatter = DataFormatter.fromJSON(options.dataFormatter);\r\n      delete options.dataFormatter;\r\n    }\r\n\r\n    this.bindEquation();\r\n  }\r\n\r\n  fromJSONString(json) {\r\n    return this.fromJSON(JSON.parse(json));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Function}\r\n   */\r\n  toFunction() {\r\n    let model = this.model;\r\n    let equations = this.model.equations;\r\n    let equation = equations[1];\r\n    let states = equation.states;\r\n    let jsonString = JSON.stringify(this.toJSON());\r\n\r\n    function matrixOrigin(m, stateIndex) {\r\n      for (let i = 0, max = states.length; i < max; i++) {\r\n        let state = states[i];\r\n\r\n        if (i === stateIndex) {\r\n          let j = previousConnectionIndex(m);\r\n          switch (m) {\r\n            case state.left:\r\n              if (j > -1) {\r\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\r\n              }\r\n            case state.right:\r\n              if (j > -1) {\r\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\r\n              }\r\n            case state.product:\r\n              return `new Matrix(${ m.rows }, ${ m.columns })`;\r\n            default:\r\n              throw Error('unknown state');\r\n          }\r\n        }\r\n\r\n        if (m === state.product) return `states[${ i }].product`;\r\n        if (m === state.right) return `states[${ i }].right`;\r\n        if (m === state.left) return `states[${ i }].left`;\r\n      }\r\n    }\r\n\r\n    function previousConnectionIndex(m) {\r\n      const connection = model.equationConnections[0];\r\n      const states = equations[0].states;\r\n      for (let i = 0, max = states.length; i < max; i++) {\r\n        if (states[i].product === m) {\r\n          return i;\r\n        }\r\n      }\r\n      return connection.indexOf(m);\r\n    }\r\n\r\n    function matrixToString(m, stateIndex) {\r\n      if (!m || !m.rows || !m.columns) return 'null';\r\n\r\n      if (m === model.input) return `json.input`;\r\n      if (m === model.outputConnector) return `json.outputConnector`;\r\n      if (m === model.output) return `json.output`;\r\n\r\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\r\n        let hiddenLayer = model.hiddenLayers[i];\r\n        for (let p in hiddenLayer) {\r\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\r\n          if (hiddenLayer[p] !== m) continue;\r\n          return `json.hiddenLayers[${ i }].${ p }`;\r\n        }\r\n      }\r\n\r\n      return matrixOrigin(m, stateIndex);\r\n    }\r\n\r\n    function toInner(fnString) {\r\n      // crude, but should be sufficient for now\r\n      // function() { body }\r\n      fnString = fnString.toString().split('{');\r\n      fnString.shift();\r\n      // body }\r\n      fnString = fnString.join('{');\r\n      fnString = fnString.split('}');\r\n      fnString.pop();\r\n      // body\r\n      return fnString.join('}').split('\\n').join('\\n        ')\r\n        .replace('product.deltas[i] = 0;', '')\r\n        .replace('product.deltas[column] = 0;', '')\r\n        .replace('left.deltas[leftIndex] = 0;', '')\r\n        .replace('right.deltas[rightIndex] = 0;', '')\r\n        .replace('product.deltas = left.deltas.slice(0);', '');\r\n    }\r\n\r\n    function fileName(fnName) {\r\n      return `src/recurrent/matrix/${ fnName.replace(/[A-Z]/g, function(value) { return '-' + value.toLowerCase(); }) }.js`;\r\n    }\r\n\r\n    let statesRaw = [];\r\n    let usedFunctionNames = {};\r\n    let innerFunctionsSwitch = [];\r\n    for (let i = 0, max = states.length; i < max; i++) {\r\n      let state = states[i];\r\n      statesRaw.push(`states[${ i }] = {\r\n      name: '${ state.forwardFn.name }',\r\n      left: ${ matrixToString(state.left, i) },\r\n      right: ${ matrixToString(state.right, i) },\r\n      product: ${ matrixToString(state.product, i) }\r\n    }`);\r\n\r\n      let fnName = state.forwardFn.name;\r\n      if (!usedFunctionNames[fnName]) {\r\n        usedFunctionNames[fnName] = true;\r\n        innerFunctionsSwitch.push(\r\n          `        case '${ fnName }': //compiled from ${ fileName(fnName) }\r\n          ${ toInner(state.forwardFn.toString()) }\r\n          break;`\r\n        );\r\n      }\r\n    }\r\n\r\n    const src = `\r\n  if (typeof rawInput === 'undefined') rawInput = [];\r\n  if (typeof maxPredictionLength === 'undefined') maxPredictionLength = 100;\r\n  if (typeof isSampleI === 'undefined') isSampleI = false;\r\n  if (typeof temperature === 'undefined') temperature = 1;\r\n  ${ (this.dataFormatter !== null) ? this.dataFormatter.toFunctionString() : '' }\r\n  \r\n  var input = ${\r\n      (this.dataFormatter !== null && typeof this.formatDataIn === 'function')\r\n        ? 'formatDataIn(rawInput)' \r\n        : 'rawInput'\r\n    };\r\n  var json = ${ jsonString };\r\n  var _i = 0;\r\n  var output = [];\r\n  var states = [];\r\n  var prevStates;\r\n  while (true) {\r\n    var previousIndex = (_i === 0\r\n        ? 0\r\n        : _i < input.length\r\n          ? input[_i - 1] + 1\r\n          : output[_i - 1])\r\n          ;\r\n    var rowPluckIndex = previousIndex;\r\n    prevStates = states;\r\n    states = [];\r\n    ${ statesRaw.join(';\\n    ') };\r\n    for (var stateIndex = 0, stateMax = ${ statesRaw.length }; stateIndex < stateMax; stateIndex++) {\r\n      var state = states[stateIndex];\r\n      var product = state.product;\r\n      var left = state.left;\r\n      var right = state.right;\r\n      \r\n      switch (state.name) {\r\n${ innerFunctionsSwitch.join('\\n') }\r\n      }\r\n    }\r\n    \r\n    var logProbabilities = state.product;\r\n    if (temperature !== 1 && isSampleI) {\r\n      for (var q = 0, nq = logProbabilities.weights.length; q < nq; q++) {\r\n        logProbabilities.weights[q] /= temperature;\r\n      }\r\n    }\r\n\r\n    var probs = softmax(logProbabilities);\r\n    var nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\r\n    \r\n    _i++;\r\n    if (nextIndex === 0) {\r\n      break;\r\n    }\r\n    if (_i >= maxPredictionLength) {\r\n      break;\r\n    }\r\n\r\n    output.push(nextIndex);\r\n  }\r\n  ${ (this.dataFormatter !== null && typeof this.formatDataOut === 'function') \r\n      ? 'return formatDataOut(input, output.slice(input.length).map(function(value) { return value - 1; }))'\r\n      : 'return output.slice(input.length).map(function(value) { return value - 1; })' };\r\n  function Matrix(rows, columns) {\r\n    this.rows = rows;\r\n    this.columns = columns;\r\n    this.weights = zeros(rows * columns);\r\n  }\r\n  ${ this.dataFormatter !== null && typeof this.formatDataIn === 'function'\r\n      ? `function formatDataIn(input, output) { ${\r\n          toInner(this.formatDataIn.toString())\r\n            .replace(/this[.]dataFormatter[\\n\\s]+[.]/g, '')\r\n            .replace(/this[.]dataFormatter[.]/g, '')\r\n            .replace(/this[.]dataFormatter/g, 'true')\r\n        } }`\r\n      : '' }\r\n  ${ this.dataFormatter !== null && typeof this.formatDataOut === 'function'\r\n        ? `function formatDataOut(input, output) { ${\r\n            toInner(this.formatDataOut.toString())\r\n              .replace(/this[.]dataFormatter[\\n\\s]+[.]/g, '')\r\n              .replace(/this[.]dataFormatter[.]/g, '')\r\n              .replace(/this[.]dataFormatter/g, 'true')\r\n          } }` \r\n        : '' }\r\n  ${ zeros.toString() }\r\n  ${ softmax.toString().replace('_2.default', 'Matrix') }\r\n  ${ randomF.toString() }\r\n  ${ sampleI.toString() }\r\n  ${ maxI.toString() }`;\r\n    return new Function('rawInput', 'maxPredictionLength', 'isSampleI', 'temperature', src);\r\n  }\r\n}\r\n\r\nRNN.defaults = {\r\n  inputSize: 20,\r\n  inputRange: 20,\r\n  hiddenSizes:[20,20],\r\n  outputSize: 20,\r\n  learningRate: 0.01,\r\n  decayRate: 0.999,\r\n  smoothEps: 1e-8,\r\n  regc: 0.000001,\r\n  clipval: 5,\r\n  json: null,\r\n  /**\r\n   *\r\n   * @param {*[]} data\r\n   * @returns {Number[]}\r\n   */\r\n  setupData: function(data) {\r\n    if (\r\n      typeof data[0] !== 'string'\r\n      && !Array.isArray(data[0])\r\n      && (\r\n        !data[0].hasOwnProperty('input')\r\n        || !data[0].hasOwnProperty('output')\r\n      )\r\n    ) {\r\n      return data;\r\n    }\r\n    let values = [];\r\n    const result = [];\r\n    if (typeof data[0] === 'string' || Array.isArray(data[0])) {\r\n      if (this.dataFormatter === null) {\r\n        for (let i = 0; i < data.length; i++) {\r\n          values.push(data[i]);\r\n        }\r\n        this.dataFormatter = new DataFormatter(values);\r\n      }\r\n      for (let i = 0, max = data.length; i < max; i++) {\r\n        result.push(this.formatDataIn(data[i]));\r\n      }\r\n    } else {\r\n      if (this.dataFormatter === null) {\r\n        for (let i = 0; i < data.length; i++) {\r\n          values.push(data[i].input);\r\n          values.push(data[i].output);\r\n        }\r\n        this.dataFormatter = DataFormatter.fromArrayInputOutput(values);\r\n      }\r\n      for (let i = 0, max = data.length; i < max; i++) {\r\n        result.push(this.formatDataIn(data[i].input, data[i].output));\r\n      }\r\n    }\r\n    return result;\r\n  },\r\n  /**\r\n   *\r\n   * @param {*[]} input\r\n   * @param {*[]} output\r\n   * @returns {Number[]}\r\n   */\r\n  formatDataIn: function(input, output = null) {\r\n    if (this.dataFormatter !== null) {\r\n      if (this.dataFormatter.indexTable.hasOwnProperty('stop-input')) {\r\n        return this.dataFormatter.toIndexesInputOutput(input, output);\r\n      } else {\r\n        return this.dataFormatter.toIndexes(input);\r\n      }\r\n    }\r\n    return input;\r\n  },\r\n  /**\r\n   *\r\n   * @param {Number[]} input\r\n   * @param {Number[]} output\r\n   * @returns {*}\r\n   */\r\n  formatDataOut: function(input, output) {\r\n    if (this.dataFormatter !== null) {\r\n      return this.dataFormatter\r\n        .toCharacters(output)\r\n        .join('');\r\n    }\r\n    return output;\r\n  },\r\n  dataFormatter: null\r\n};\r\n\r\nRNN.trainDefaults = {\r\n  iterations: 20000,\r\n  errorThresh: 0.005,\r\n  log: false,\r\n  logPeriod: 10,\r\n  learningRate: 0.3,\r\n  callback: null,\r\n  callbackPeriod: 10,\r\n  keepNetworkIntact: false\r\n};\r\n","import Matrix from './matrix';\r\nimport RandomMatrix from './matrix/random-matrix';\r\nimport RNN from './rnn';\r\n\r\nexport default class LSTM extends RNN {\r\n  getModel(hiddenSize, prevSize) {\r\n    return {\r\n      // gates parameters\r\n      //wix\r\n      inputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08),\r\n      //wih\r\n      inputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\r\n      //bi\r\n      inputBias: new Matrix(hiddenSize, 1),\r\n\r\n      //wfx\r\n      forgetMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08),\r\n      //wfh\r\n      forgetHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\r\n      //bf\r\n      forgetBias: new Matrix(hiddenSize, 1),\r\n\r\n      //wox\r\n      outputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08),\r\n      //woh\r\n      outputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\r\n      //bo\r\n      outputBias: new Matrix(hiddenSize, 1),\r\n\r\n      // cell write params\r\n      //wcx\r\n      cellActivationMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08),\r\n      //wch\r\n      cellActivationHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\r\n      //bc\r\n      cellActivationBias: new Matrix(hiddenSize, 1)\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Equation} equation\r\n   * @param {Matrix} inputMatrix\r\n   * @param {Matrix} previousResult\r\n   * @param {Object} hiddenLayer\r\n   * @returns {Matrix}\r\n   */\r\n  getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\r\n    let sigmoid = equation.sigmoid.bind(equation);\r\n    let add = equation.add.bind(equation);\r\n    let multiply = equation.multiply.bind(equation);\r\n    let multiplyElement = equation.multiplyElement.bind(equation);\r\n    let tanh = equation.tanh.bind(equation);\r\n\r\n    let inputGate = sigmoid(\r\n      add(\r\n        add(\r\n          multiply(\r\n            hiddenLayer.inputMatrix,\r\n            inputMatrix\r\n          ),\r\n          multiply(\r\n            hiddenLayer.inputHidden,\r\n            previousResult\r\n          )\r\n        ),\r\n        hiddenLayer.inputBias\r\n      )\r\n    );\r\n\r\n    let forgetGate = sigmoid(\r\n      add(\r\n        add(\r\n          multiply(\r\n            hiddenLayer.forgetMatrix,\r\n            inputMatrix\r\n          ),\r\n          multiply(\r\n            hiddenLayer.forgetHidden,\r\n            previousResult\r\n          )\r\n        ),\r\n        hiddenLayer.forgetBias\r\n      )\r\n    );\r\n\r\n    // output gate\r\n    let outputGate = sigmoid(\r\n      add(\r\n        add(\r\n          multiply(\r\n            hiddenLayer.outputMatrix,\r\n            inputMatrix\r\n          ),\r\n          multiply(\r\n            hiddenLayer.outputHidden,\r\n            previousResult\r\n          )\r\n        ),\r\n        hiddenLayer.outputBias\r\n      )\r\n    );\r\n\r\n    // write operation on cells\r\n    let cellWrite = tanh(\r\n      add(\r\n        add(\r\n          multiply(\r\n            hiddenLayer.cellActivationMatrix,\r\n            inputMatrix\r\n          ),\r\n          multiply(\r\n            hiddenLayer.cellActivationHidden,\r\n            previousResult\r\n          )\r\n        ),\r\n        hiddenLayer.cellActivationBias\r\n      )\r\n    );\r\n\r\n    // compute new cell activation\r\n    let retainCell = multiplyElement(forgetGate, previousResult); // what do we keep from cell\r\n    let writeCell = multiplyElement(inputGate, cellWrite); // what do we write to cell\r\n    let cell = add(retainCell, writeCell); // new cell contents\r\n\r\n    // compute hidden state as gated, saturated cell activations\r\n    return multiplyElement(\r\n      outputGate,\r\n      tanh(cell)\r\n    );\r\n  }\r\n}\r\n","import Matrix from './matrix';\r\nimport RandomMatrix from './matrix/random-matrix';\r\nimport RNN from './rnn';\r\n\r\nexport default class GRU extends RNN {\r\n  getModel(hiddenSize, prevSize) {\r\n    return {\r\n      // update Gate\r\n      //wzxh\r\n      updateGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08),\r\n      //wzhh\r\n      updateGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\r\n      //bz\r\n      updateGateBias: new Matrix(hiddenSize, 1),\r\n\r\n      // reset Gate\r\n      //wrxh\r\n      resetGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08),\r\n      //wrhh\r\n      resetGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\r\n      //br\r\n      resetGateBias: new Matrix(hiddenSize, 1),\r\n\r\n      // cell write parameters\r\n      //wcxh\r\n      cellWriteInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08),\r\n      //wchh\r\n      cellWriteHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\r\n      //bc\r\n      cellWriteBias: new Matrix(hiddenSize, 1)\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Equation} equation\r\n   * @param {Matrix} inputMatrix\r\n   * @param {Matrix} previousResult\r\n   * @param {Object} hiddenLayer\r\n   * @returns {Matrix}\r\n   */\r\n  getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\r\n    let sigmoid = equation.sigmoid.bind(equation);\r\n    let add = equation.add.bind(equation);\r\n    let multiply = equation.multiply.bind(equation);\r\n    let multiplyElement = equation.multiplyElement.bind(equation);\r\n    let tanh = equation.tanh.bind(equation);\r\n    let allOnes = equation.allOnes.bind(equation);\r\n    let cloneNegative = equation.cloneNegative.bind(equation);\r\n\r\n    // update gate\r\n    let updateGate = sigmoid(\r\n      add(\r\n        add(\r\n          multiply(\r\n            hiddenLayer.updateGateInputMatrix,\r\n            inputMatrix\r\n          ),\r\n          multiply(\r\n            hiddenLayer.updateGateHiddenMatrix,\r\n            previousResult\r\n          )\r\n        ),\r\n        hiddenLayer.updateGateBias\r\n      )\r\n    );\r\n\r\n    // reset gate\r\n    let resetGate = sigmoid(\r\n        add(\r\n          add(\r\n            multiply(\r\n              hiddenLayer.resetGateInputMatrix,\r\n              inputMatrix\r\n            ),\r\n            multiply(\r\n              hiddenLayer.resetGateHiddenMatrix,\r\n              previousResult\r\n            )\r\n          ),\r\n          hiddenLayer.resetGateBias\r\n        )\r\n    );\r\n\r\n    // cell\r\n    let cell = tanh(\r\n      add(\r\n        add(\r\n          multiply(\r\n            hiddenLayer.cellWriteInputMatrix,\r\n            inputMatrix\r\n          ),\r\n          multiply(\r\n            hiddenLayer.cellWriteHiddenMatrix,\r\n            multiplyElement(\r\n              resetGate,\r\n              previousResult\r\n            )\r\n          )\r\n        ),\r\n        hiddenLayer.cellWriteBias\r\n      )\r\n    );\r\n\r\n    // compute hidden state as gated, saturated cell activations\r\n    // negate updateGate\r\n    return add(\r\n      multiplyElement(\r\n        add(\r\n          allOnes(updateGate.rows, updateGate.columns),\r\n          cloneNegative(updateGate)\r\n        ),\r\n        cell\r\n      ),\r\n      multiplyElement(\r\n        previousResult,\r\n        updateGate\r\n      )\r\n    );\r\n  }\r\n}\r\n","export default function mse2d(errors) {\r\n  // mean squared error 2d\r\n  let sum = 0;\r\n  let length = errors.length * errors[0].length;\r\n  for (let y = 0; y < errors.length; y++) {\r\n    for (let x = 0; x < errors[y].length; x++) {\r\n      sum += Math.pow(errors[y][x], 2);\r\n    }\r\n  }\r\n  return sum / length;\r\n}\r\n","const layer = require('../layer');\r\n\r\nexport default function layerFromJSON(jsonLayer) {\r\n  if (!layer.hasOwnProperty(jsonLayer.type)) return null;\r\n  const Layer = layer[jsonLayer.type];\r\n  const realLayer = Reflect.construct(Layer, arguments);\r\n  for (let p in jsonLayer) {\r\n    if (!jsonLayer.hasOwnProperty(p)) continue;\r\n    if (p === 'type') continue;\r\n    realLayer[p] = jsonLayer[p];\r\n  }\r\n  return realLayer;\r\n}","import makeKernel from '../utilities/make-kernel';\r\nimport zeros2D from '../utilities/zeros-2d';\r\n\r\nexport default class MomentumRootMeanSquaredPropagation {\r\n  static get defaults() {\r\n    return {\r\n      decayRate: 0.999,\r\n      regularizationStrength: 0.000001,\r\n      learningRate: 0.01,\r\n      smoothEps: 1e-8,\r\n      clipValue: 5\r\n    };\r\n  }\r\n\r\n  constructor(layer, settings = {}) {\r\n    this.layer = layer;\r\n    this.width = layer.width;\r\n    this.height = layer.height;\r\n    this.momentums = zeros2D(layer.width, layer.height);\r\n    Object.assign(this, this.constructor.defaults, settings);\r\n    this.setupKernels();\r\n  }\r\n\r\n  run(previousLayer, nextLayer, learningRate) {\r\n    const output = this.kernel(\r\n      this.layer.weights,\r\n      this.layer.deltas,\r\n      this.momentums\r\n    );\r\n    this.momentums = output.momentums;\r\n    return output.result;\r\n  }\r\n\r\n  setupKernels() {\r\n    this.kernel = makeKernel(momentumRootMeanSquaredPropagation, {\r\n      output: [this.width, this.height],\r\n      constants: {\r\n        clipValue: this.clipValue,\r\n        decayRate: this.decayRate,\r\n        learningRate: this.learningRate,\r\n        regularizationStrength: this.regularizationStrength,\r\n        smoothEps: this.smoothEps\r\n      },\r\n      functions: [\r\n        clipByValue\r\n      ],\r\n      map: {\r\n        momentums: getMomentum\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * @description Mathematician friendly name of MomentumRootMeanSquaredPropagation class. For those that are not mere mortals\r\n * @type {MomentumRootMeanSquaredPropagation}\r\n */\r\nconst MRmsProp = MomentumRootMeanSquaredPropagation;\r\n\r\n/**\r\n * @description Momentum Root Mean Square Propagation Function\r\n * @returns {number}\r\n */\r\nfunction momentumRootMeanSquaredPropagation(\r\n  weights, deltas, previousMomentums) {\r\n  const delta = deltas[this.thread.y][this.thread.x];\r\n  const clippedDelta = clipByValue(delta, this.constants.clipValue, -this.constants.clipValue);\r\n  const weight = weights[this.thread.y][this.thread.x];\r\n  const previousMomentum = previousMomentums[this.thread.y][this.thread.x];\r\n  const momentum = getMomentum(delta, this.constants.decayRate, previousMomentum);\r\n  return weight + -this.constants.learningRate * clippedDelta / Math.sqrt(momentum + this.constants.smoothEps) - this.constants.regularizationStrength * weight;\r\n}\r\n\r\nfunction getMomentum(delta, decay, previousMomentum) {\r\n  return previousMomentum * decay + (1 - decay) * delta * delta;\r\n}\r\n\r\nexport function clipByValue(value, max, min) {\r\n  if (value > max) {\r\n    return max;\r\n  }\r\n  if (value < min) {\r\n    return min;\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function isClippedByValue(value, max, min) {\r\n  if (value > max) {\r\n    return 1;\r\n  }\r\n  if (value < min) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport {\r\n  getMomentum,\r\n  MRmsProp\r\n};\r\n","import MomentumRootMeanSquaredPropagation, { MRmsProp } from './momentum-root-mean-squared-propagation';\r\nfunction momentumRootMeanSquaredPropagation(layer, settings) {\r\n  return new MomentumRootMeanSquaredPropagation(layer, settings);\r\n}\r\n\r\nconst mRmsProp = momentumRootMeanSquaredPropagation;\r\nexport {\r\n  MomentumRootMeanSquaredPropagation,\r\n  momentumRootMeanSquaredPropagation,\r\n  MRmsProp,\r\n  mRmsProp\r\n}","export default function traverseLayersFrom(layer, cb) {\r\n  if (layer.hasOwnProperty('inputLayer')) {\r\n    traverseLayersFrom(layer.inputLayer, cb);\r\n  } else {\r\n    if (layer.hasOwnProperty('inputLayer1')) {\r\n      traverseLayersFrom(layer.inputLayer1, cb);\r\n    }\r\n    if (layer.hasOwnProperty('inputLayer2')) {\r\n      traverseLayersFrom(layer.inputLayer2, cb);\r\n    }\r\n  }\r\n  cb(layer);\r\n};","import traverseLayersFrom from './traverse-layers-from';\r\n\r\nexport default function flattenLayers(layers) {\r\n  const result = layers.slice(0);\r\n  for (let i = 0; i < result.length; i++) {\r\n    let offset = 0;\r\n    traverseLayersFrom(result[i], (layer) => {\r\n      if (result.indexOf(layer) === -1) {\r\n        result.splice(i + offset, 0, layer);\r\n        offset++;\r\n      }\r\n    });\r\n  }\r\n  return result;\r\n}","import lookup from './lookup';\r\nimport TrainStream from './train-stream';\r\nimport mse2d from './utilities/mse-2d';\r\nimport layerFromJSON from './utilities/layer-from-json';\r\nimport * as praxis from './praxis';\r\nimport flattenLayers from './utilities/flatten-layers';\r\n\r\nexport default class FeedForward {\r\n  static get trainDefaults() {\r\n    return {\r\n      iterations: 20000,\r\n      errorThresh: 0.005,\r\n      log: false,\r\n      logPeriod: 10,\r\n      learningRate: 0.3,\r\n      callback: null,\r\n      callbackPeriod: 10,\r\n      reinforce: false\r\n    };\r\n  }\r\n\r\n  static get defaults() {\r\n    return {\r\n      learningRate: 0.3,\r\n      binaryThresh: 0.5,\r\n      hiddenLayers: null,\r\n      inputLayer: null,\r\n      outputLayer: null,\r\n      praxis: (layer) => praxis.momentumRootMeanSquaredPropagation(layer)\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param options\r\n   * @private\r\n   */\r\n  static _validateTrainingOptions(options) {\r\n    const validations = {\r\n      iterations: (val) => { return typeof val === 'number' && val > 0; },\r\n      errorThresh: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\r\n      log: (val) => { return typeof val === 'function' || typeof val === 'boolean'; },\r\n      logPeriod: (val) => { return typeof val === 'number' && val > 0; },\r\n      learningRate: (val) => { return typeof val === 'number' && val > 0 && val < 1; },\r\n      callback: (val) => { return typeof val === 'function' || val === null },\r\n      callbackPeriod: (val) => { return typeof val === 'number' && val > 0; },\r\n      timeout: (val) => { return typeof val === 'number' && val > 0 }\r\n    };\r\n    Object.keys(FeedForward.trainDefaults).forEach(key => {\r\n      if (validations.hasOwnProperty(key) && !validations[key](options[key])) {\r\n        throw new Error(`[${key}, ${options[key]}] is out of normal training range, your network will probably not train.`);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param log\r\n   * if a method is passed in method is used\r\n   * if false passed in nothing is logged\r\n   * @returns error\r\n   */\r\n  _setLogMethod(log) {\r\n    if (typeof log === 'function'){\r\n      this.trainOpts.log = log;\r\n    } else if (log) {\r\n      this.trainOpts.log = console.log;\r\n    } else {\r\n      this.trainOpts.log = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param opts\r\n   *    Supports all `trainDefaults` properties\r\n   *    also supports:\r\n   *       learningRate: (number)\r\n   */\r\n  _updateTrainingOptions(opts) {\r\n    Object.keys(this.constructor.trainDefaults).forEach(opt => this.trainOpts[opt] = (opts.hasOwnProperty(opt)) ? opts[opt] : this.trainOpts[opt]);\r\n    this.constructor._validateTrainingOptions(this.trainOpts);\r\n    this._setLogMethod(opts.log || this.trainOpts.log);\r\n  }\r\n\r\n  static get structure() {\r\n    return {\r\n      layers: null,\r\n      _inputLayer: null,\r\n      _outputLayer: null\r\n    };\r\n  }\r\n  /**\r\n   *\r\n   * @param {object} options\r\n   * @constructor\r\n   */\r\n  constructor(options = {}) {\r\n    this.inputLayer = null;\r\n    this.hiddenLayers = null;\r\n    this.outputLayer = null;\r\n    this.errorCheckInterval = 100;\r\n    Object.assign(this, this.constructor.defaults, options);\r\n    this.trainOpts = {};\r\n    this._updateTrainingOptions(Object.assign({}, this.constructor.trainDefaults, options));\r\n    Object.assign(this, this.constructor.structure);\r\n  }\r\n\r\n  _connectLayers() {\r\n    const layers = [];\r\n    this._inputLayer = this.inputLayer();\r\n    const hiddenLayers = this._connectHiddenLayers(this._inputLayer);\r\n    this._outputLayer = this.outputLayer(hiddenLayers[hiddenLayers.length - 1], hiddenLayers.length);\r\n    layers.push(this._inputLayer);\r\n    layers.push.apply(layers, hiddenLayers);\r\n    layers.push(this._outputLayer);\r\n    this.layers = flattenLayers(layers);\r\n  }\r\n\r\n  _connectHiddenLayers(previousLayer) {\r\n    const hiddenLayers = [];\r\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\r\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, i);\r\n      hiddenLayers.push(hiddenLayer);\r\n      previousLayer = hiddenLayer;\r\n    }\r\n    return hiddenLayers;\r\n  }\r\n\r\n  initialize() {\r\n    this._connectLayers();\r\n    this.initializeLayers(this.layers);\r\n  }\r\n\r\n  initializeLayers(layers) {\r\n    for (let i = 0; i < layers.length; i++) {\r\n      const layer = layers[i];\r\n      layer.setupKernels();\r\n      if (layer.hasOwnProperty('praxis') && layer.praxis === null) {\r\n        layer.praxis = this.praxis(layer);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param input\r\n   * @returns {*}\r\n   */\r\n  run(input) {\r\n    if (this.inputLookup) {\r\n      input = lookup.toArray(this.inputLookup, input);\r\n    }\r\n\r\n    let output = this.runInput(input);\r\n\r\n    if (this.outputLookup) {\r\n      output = lookup.toHash(this.outputLookup, output);\r\n    }\r\n    return output;\r\n  }\r\n\r\n  runInput(input) {\r\n    this.layers[0].predict(input);\r\n    for (let i = 1; i < this.layers.length; i++) {\r\n      this.layers[i].predict();\r\n    }\r\n    return this.layers[this.layers.length - 1].weights;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @param options\r\n   * @returns {{error: number, iterations: number}}\r\n   */\r\n  train(data, options = {}) {\r\n    let status, endTime;\r\n    ({ data, status, endTime } = this._prepTraining(data, options));\r\n\r\n    while (this._trainingTick(data, status, endTime));\r\n    return status;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {object} data\r\n   * @param {object} status { iterations: number, error: number }\r\n   * @param endTime\r\n   */\r\n  _trainingTick(data, status, endTime) {\r\n    if (status.iterations >= this.trainOpts.iterations || status.error <= this.trainOpts.errorThresh || Date.now() >= endTime) {\r\n      return false;\r\n    }\r\n\r\n    status.iterations++;\r\n\r\n    if (this.trainOpts.log && (status.iterations % this.trainOpts.logPeriod === 0)) {\r\n      status.error = this._calculateTrainingError(data);\r\n      this.trainOpts.log(`iterations: ${status.iterations}, training error: ${status.error}`);\r\n    } else {\r\n      if (status.iterations % this.errorCheckInterval === 0) {\r\n        status.error = this._calculateTrainingError(data);\r\n      } else {\r\n        this._trainPatterns(data);\r\n      }\r\n    }\r\n\r\n    if (this.trainOpts.callback && (status.iterations % this.trainOpts.callbackPeriod === 0)) {\r\n      this.trainOpts.callback(Object.assign(status));\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @param options\r\n   * @protected\r\n   * @return { data, status, endTime }\r\n   */\r\n  _prepTraining(data, options) {\r\n    this._updateTrainingOptions(options);\r\n    data = this._formatData(data);\r\n    const endTime = Date.now() + this.trainOpts.timeout;\r\n\r\n    const status = {\r\n      error: 1,\r\n      iterations: 0\r\n    };\r\n\r\n    this.initialize();\r\n\r\n    return {\r\n      data,\r\n      status,\r\n      endTime\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @returns {Number} error\r\n   */\r\n  _calculateTrainingError(data) {\r\n    let sum = 0;\r\n    for (let i = 0; i < data.length; ++i) {\r\n      sum += this._trainPattern(data[i].input, data[i].output, true);\r\n    }\r\n    return sum / data.length;\r\n  }\r\n\r\n  /**\r\n   * @param data\r\n   * @private\r\n   */\r\n  _trainPatterns(data) {\r\n    for (let i = 0; i < data.length; ++i) {\r\n      this._trainPattern(data[i].input, data[i].output, false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param input\r\n   * @param target\r\n   * @param {Boolean} logErrorRate\r\n   */\r\n  _trainPattern(input, target, logErrorRate) {\r\n\r\n    // forward propagate\r\n    this.runInput(input);\r\n\r\n    // back propagate\r\n    this._calculateDeltas(target);\r\n    this._adjustWeights();\r\n\r\n    if (logErrorRate) {\r\n      return mse2d(this._outputLayer.errors.hasOwnProperty('toArray') ? this._outputLayer.errors.toArray() : this._outputLayer.errors);\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  _calculateDeltas(target) {\r\n    this._outputLayer.compare(target);\r\n    for (let i = this.layers.length - 2; i > -1; i--) {\r\n      const previousLayer = this.layers[i - 1];\r\n      const nextLayer = this.layers[i + 1];\r\n      this.layers[i].compare(previousLayer, nextLayer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  _adjustWeights() {\r\n    for (let i = 0; i < this.layers.length; i++) {\r\n      this.layers[i].learn(this.layers[i-1], this.layers[i+1], this.trainOpts.learningRate);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @returns {*}\r\n   */\r\n  _formatData(data) {\r\n    if (!Array.isArray(data)) { // turn stream datum into array\r\n      let tmp = [];\r\n      tmp.push(data);\r\n      data = tmp;\r\n    }\r\n    // turn sparse hash input into arrays with 0s as filler\r\n    let datum = data[0].input;\r\n    if (!Array.isArray(datum) && !(datum instanceof Float32Array)) {\r\n      if (!this.inputLookup) {\r\n        this.inputLookup = lookup.buildLookup(data.map(value => value['input']));\r\n      }\r\n      data = data.map(datum => {\r\n        let array = lookup.toArray(this.inputLookup, datum.input);\r\n        return Object.assign({}, datum, { input: array });\r\n      }, this);\r\n    }\r\n\r\n    if (!Array.isArray(data[0].output)) {\r\n      if (!this.outputLookup) {\r\n        this.outputLookup = lookup.buildLookup(data.map(value => value['output']));\r\n      }\r\n      data = data.map(datum => {\r\n        let array = lookup.toArray(this.outputLookup, datum.output);\r\n        return Object.assign({}, datum, { output: array });\r\n      }, this);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param data\r\n   * @returns {\r\n   *  {\r\n   *    error: number,\r\n   *    misclasses: Array\r\n   *  }\r\n   * }\r\n   */\r\n  test(data) {\r\n    /* istanbul ignore next */\r\n    throw new Error('not yet implemented');\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  toJSON() {\r\n    const jsonLayers = [];\r\n    for (let i = 0; i < this.layers.length; i++) {\r\n      const layer = this.layers[i];\r\n      const jsonLayer = layer.toJSON();\r\n      if (layer.hasOwnProperty('inputLayer')) {\r\n        jsonLayer.inputLayerIndex = this.layers.indexOf(layer.inputLayer);\r\n      } else {\r\n        if (layer.hasOwnProperty('inputLayer1') && layer.hasOwnProperty('inputLayer2')) {\r\n          jsonLayer.inputLayer1Index = this.layers.indexOf(layer.inputLayer1);\r\n          jsonLayer.inputLayer2Index = this.layers.indexOf(layer.inputLayer2);\r\n        }\r\n      }\r\n      jsonLayers.push(jsonLayer);\r\n    }\r\n    return  {\r\n      layers: jsonLayers\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param json\r\n   * @param [getLayer]\r\n   * @returns {FeedForward}\r\n   */\r\n  static fromJSON(json, getLayer) {\r\n    const jsonLayers = json.layers;\r\n    const layers = [];\r\n    const inputLayer = layerFromJSON(jsonLayers[0]) || getLayer(jsonLayers[0]);\r\n    layers.push(inputLayer);\r\n    for (let i = 1; i < jsonLayers.length; i++) {\r\n      const jsonLayer = jsonLayers[i];\r\n      if (jsonLayer.hasOwnProperty('inputLayerIndex')) {\r\n        const inputLayer = layers[jsonLayer.inputLayerIndex];\r\n        layers.push(layerFromJSON(jsonLayer, inputLayer) || getLayer(jsonLayer, inputLayer));\r\n      } else {\r\n        if (!jsonLayer.hasOwnProperty('inputLayer1Index')) throw new Error('inputLayer1Index not defined');\r\n        if (!jsonLayer.hasOwnProperty('inputLayer2Index')) throw new Error('inputLayer2Index not defined');\r\n        const inputLayer1 = layers[jsonLayer.inputLayer1Index];\r\n        const inputLayer2 = layers[jsonLayer.inputLayer2Index];\r\n\r\n        if (inputLayer1 === undefined) throw new Error(`layer of index ${jsonLayer.inputLayer1Index} not found`);\r\n        if (inputLayer2 === undefined) throw new Error(`layer of index ${jsonLayer.inputLayer2Index} not found`);\r\n\r\n        layers.push(layerFromJSON(jsonLayer, inputLayer) || getLayer(jsonLayer, inputLayer1, inputLayer2));\r\n      }\r\n    }\r\n\r\n    const net = new FeedForward(json);\r\n    net.layers = layers;\r\n    return net;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Function}\r\n   */\r\n  toFunction() {\r\n    /* istanbul ignore next */\r\n    throw new Error('not yet implemented');\r\n  }\r\n\r\n  /**\r\n   * This will create a TrainStream (WriteStream) for us to send the training data to.\r\n   * @param opts training options\r\n   * @returns {TrainStream|*}\r\n   */\r\n  createTrainStream(opts) {\r\n    /* istanbul ignore next */\r\n    throw new Error('not yet implemented');\r\n  }\r\n}","export default class RecurrentConnection {\r\n  setLayer(layer) {\r\n    this.layer = layer;\r\n  }\r\n  get width() {\r\n    return this.layer.width;\r\n  }\r\n  get height() {\r\n    return this.layer.height;\r\n  }\r\n  get deltas() {\r\n    return this.layer.deltas;\r\n  }\r\n  set deltas(deltas) {\r\n    this.layer.deltas = deltas;\r\n  }\r\n  get weights() {\r\n    return this.layer.weights;\r\n  }\r\n  set weights(weights) {\r\n    this.layer.weights = weights;\r\n  }\r\n  predict() {}\r\n  compare() {}\r\n  learn() {}\r\n  setupKernels() {}\r\n  reuseKernels() {}\r\n}","import zeros2D from '../utilities/zeros-2d';\r\nimport Base from './base';\r\n\r\nexport default class RecurrentInput extends Base {\r\n  setRecurrentInput(recurrentInput) {\r\n    this.recurrentInput = recurrentInput;\r\n    this.validate();\r\n  }\r\n  validate() {\r\n    super.validate();\r\n    if (this.width !== this.recurrentInput.width) {\r\n      throw new Error(`${this.constructor.name} layer width ${this.width} and ${this.recurrentInput.constructor.name} width (${this.recurrentInput.width}) are not same`);\r\n    }\r\n\r\n    if (this.height !== this.recurrentInput.height) {\r\n      throw new Error(`${this.constructor.name} layer height ${this.height} and ${this.recurrentInput.constructor.name} width (${this.recurrentInput.height}) are not same`);\r\n    }\r\n  }\r\n  setDimensions(width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.weights = new zeros2D(width, height);\r\n    this.deltas = new zeros2D(width, height);\r\n  }\r\n\r\n  predict() {\r\n    this.weights = this.recurrentInput.weights;\r\n  }\r\n  compare() {}\r\n}","import zeros2D from '../utilities/zeros-2d';\r\nimport Base from './base';\r\n\r\nexport default class RecurrentZeros extends Base {\r\n  constructor(settings) {\r\n    super(settings);\r\n    this.validate();\r\n  }\r\n  setDimensions(width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.weights = new zeros2D(width, height);\r\n    this.deltas = new zeros2D(width, height);\r\n  }\r\n  predict() {}\r\n  compare() {}\r\n  validate() {}\r\n}","export default function traverseLayersExcludingFrom(layer, inputLayer, recurrentLayer, cb) {\r\n  if (\r\n    layer === inputLayer\r\n    || layer === recurrentLayer) return;\r\n  if (layer.hasOwnProperty('inputLayer')) {\r\n    traverseLayersExcludingFrom(layer.inputLayer, inputLayer, recurrentLayer, cb);\r\n  } else {\r\n    if (layer.hasOwnProperty('inputLayer1')) {\r\n      traverseLayersExcludingFrom(layer.inputLayer1, inputLayer, recurrentLayer, cb);\r\n    }\r\n    if (layer.hasOwnProperty('inputLayer2')) {\r\n      traverseLayersExcludingFrom(layer.inputLayer2, inputLayer, recurrentLayer, cb);\r\n    }\r\n  }\r\n  cb(layer);\r\n};","import traverseLayersExcludingFrom from './traverse-layers-excluding-from';\r\n\r\nexport default function flattenLayersExcluding(layers, inputLayer, recurrentLayer) {\r\n  const result = layers.slice(0);\r\n  for (let i = 0; i < result.length; i++) {\r\n    let offset = 0;\r\n    traverseLayersExcludingFrom(result[i], inputLayer, recurrentLayer, (layer) => {\r\n      if (result.indexOf(layer) === -1) {\r\n        result.splice(i + offset, 0, layer);\r\n        offset++;\r\n      }\r\n    });\r\n  }\r\n  return result;\r\n}","import RecurrentConnection from './layer/recurrent-connection';\r\nimport RecurrentInput from './layer/recurrent-input';\r\nimport RecurrentZeros from './layer/recurrent-zeros';\r\nimport flattenLayers from './utilities/flatten-layers';\r\nimport flattenLayersExcluding from './utilities/flatten-layers-excluding';\r\nimport mse2d from './utilities/mse-2d';\r\nimport FeedForward from './feed-forward';\r\n\r\nexport default class Recurrent extends FeedForward {\r\n  static get structure() {\r\n    return {\r\n      /**\r\n       *\r\n       * _inputLayers are a 1 dimensional array of input layers defined once\r\n       * @type Object[]\r\n       * @private\r\n       */\r\n      _inputLayers: null,\r\n\r\n      /**\r\n       * _hiddenLayers are a 2 dimensional array of hidden layers defined for each recursion\r\n       * @type Object[][]\r\n       * @private\r\n       */\r\n      _hiddenLayers: null,\r\n\r\n      /**\r\n       * _outputLayers are a 1 dimensional array of output layers defined once\r\n       * @type Object[]\r\n       * @private\r\n       */\r\n      _outputLayers: null,\r\n      _praxises: null,\r\n      _outputConnection: null\r\n    };\r\n  }\r\n\r\n  _connectLayers() {\r\n    const initialLayers = [];\r\n    const inputLayer = this.inputLayer();\r\n    const hiddenLayers = this._connectHiddenLayers(inputLayer);\r\n    this._outputConnection.setLayer(hiddenLayers[hiddenLayers.length - 1]);\r\n    const outputLayer = this.outputLayer(\r\n      this._outputConnection,\r\n      hiddenLayers.length\r\n    );\r\n    initialLayers.push(inputLayer);\r\n    initialLayers.push.apply(initialLayers, hiddenLayers);\r\n    initialLayers.push(outputLayer);\r\n    const flattenedLayers = flattenLayers(initialLayers);\r\n    this._inputLayers = flattenedLayers.slice(0, flattenedLayers.indexOf(inputLayer) + 1);\r\n    this._hiddenLayers = [flattenedLayers.slice(flattenedLayers.indexOf(inputLayer) + 1, flattenedLayers.indexOf(hiddenLayers[hiddenLayers.length - 1]) + 1)];\r\n    this._outputLayers = flattenedLayers.slice(flattenedLayers.indexOf(hiddenLayers[hiddenLayers.length - 1]) + 1);\r\n    this._outputLayers.unshift();\r\n  }\r\n\r\n  _connectHiddenLayers(previousLayer) {\r\n    const hiddenLayers = [];\r\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\r\n      const recurrentInput = new RecurrentZeros();\r\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, recurrentInput, i);\r\n      previousLayer = hiddenLayer;\r\n      hiddenLayers.push(hiddenLayer);\r\n    }\r\n    return hiddenLayers;\r\n  }\r\n\r\n  _connectHiddenLayersDeep(previousLayer) {\r\n    const hiddenLayers = [];\r\n    const previousHiddenLayers = this._hiddenLayers[this._hiddenLayers.length - 1];\r\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\r\n      const recurrentInput = new RecurrentInput();\r\n      const hiddenLayer = this.hiddenLayers[i](\r\n        previousLayer,\r\n        recurrentInput,\r\n        i\r\n      );\r\n      previousLayer = hiddenLayer;\r\n      hiddenLayers.push(hiddenLayer);\r\n      recurrentInput.setRecurrentInput(previousHiddenLayers[i]);\r\n      recurrentInput.validate();\r\n\r\n    }\r\n    const flattenedHiddenLayers = flattenLayersExcluding(hiddenLayers, this._inputLayers[this._inputLayers.length - 1], previousHiddenLayers[previousHiddenLayers.length - 1]);\r\n    this._hiddenLayers.push(flattenedHiddenLayers);\r\n    return flattenedHiddenLayers;\r\n  }\r\n\r\n  initialize() {\r\n    this._praxises = [];\r\n    this._outputConnection = new RecurrentConnection();\r\n    this._connectLayers();\r\n    this.initializeLayers(this._inputLayers);\r\n    this.initializeLayers(this._hiddenLayers[0]);\r\n    this.initializeLayers(this._outputLayers);\r\n  }\r\n\r\n  initializeDeep() {\r\n    const input = this._inputLayers[this._inputLayers.length - 1];\r\n    const hiddenLayers = this._connectHiddenLayersDeep(input);\r\n    for (let i = 0; i < hiddenLayers.length; i++) {\r\n      const hiddenLayer = hiddenLayers[i];\r\n      hiddenLayer.reuseKernels(this._hiddenLayers[0][i]);\r\n    }\r\n  }\r\n\r\n  runInput(input) {\r\n    for (let x = 0; x < input.length; x++) {\r\n      const hiddenConnection = this._hiddenLayers[x][this._hiddenLayers[x].length - 1];\r\n      this._outputConnection.setLayer(hiddenConnection);\r\n      this._inputLayers[0].predict([input[x]]);\r\n      for (let i = 1; i < this._inputLayers.length; i++) {\r\n        this._inputLayers[i].predict();\r\n      }\r\n      for (let i = 0; i < this._hiddenLayers[x].length; i++) {\r\n        this._hiddenLayers[x][i].predict();\r\n      }\r\n      for (let i = 0; i < this._outputLayers.length; i++) {\r\n        this._outputLayers[i].predict();\r\n      }\r\n    }\r\n    return this._outputLayers[this._outputLayers.length - 1].weights;\r\n  }\r\n\r\n  _calculateDeltas(target, offset) {\r\n    for (let x = target.length - 1; x >= 0; x--) {\r\n      const hiddenLayersIndex = offset + x;\r\n      const hiddenConnection = this._hiddenLayers[hiddenLayersIndex][this._hiddenLayers[hiddenLayersIndex].length - 1];\r\n      this._outputConnection.setLayer(hiddenConnection);\r\n      this._outputLayers[this._outputLayers.length - 1].compare([target[x]]);\r\n      for (let i = this._outputLayers.length - 2; i >= 0; i--) {\r\n        this._outputLayers[i].compare();\r\n      }\r\n      for (let i = this._hiddenLayers[hiddenLayersIndex].length - 1; i >= 0; i--) {\r\n        this._hiddenLayers[hiddenLayersIndex][i].compare();\r\n      }\r\n      for (let i = this._inputLayers.length - 1; i >= 0; i--) {\r\n        this._inputLayers[i].compare();\r\n      }\r\n    }\r\n  }\r\n\r\n  _adjustWeights() {\r\n    for (let hiddenLayersIndex = 0; hiddenLayersIndex < this._hiddenLayers.length; hiddenLayersIndex++) {\r\n      const hiddenConnection = this._hiddenLayers[hiddenLayersIndex][this._hiddenLayers[hiddenLayersIndex].length - 1];\r\n      this._outputConnection.setLayer(hiddenConnection);\r\n      for (let i = 1; i < this._inputLayers.length; i++) {\r\n        this._inputLayers[i].learn();\r\n      }\r\n      for (let i = 0; i < this._hiddenLayers[hiddenLayersIndex].length; i++) {\r\n        this._hiddenLayers[hiddenLayersIndex][i].learn();\r\n      }\r\n      for (let i = 0; i < this._outputLayers.length; i++) {\r\n        this._outputLayers[i].learn();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number[]} input\r\n   * @param {number[]} target\r\n   * @param {Boolean} [logErrorRate]\r\n   */\r\n  trainPattern(input, target, logErrorRate) {\r\n\r\n    // forward propagate\r\n    this.runInput(input);\r\n\r\n    // back propagate\r\n    this._calculateDeltas(target, input.length - 1);\r\n    this._calculateDeltas(input.slice(1), 0);\r\n    this._adjustWeights();\r\n\r\n    if (logErrorRate) {\r\n      const outputLayer = this._outputLayers[this._outputLayers.length - 1];\r\n      return mse2d(outputLayer.errors.hasOwnProperty('toArray') ? outputLayer.errors.toArray() : outputLayer.errors);\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}","import crossValidate from './cross-validate';\r\nimport * as layer from './layer';\r\nimport * as activation from './activation';\r\nimport likely from './likely';\r\nimport lookup from './lookup';\r\nimport NeuralNetwork from './neural-network';\r\nimport NeuralNetworkGPU from './neural-network-gpu';\r\nimport TrainStream from './train-stream';\r\nimport RNN from './recurrent/rnn';\r\nimport LSTM from './recurrent/lstm';\r\nimport GRU from './recurrent/gru';\r\nimport FeedForward from './feed-forward';\r\nimport Recurrent from './recurrent';\r\nimport praxis from './praxis';\r\n\r\nconst utilities = {\r\n  max: require('./utilities/max').default,\r\n  mse: require('./utilities/mse').default,\r\n  ones: require('./utilities/ones').default,\r\n  random: require('./utilities/random').default,\r\n  randomWeight: require('./utilities/random-weight').default,\r\n  randos: require('./utilities/randos').default,\r\n  range: require('./utilities/range').default,\r\n  toArray: require('./utilities/to-array').default,\r\n  DataFormatter: require('./utilities/data-formatter').default,\r\n  zeros: require('./utilities/zeros').default,\r\n};\r\n\r\nconst brain = {\r\n  crossValidate,\r\n  likely,\r\n  lookup,\r\n  NeuralNetwork,\r\n  NeuralNetworkGPU,\r\n  TrainStream,\r\n  recurrent: {\r\n    RNNTimeStep,\r\n    LSTMTimeStep,\r\n    GRUTimeStep,\r\n    RNN,\r\n    LSTM,\r\n    GRU,\r\n  },\r\n  utilities,\r\n};\r\n\r\nexport {\r\n  FeedForward,\r\n  Recurrent,\r\n  activation,\r\n  layer,\r\n  praxis\r\n};\r\n"]}